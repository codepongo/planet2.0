<?xml version="1.0"?>
<rdf:RDF
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:foaf="http://xmlns.com/foaf/0.1/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns="http://purl.org/rss/1.0/"
>
<channel rdf:about="rss">
	<title>CodePongo RSS Reader</title>
	<link>rss</link>
	<description>CodePongo RSS Reader - rss</description>

	<items>
		<rdf:Seq>
			<rdf:li rdf:resource="http://www.ifanr.com/?p=347768&amp;utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=" />
			<rdf:li rdf:resource="http://www.cnblogs.com/lpshou/p/3323696.html" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252846.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252845.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252844.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252843.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252842.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252841.htm" />
			<rdf:li rdf:resource="http://www.cnblogs.com/graphics/p/3044238.html" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252840.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252839.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252838.htm" />
			<rdf:li rdf:resource="http://www.cnblogs.com/pengdonglin137/p/3323663.html" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252837.htm" />
			<rdf:li rdf:resource="http://www.cnblogs.com/CrazyProgram/p/How-to-learn-programing.html" />
			<rdf:li rdf:resource="http://www.cnblogs.com/geniusvczh/p/3323637.html" />
			<rdf:li rdf:resource="http://www.cppblog.com/vczh/archive/2013/09/16/203249.html" />
			<rdf:li rdf:resource="http://www.udpwork.com/item/10682.html" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252836.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252835.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252834.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252833.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252832.htm" />
			<rdf:li rdf:resource="http://www.cnblogs.com/skywang12345/p/3308762.html" />
			<rdf:li rdf:resource="http://www.ifanr.com/?p=347626&amp;utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=" />
			<rdf:li rdf:resource="http://www.cnblogs.com/artech/p/attribute-routing-01.html" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252831.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252830.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252829.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252828.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252827.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252826.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252825.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252824.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252823.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252822.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252821.htm" />
			<rdf:li rdf:resource="http://www.cnblogs.com/baihmpgy/p/3323565.html" />
			<rdf:li rdf:resource="http://www.cnblogs.com/cmt/p/3323563.html" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252820.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252819.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252818.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252817.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252816.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252815.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252814.htm" />
			<rdf:li rdf:resource="http://www.cnblogs.com/trytocatch/p/boundlesscyclicbarrier.html" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252813.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252812.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252811.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252810.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252809.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252808.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252807.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252806.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252805.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252804.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252803.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252802.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252801.htm" />
			<rdf:li rdf:resource="http://www.codeproject.com/Articles/5851/Versioning-Controlled-Build" />
			<rdf:li rdf:resource="http://www.codeproject.com/Articles/653608/Robot-Alarm-Clock" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252800.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252799.htm" />
			<rdf:li rdf:resource="http://www.cnblogs.com/yexiaochai/p/3322477.html" />
			<rdf:li rdf:resource="http://www.cnblogs.com/lyhabc/p/3322437.html" />
			<rdf:li rdf:resource="http://blog.jobbole.com/?p=47031" />
			<rdf:li rdf:resource="http://www.cnblogs.com/wukong65/p/3321683.html" />
			<rdf:li rdf:resource="http://www.cnblogs.com/zuoxiaolong/p/life9.html" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252798.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252797.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252796.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252795.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252794.htm" />
			<rdf:li rdf:resource="http://www.cnblogs.com/daoluanxiaozi/p/3323352.html" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252793.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252792.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252791.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252790.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252789.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252788.htm" />
			<rdf:li rdf:resource="http://www.cnbeta.com/articles/252787.htm" />
		</rdf:Seq>
	</items>
</channel>

<item rdf:about="http://www.ifanr.com/?p=347768&amp;utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=">
	<title>爱范儿＊Beats of Bits: Chromebook Pixel 前途未卜，会有下一代吗？</title>
	<link>http://www.ifanr.com/347768?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=</link>
	<content:encoded>&lt;p&gt;&lt;a href=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/DSC_0518.jpg&quot; rel=&quot;lightbox[347768]&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347808&quot; alt=&quot;DSC_0518&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/DSC_0518.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一提到 Chromebook，大家脑海中想到的就是仅有一个浏览器的低价笔记本，除了一个异类。&lt;a href=&quot;http://www.ifanr.com/251957&quot;&gt;Chromebook Pixel &lt;/a&gt;直接把 Chromebook 的价格区间上限提高到了 1499 美元档次，一跃成为高端笔记本电脑。&lt;/p&gt;
&lt;p&gt;碍于 Chrome OS 这个尚不完善的系统和 Chromebook Pixel 高昂的售价，虽然&lt;a href=&quot;http://www.ifanr.com/256218&quot;&gt;媒体们&lt;/a&gt;对于这款机器的做工性能没有挑剔，对于那块 3:2 的12.85 英寸 2560 x 1700 239 ppi 超高清触摸屏更是赞不绝口，但是还是一致表示，这不是一款大众产品，有这个价钱最好还是出门左拐 Macbook Pro 更合理。&lt;span id=&quot;more-347768&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以，Chromebook Pixel 有些像是 Google 的玩票之作，有没有二代或者升级版还很难说。&lt;a href=&quot;http://www.pcworld.com/article/2048605/haswell-chromebooks-promise-the-all-day-battery-life-of-old.html&quot;&gt;PC World &lt;/a&gt;在上周 Google 和 Intel 联合&lt;img alt=&quot;&quot; src=&quot;file://C:\Users\pwen\AppData\Local\Temp\SGTpbq\1848\15081532.gif&quot; /&gt;众厂商发布新一代的 Chromebook 时评论说到了 Pixel 的未来（原文有修改）：&lt;/p&gt;
&lt;p&gt;来自 Google 产品管理部门的主管  Caesar Sengupta 在一个小圆桌会议上告诉记者，各厂商各品牌将为旗下的 Chromebook 制造各自的旗舰产品，而曾经的 Chromebook 中的标杆 Pixel 将不会升级了。这款搭载了 Ivy Bridge 处理器，拥有 2560 x 1700 分辨率炫目显示屏的笔记本电脑只是一个展示炫耀 Chrome OS 平台的原型机概念，将不会重现了。&lt;/p&gt;
&lt;p&gt;眼看 Chromebook 家族都已经升级到 Haswell 平台，续航性能都有所提升，曾经的标杆 Pixel 却被冷落。作为 Pixel 用户的 Gigaom 作者 Kevin C. Tofel 按捺不住，直接联系了 Google 方面的代表，得到了&lt;a href=&quot;http://gigaom.com/2013/09/13/no-google-didnt-say-the-pixel-wont-see-a-refresh/&quot;&gt;如下答复&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;“我们没有说 Pixel 将不会有下一款，我们也不会去评论未来的产品或没有宣布的产品。在 Pixel 启动之初，我们就是为了在它身上采用最好的硬件、软件和设计，用以激励下一代 Chromebook。同时也是为了生态圈，为了推动高 DPI 网页浏览的体验，于是我们推出了 Pixel。”&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;在发布之初，Google 已经&lt;a href=&quot;http://www.ifanr.com/252201&quot;&gt;明确表示&lt;/a&gt;是为生活在云端的超级用户准备的，不是面向普通消费者，当然，普通消费者也不会去选择它。Google 代表否定了其主管关于 Pixel 的言论，然后是没有实际意义的官样话，琢磨不出什么。&lt;/p&gt;
&lt;p&gt;在本届&lt;a href=&quot;http://www.ifanr.com/news/344024&quot;&gt; Intel IDF&lt;/a&gt; 上可以看到最近各厂商对于 Chromebook 的兴趣还是比较浓厚的，Pixel 的所谓的“激励”作用看来是有效的，那么按照 Google 最近构建&lt;a href=&quot;http://www.ifanr.com/342868&quot;&gt; Chrome Apps &lt;/a&gt;的动作，加上 Chrome 在低端市场上&lt;a href=&quot;http://www.ifanr.com/news/315528&quot;&gt;不错的表现&lt;/a&gt;，以及 Google 历来对于 Chrome OS 的重视程度，还有垂直整合了 Google 服务的 Chrome OS 更符合 Google 的气质，基于这么多原因，自家产品 Pixel 仅发售一代有些说不过去。&lt;/p&gt;
&lt;p&gt;Chromebook 市场需要一款像 Pixel 这样的产品来作为代表，而 Google 也需要 Pixel 这样一款精良的产品来炫技。另外，由于产量和定价原因，Pixel 对于其他 Chromebook 的影响很小。&lt;a href=&quot;http://www.ifanr.com/343700&quot;&gt;Haswell &lt;/a&gt;时代已经来临，2560 x 1700 分辨率也不再是独领风骚，5 小时的续航更难当大用，Pixel 是时候升级了，如果它还有的话。&lt;/p&gt;
    &lt;div id=&quot;ifanr_profile&quot;&gt;
        &lt;div&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://www.ifanr.com/author/owen&quot;&gt;&lt;img class=&quot;gravatar&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/08/touxiang1.jpg&quot; width=&quot;50&quot; height=&quot;50&quot; /&gt;&lt;/a&gt;
            &lt;div&gt;
                &lt;div&gt;
                    &lt;div&gt;&lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.ifanr.com/author/owen&quot;&gt;刘学文&lt;/a&gt;&lt;/strong&gt;&lt;/div&gt;
                    &lt;div&gt;在命运的塑料大棚里，每棵被喷了过多农药的白菜心中，都曾经有一个成为无公害有机蔬菜的梦想。&lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;div&gt;
                                                                            &lt;a target=&quot;_blank&quot; href=&quot;mailto:owenliu@ifanr.com&quot;&gt;邮箱&lt;/a&gt;

                            
                                                                            &lt;a target=&quot;_blank&quot; href=&quot;http://weibo.com/u/1731822990&quot;&gt;新浪微博&lt;/a&gt;

                            
                            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;p&gt;#欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。&lt;/p&gt;&lt;img src=&quot;http://ifanr.feedsportal.com/c/33866/f/642084/s/347768/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/144540365956/u/362/f/642084/c/33866/s/347768/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/144540365956/u/362/f/642084/c/33866/s/347768/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/144540365956/u/362/f/642084/c/33866/s/347768/a2t.img&quot; border=&quot;0&quot; /&gt;&lt;a href=&quot;http://126.am/3Ppe70&quot;&gt;
                    &lt;img src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/爱范儿RSS广告位投放素材609-150-1m.jpg&quot; /&gt;
                &lt;/a&gt;&lt;p&gt;
&lt;a href=&quot;http://www.ifanr.com&quot;&gt;爱范儿 · Beats of Bits&lt;/a&gt; |
&lt;a href=&quot;http://www.ifanr.com/347768&quot;&gt;原文链接&lt;/a&gt; ·
&lt;a href=&quot;http://www.ifanr.com/347768#comments&quot;&gt;查看评论&lt;/a&gt; ·
&lt;a href=&quot;http://www.weibo.com/ifanr&quot;&gt;新浪微博&lt;/a&gt; ·
&lt;a href=&quot;http://www.ifanr.com/weixin&quot;&gt;微信订阅&lt;/a&gt; ·
&lt;a href=&quot;http://bbs.ifanr.com/&quot;&gt;加入爱范社区！&lt;/a&gt; 
&lt;/p&gt;

&lt;br /&gt;
&lt;div&gt;
&lt;/div&gt;</content:encoded>
	<dc:date>2013-09-16T02:25:03+00:00</dc:date>
</item>
<item rdf:about="http://www.cnblogs.com/lpshou/p/3323696.html">
	<title>博客园_首页: 进程与线程 - lpshou</title>
	<link>http://www.cnblogs.com/lpshou/p/3323696.html</link>
	<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;目录：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span&gt;&lt;strong&gt;1、进程管理&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;span&gt;（1）进程的三种基本状态&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; （2）临界资源、临界区&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（3）进程同步原则&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; （4）进程同步方式&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; （5）进程通信方式&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;&amp;nbsp; 2、线程管理&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; （1）线程的基本操作&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; （2）线程同步方式&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; （3）线程通信方式&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp; 3、进程与线程的区别&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp; 4、进程池、线程池&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;hr /&gt;&lt;hr /&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;1、进程管理&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;1.1 进程的三种基本状态&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/382323/201309/16095953-7dd303e2a05242fdbdb0df9c9e64226a.jpg&quot; alt=&quot;&quot; /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&quot;file://C:/Documents%20and%20Settings/Administrator/Local%20Settings/Application%20Data/youdao/ynote/images/811B5A7C361A4D58BD4101D63B3529A6/020BFFFF7D265EB21DB744309282B8A8.jpg&quot; alt=&quot;&quot; /&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;就绪（Ready)状态&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;进程已经分配到除cpu之外的所有必要资源，只要获得cpu，便可立即执行；一个系统中处于就绪状态的进程可能有多个，通常将他们排成一个队列，称为就绪队列；&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;执行状态&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;span&gt;进程已经获得cpu，其程序正在执行。单处理机系统中，只有一个进程处于执行状态，多处理机系统中，则有多个进程处于执行状态&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;阻塞状态&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;span&gt;正在执行的进程由于&amp;ldquo;请求io，申请缓冲空间&amp;rdquo;等，无法继续执行，便放弃处理机处于阻塞状态&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;1.2 进程同步&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;一组在异步环境下的并发进程，各自的执行结果互为对方的执行条件，从而限制各进程的执行速度的过程称为并发进程之间的直接制约。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;把异步环境下的一组并发进程，因直接制约而相互发送消息而进行相互合作、相互等待，使得各个进程按一定速度执行的过程称为进程间的同步。（计算机操作系统教程，张尧学）&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;进程同步的主要任务是对多个相关进程在执行次序上进行协调，以使并发执行的各个进程之间能有效的共享资源和相互合作，从而使程序的执行具有可再现性。（计算机操作系统，汤子瀛）这个定义更好一些。&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;(1)两种制约关系&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a,间接制约&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;span&gt;处于同一系统中的进程，共享某种系统资源，比如打印机，所谓简介相互制约即源于这种资源共享；&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b,直接制约&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;span&gt;这种制约主要源于进程间的合作，例如，一个输入进程A通过单缓冲向进程B提供数据，当缓冲为空时，B会阻塞，当A把数据放入缓冲区时，将B唤醒；反之，当缓冲区已经满时，A阻塞，当B将缓冲区数据取走后便可以唤醒A；&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;(2)临界资源，临界区&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;link：&lt;a href=&quot;http://baike.baidu.com/view/1237110.htm&quot;&gt;http://baike.baidu.com/view/1237110.htm&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;/strong&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;不论是硬件&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;http://baike.baidu.com/view/809614.htm&quot; target=&quot;_blank&quot;&gt;临界资源&lt;/a&gt;&lt;span&gt;，还是&lt;/span&gt;&lt;a href=&quot;http://baike.baidu.com/view/37.htm&quot; target=&quot;_blank&quot;&gt;软件&lt;/a&gt;&lt;a href=&quot;http://baike.baidu.com/view/809614.htm&quot; target=&quot;_blank&quot;&gt;临界资源&lt;/a&gt;&lt;span&gt;，多个进程必须互斥地对它进行访问。每个进程中访问&lt;/span&gt;&lt;a href=&quot;http://baike.baidu.com/view/809614.htm&quot; target=&quot;_blank&quot;&gt;临界资源&lt;/a&gt;&lt;span&gt;的那段代码称为临界区（Critical Section）（临界资源是一次仅允许一个进程使用的共享资源，比如打印机、磁带机等）。每次只准许一个进程进入临界区，进入后不允许其他进程进入。不论是硬件临界资源，还是&lt;/span&gt;&lt;a href=&quot;http://baike.baidu.com/view/37.htm&quot; target=&quot;_blank&quot;&gt;软件&lt;/a&gt;&lt;span&gt;临界资源，多个进程必须互斥地对它进行访问。&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; 无论是硬件临界资源，还是软件临界资源，多个进程必须互斥的对它进行访问，人们把在每个进程中访问临界资源的那段代码称为临界区，显然，如果能保证并发进程互斥的进入自己的临界区，并可以实现诸进程对临界资源的互斥访问；因此，每个进程在进入临界区之前，应先对欲访问的临界资源进行检查，看它是否正被访问，如果此刻临界资源未被访问，进程便可以进入临界区对此资源进行访问，并设置它正被访问的标志；如果该临界资源正被某个进程访问，则本进程不能进入临界区。&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;&lt;span&gt;（3）同步机制应遵循的原则&lt;/span&gt;&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; 为了实现进程互斥的进入自己的临界区，可以用软件方法，更多的是在系统中设置专门的同步机构来协调各进程的运行，所有的同步机制都应遵循以下四条准则：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;空闲让进：当无进程处于临界区时，应允许一个进程进入临界区；&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; 忙则等待：当已有进程进入临界区时，其他进程则等待；&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; 有限等待：对要求访问临街资源的进程，应保证在有限时间内进入自己的临界区；避免&amp;ldquo;死等&amp;rdquo;；&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; 让权等待：当进程不能进入自己的临界区时，应立即释放处理机，以免进程陷入&amp;ldquo;忙等&amp;rdquo;状态；&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;（4）同步方式&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;（a）信号量&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span&gt;信号量是一种卓有成效的进程同步工具，有整型信号量、记录型信号量、AND信号量、信号量集&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;（b）管程机制（条件变量）&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;div class=&quot;multicntwrap&quot;&gt;&lt;div class=&quot;multicnt&quot;&gt;&lt;div&gt;&lt;h3 class=&quot;title pre fs1&quot;&gt;&lt;span class=&quot;tcnt&quot;&gt;进程间同步总结（linux windows）&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;/h3&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class=&quot;tdep clearfix nbw-act fc06&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; windows进程间同步方式有：1. 互斥量 mutex 2. 信号量 semaphore 3.事件 event 4.临界区 Critical Section 5.互锁函数&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;bct fc05 fc11 nbw-blog ztag js-fs2&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 临界区和互锁函数没有相应的内核对象因而不能跨进程&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; linux进程同步方式有：互斥量、读写锁、条件变量&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; linux内核同步方法：原子操作、自旋锁、读-写自旋锁、信号量、读-写信号量、完成变量、BKL、禁止抢占（preemp_disable()preemp_enable()）&lt;/div&gt;&lt;div&gt;&lt;strong&gt;&lt;span&gt;（5）进程通信方式&lt;/span&gt;&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;管道（Pipe）及有名管道（named pipe）：管道可用于具有亲缘关系进程间的通信，有名管道克服了管道没有名字的限制，因此，除具有管道所具有的功能外，它还允许无亲缘关系进程间的通信；&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;消息队列：消息队列是消息的链接表，包括Posix消息队列system V消息队列。有足够权限的进程可以向队列中添加消息，被赋予读权限的进程则可以读走队列中的消息。消息队列克服了信号承载信息量少，管道只能承载无格式字节流以及缓冲区大小受限等缺点。&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;共享内存：使得多个进程可以访问同一块内存空间，&lt;/span&gt;&lt;span&gt;是最快的可用IPC形式&lt;/span&gt;&lt;span&gt;。是针对其他通信机制运行效率较低而设计的。往往与其它通信机制，如信号量结合使用，来达到进程间的同步及互斥。&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;信号量（semaphore）：主要作为进程间以及同一进程不同线程之间的同步手段。&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;套接字（Socket）：更为一般的进程间通信机制，可用于不同机器之间的进程间通信。&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;hr /&gt;&lt;hr /&gt;&lt;strong&gt;2、线程管理&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;（1）线程基本操作&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;a、创建线程&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span&gt;int pthread_create(pthread_t *thread, pthread_attr_t*attr, void *(*start_routine)(void *), void *arg);&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //第一个参数是指向pthread_t类型数据的指针，第二个参数设置线程属性，一般为NULL&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //第三个参数表示线程将要启动执行的函数，第四个参数表示传递给该函数的参数&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //成功返回0，失败返回错误代码&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;b、向线程体传递参数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span&gt;pthread_create函数在创建线程时由内核向新线程传递参数，如果需要多个参数，则将参数组织在一个结构体内，再将结构体的地址作为参数传给新线程。&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;c、线程访问资源的限制&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;新线程和进程公用文件描述符、文件对象、数据段、堆和栈，因此在新线程中对这些资源的使用会影响到主线程。&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;d、终止线程&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span&gt;void pthread_exit(void *retval)&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //线程调用此函数终止执行&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //返回一个指向某个对象的指针，注意，绝对不能用它来返回一个指向局部变量的指针，因为线程调用该函数后，这个局部变量&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //就不存在了，&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;e、取消一个线程的运行&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span&gt;一个线程可以被另一个线程取消掉，linux下使用&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; int pthread_cancel(pthread_t tid);&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //参数表示要取消线程的线程ID，成功返回0，失败返回错误编号&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; pthread_exit(PTHREAD_CANCELED)；&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //调用pthread_cancel函数等效于要被取消的线程自己调用&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;f、线程退出函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;span&gt;一个线程在退出时也可以调用用户设置好的函数，这些函数成为线程清理程序，记录在栈中，linux中使用pthread_cleanup_push函数添加一个清理程序记录，使用pthread_cleanup_pop函数调用清理程序。&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; void pthread_cleanup_push(void (*rtn)(void *), void *arg);&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //第一个参数是一个函数指针，指向清理程序；第二个参数表示清理程序的参数。&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; void pthread_cleanup_pop(int execte);&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //表示是否执行栈顶的清理程序，参数为0时表示不执行清理程序，参数不为0时表示执行栈顶清理程序&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;pthread_cleanup_push会在3中情况下执行：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; （）调用pthread_exit函数时&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; （）线程被其他线程取消时&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; （）使用非零参数调用pthread_cleanup_pop时。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;（2）线程同步方式&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;当多个线程共享相同的内存时，需要确保每个线程看到一致的数据视图，如果每个线程使用的变量都是其他线程不会读取或修改的，那不不存在一致性问题，同样的，如果变量是只读的，多个线程同时读取变量也不会有一致性问题，但是当某个线程可以修改变量，而其他线程也可以读取或者修改这个变量时，就需要对这些线程进行同步，确保他们访问变量时不会读到无效的值。（UNIX环境高级编程）&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; 由于线程共享进程资源，因此在多线程并发执行的环境中就有可能出现冲突操作的情况&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;所谓线程同步是指线程&lt;/span&gt;&lt;/span&gt;&lt;span&gt;之间在相互通信时避免破坏各自数据的能力。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; 线程同步主要方式有&lt;span&gt;信号量&lt;/span&gt;、&lt;span&gt;互斥量、读写锁、条件变量。&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;参考：&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;（1）Linux程序设计p423&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;（2）Linux C 程序设计大全 p480&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;（3）线程同步方法：&amp;nbsp;&lt;a href=&quot;http://blog.csdn.net/zsf8701/article/details/7844316&quot;&gt;http://blog.csdn.net/zsf8701/article/details/7844316&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;（a）、信号量 #include&amp;lt;semaphore.h&amp;gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;如同进程一样，线程也可以通过信号量来实现通信，虽然是轻量级的。信号量函数的名字都以&quot;sem_&quot;打头。线程使用的基本信号量函数有四个。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;信号量初始化。&lt;br /&gt;int sem_init (sem_t *sem , int pshared, unsigned int value);&lt;br /&gt;这是对由sem指定的信号量进行初始化，设置好它的共享选项(linux 只支持为0，即表示它是当前进程的局部信号量)，然后给它一个初始值VALUE。&lt;/li&gt;&lt;li&gt;等待信号量。给信号量减1，然后等待直到信号量的值大于0。&lt;br /&gt;int sem_wait(sem_t *sem);&lt;/li&gt;&lt;li&gt;释放信号量。信号量值加1。并通知其他等待线程。&lt;br /&gt;int sem_post(sem_t *sem);&lt;/li&gt;&lt;li&gt;销毁信号量。我们用完信号量后都它进行清理。归还占有的一切资源。&lt;br /&gt;int sem_destroy(sem_t *sem);&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;（b）、互斥量 #include&amp;lt;pthread.h&amp;gt;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;互斥量作为一种锁，任何想要进入临界区的线程都要对获得锁，如果该锁已经被某一个线程所持有，则测试线程会阻塞，直到该锁被释放；Linux下用pthread_mutex_t数据类型表示互斥量，&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;初始化：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; pthread_mutex_init(pthread_mutex_t *restrict, const pthread_mutexattr*restrict attr);&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//第一个参数是互斥量的指针，第二个参数是互斥量的属性，成功返回0，失败返回错误号&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; 还有一种初始化方法，&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//使用系统已经定义好的互斥量&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;销毁：&lt;/strong&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;pthread_mutex_destroy(pthread_mutex_t *mutex);&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // 参数表示要销毁的互斥量，成功返回0，失败返回错误号&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;互斥量是一种对用户透明的数据结构，用户不可以直接对其进行操作，而应该使用系统提供的互斥量的函数接口；&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;加锁&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; int pthread_mutex_lock(pthread_mutex_t *mutex);&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //获取互斥量的锁&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; int pthread_mutex_trylock(pthread_mutex_t *mutex);&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //获取互斥量的锁&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; 二者的区别在于前者如果没有得到锁，会阻塞； 后者会返回一个错误编号EBUSY，表示该锁处于繁忙状态；&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;释放锁&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; int pthread_mutex_unlock(pthread_mutex_t *mutex);&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //成功返回0，失败返回错误号&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;（c）、读写锁&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;#include&amp;lt;pthread.h&amp;gt;&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; 读写锁与互斥量类似，但是并行性更高，其原因在于互斥锁每次只有一个线程可以得到锁进行操作，其余的线程都因为得不到锁而处于阻塞状态。创建多线程的本意是为了并发执行任务，但是由于互斥锁的缘故导致线程的操作变成了串行的，由此可知程序的运行效率会大大折扣。&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; 在程序执行中，如果对共享资源做读操作的线程远远大于写线程的时候，使用读写锁可以大大提高线程的并发度，从而提高程序运行的效率。&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; linux下用pthread_rwlock_t结构类型来表示读写锁，在使用读写锁之前要对其进行初始化&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;初始化：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; int pthread_rwlock_init(pthread_rwlock * restrict rwlock, const pthread_rwlockattr_t * restrict attr)&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //第一个参数是读写锁的指针；第二个参数是读写锁的属性，通常为NULL，成功返回0&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;销毁：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; int pthread_rwlock_destory(pthread_rwlock_t *rwlock);&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //参数表示需要销毁的读写锁，成功返回0，失败返回错误号&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;读模式下获取读写锁：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; int pthread_rwlock_rdlock(pthread_rwlock_t * rwlock); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; （1）&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; int pthread_rwlock_tryrdlock(pthread_rwlock_t *rwlock);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; （2）&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //参数表示一个读写锁，&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //如果该读写锁已经被某一个线程在读模式下得到，则测试线程仍然会得到该锁；&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //&lt;span&gt;如果该读写锁已经被某一个线程在写模式下得到，或者有一个线程在写模式下等待该锁，这时（1）会阻塞；（2）会返回EBUZY；&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //成功返回0， 失败返回错误号&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;写模式获取读写锁：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; int pthread_rwlock_wrlock(pthread_rwlock_t * rwlock); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;（1）&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; int pthread_rwlock_trywrlock(pthread_rwlock_t * rwlock); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;（2）&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //&lt;span&gt;如果在测试读写锁的时候有任意一个线程占有该锁，（1）会阻塞，并且会导致其后所有申请该读写锁的线程（包括读线程和写线程）阻塞等待，&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //（2）会返回EBUZY&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;释放读写锁：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; 无论线程在哪种模式下占有锁，都使用 &amp;nbsp;释放读写锁&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; int pthread_rwlock_unlock(pthread_rwlock_t *rwlock);&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; //成功返回0，失败返回错误号&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;（d）、条件变量&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;#include&amp;lt;pthread.h&amp;gt;&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;互斥锁不同，条件变量是用来等待而不是用来上锁的。条件变量用来自动阻塞一个线程，直到某特殊情况发生为止。通常条件变量和互斥锁同时使用。条件变量分为两部分: 条件和变量。条件本身是由互斥量保护的。线程在改变条件状态前先要锁住互斥量。条件变量使我们可以睡眠等待某种条件出现。条件变量是利用线程间共享的全局变量进行同步的一种机制，主要包括两个动作：一个线程等待&quot;条件变量的条件成立&quot;而挂起；另一个线程使&quot;条件成立&quot;（给出条件成立信号）。条件的检测是在互斥锁的保护下进行的。如果一个条件为假，一个线程自动阻塞，并释放等待状态改变的互斥锁。如果另一个线程改变了条件，它发信号给关联的条件变量，唤醒一个或多个等待它的线程，重新获得互斥锁，重新评价条件。如果两进程共享可读写的内存，条件变量可以被用来实现这两进程间的线程同步。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;初始化条件变量。&lt;br /&gt;静态态初始化，pthread_cond_t cond = PTHREAD_COND_INITIALIER;&lt;br /&gt;动态初始化，int pthread_cond_init(pthread_cond_t *cond, pthread_condattr_t *cond_attr);&lt;/li&gt;&lt;li&gt;等待条件成立。释放锁,同时阻塞等待条件变量为真才行。timewait()设置等待时间,仍未signal,返回ETIMEOUT(加锁保证只有一个线程wait)&lt;br /&gt;int pthread_cond_wait(pthread_cond_t *cond, pthread_mutex_t *mutex);&lt;br /&gt;int pthread_cond_timewait(pthread_cond_t *cond,pthread_mutex *mutex,const timespec *abstime);&lt;/li&gt;&lt;li&gt;激活条件变量。pthread_cond_signal,pthread_cond_broadcast（激活所有等待线程）&lt;br /&gt;int pthread_cond_signal(pthread_cond_t *cond);&lt;br /&gt;int pthread_cond_broadcast(pthread_cond_t *cond); //解除所有线程的阻塞&lt;/li&gt;&lt;li&gt;清除条件变量。无线程等待,否则返回EBUSY&lt;br /&gt;int pthread_cond_destroy(pthread_cond_t *cond);&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;strong&gt;（3）线程通信方式&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;线程间的通信目的主要是用于线程同步。所以线程没有像进程通信中的用于数据交换的通信机制。&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;所以线程通信方式：互斥量、读写锁、&lt;/strong&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;hr /&gt;&lt;hr /&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;3、进程与线程&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;的区别&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;&lt;strong&gt;link：&lt;a href=&quot;http://s.sousb.com/2011/04/12/%e8%bf%9b%e7%a8%8b%e4%b8%8e%e7%ba%bf%e7%a8%8b/&quot;&gt;http://s.sousb.com/2011/04/12/%e8%bf%9b%e7%a8%8b%e4%b8%8e%e7%ba%bf%e7%a8%8b/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;通常一个进程都拥有若干个线程，至少也有一个线程；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;&lt;span&gt;1）调度：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;进程是操作系统资源&lt;/span&gt;&lt;span&gt;（包括独立的&lt;strong&gt;虚拟地址空间&lt;/strong&gt;，拥有的资源如打开的文件，内存空间，I/O设备等）&lt;/span&gt;&lt;span&gt;分配的&lt;strong&gt;基本单位&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，而&lt;/span&gt;&lt;span&gt;线程是操作系统任务调度的基本单位&lt;/span&gt;&lt;span&gt;，拥有的&lt;/span&gt;&lt;strong&gt;资源&lt;/strong&gt;&lt;span&gt;相对进程来说较少，只有运行所必须的堆栈、寄存器等。&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;&lt;span&gt;2）地址空间：&lt;/span&gt;进程有独立的地址空间，&lt;/strong&gt;&lt;span&gt;线程没有独立的&lt;/span&gt;&lt;strong&gt;地址空间&lt;/strong&gt;&lt;span&gt;，&lt;/span&gt;&amp;nbsp;&lt;span&gt;只拥有一点在运行中必不可少的&lt;/span&gt;&lt;span&gt;资源(&lt;/span&gt;&lt;span&gt;如程序计数器,一组寄存器和栈),与同属一个进程的其他的线程共享进程所拥有的全部资源（全局数据、堆、栈、打开的文件、内存、I/O设备等）；.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;strong&gt;3）系统开销：&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;（a）在&lt;/span&gt;&lt;span&gt;创建和撤销进程&lt;/span&gt;&lt;span&gt;时&lt;/span&gt;&lt;/span&gt;&lt;span&gt;，系统都要为之创建和回收进程控制块，分配和回收资源，如内存空间和I/O设备等，操作系统所付出的开销明显大于线程创建或撤销时的开销。类似的，&lt;/span&gt;&lt;span&gt;&lt;span&gt;在&lt;/span&gt;&lt;span&gt;进程切换&lt;/span&gt;&lt;span&gt;时&lt;/span&gt;&lt;/span&gt;&lt;span&gt;，涉及到当前CPU环境的保存以及新被调度运行进程的CPU环境的设置； 而线程的切换仅需要保存和设置少量寄存器的内容，不涉及存储器管理方面的操作，所以切换代价也比较小；&lt;/span&gt;&lt;span&gt;（b）同步和通信：&lt;/span&gt;&lt;span&gt;由于一个进程中的多个线程具有相同的地址空间，在同步和通信的实现方面线程也比较容易&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;线程之间的通信简单（&lt;strong&gt;共享内存&lt;/strong&gt;即可，但须注意互斥访问的问题），而不同进程之间的通信更为复杂，通常需要调用内核实现，主要由以下几种：&lt;/span&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;管道（Pipe）及有名管道（named pipe）：管道可用于具有亲缘关系进程间的通信，有名管道克服了管道没有名字的限制，因此，除具有管道所具有的功能外，它还允许无亲缘关系进程间的通信；&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;消息队列：消息队列是消息的链接表，包括Posix消息队列system V消息队列。有足够权限的进程可以向队列中添加消息，被赋予读权限的进程则可以读走队列中的消息。消息队列克服了信号承载信息量少，管道只能承载无格式字节流以及缓冲区大小受限等缺点。&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;共享内存：使得多个进程可以访问同一块内存空间，&lt;/span&gt;&lt;span&gt;是最快的可用IPC形式&lt;/span&gt;&lt;span&gt;。是针对其他通信机制运行效率较低而设计的。往往与其它通信机制，如信号量结合使用，来达到进程间的同步及互斥。&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;信号量（semaphore）：主要作为进程间以及同一进程不同线程之间的同步手段。&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;套接字（Socket）：更为一般的进程间通信机制，可用于不同机器之间的进程间通信。&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;&amp;nbsp;link：&lt;/strong&gt;&lt;a href=&quot;http://www.cnblogs.com/lmule/archive/2010/08/18/1802774.html&quot;&gt;http://www.cnblogs.com/lmule/archive/2010/08/18/1802774.html&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;多进程、多线程：&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;用多进程时每个进程都有自己的地址空间，线程则共享地址空间。（所有其他区别都是由此而来）&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;速度：线程产生的速度快，线程间的通信快、切换快，因为他们在同一个地址空间内。&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;资源利用率：线程的资源利用率比较好也是因为他们在同一地址空间内。&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;同步问题： 线程使用公共变量或内存是需要使用同步机制，还是因为他们在同一地址空间内。&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;什么是线程安全?线程安全是怎么完成的(原理)?&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;线程安全就是说多线程访问同一代码，不会产生不确定的结果。编写线程安全的代码是低依靠线程同步。&lt;/span&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在多线程环境中，当各线程不共享数据的时候，那么一定是线程安全的。问题是这种情况并不多见，在多数情况下需要共享数据，这时就需要进行适当的同步控制了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;线程安全一般都涉及到synchronized&amp;nbsp;&lt;/span&gt;&lt;span&gt;就是一段代码同时只能有一个线程来操作 ，&lt;/span&gt;&lt;span&gt;不然中间过程可能会产生不可预制的结果&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你的代码所在的进程中有多个线程在同时运行，而这些线程可能会同时运行这段代码。如果每次运行结果和单线程运行的结果是一样的，而且其他的变量的值也和预期的是一样的，就是线程安全的。 &amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;hr /&gt;&lt;hr /&gt;&lt;span&gt;&lt;strong&gt;4、进程池、线程池&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;（1）线程和进程的选择&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;link：&lt;/strong&gt;&lt;a href=&quot;http://blog.csdn.net/wuxunfeng/article/details/5286540&quot;&gt;http://blog.csdn.net/wuxunfeng/article/details/5286540&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（a）线程与进程的选择：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;当连接之间的交互比较多，采用多线程更好；当网络连接之间不需要很多交互时，应选择进程；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;使用I/O多路复用,让单个进程可以处理多个连接,如果进程池只有一个进程, 同一个服务进程里的连接之间可以很方便的通讯,但是如果是多个子进程，那么子进程之间就不能直接通讯，通常要要消息队列、共享内存、管道等。&lt;strong&gt;当服务端需要处理连接之间的交互,而且性能上需要多个进程,那么使用线程池代替进程池应该是一种比较好的方式。&lt;/strong&gt;线程和进程相比较,线程的优点是性能开销更小,因为在同一个进程空间里,&lt;strong&gt;线程之间的通讯很容易&lt;/strong&gt;;因为线程共享进程空间数据,因此&lt;strong&gt;线程在处理的时候比进程更容易出错&lt;/strong&gt;,线程池的方式简化了通讯方式,但是为了线程安全,这方面的复杂性就增加了。所以如果网络连接之间并不需要很多交互,每个连接处理都是独立的,那么应该选择进程。这个原则不但对网络处理,对于别的处理也是如此。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（b）多进程与进程池的选择：&lt;/span&gt;&lt;span&gt;处理短连接，一般用进程池，处理长连接一般用多进程，方便一些&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; 这里说的进程池和多进程是，进程池是预先启动多个子进程，并且可以管理进程；多进程是指到主进程阻塞于ACCEPT处理连接请求，由子进程单独负责每个套接口连接。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;处理短连接连接，因为客户端频繁的连接服务器和断开连接，服务端的主要性能开销应该是在进程切换上，基于性能考虑采用进程池的方式会比多进程好.如果连接并发量不大,没有性能上的问题,多进程的程序会比进程池简单很多。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如果服务端处理的是长连接。如果让进程池或者多进程中一个子进程只处理一个连接,系统的主要性能开销主要取决于进程的数量,在进程的数量到一定数量的时候,会对服务器造成比较大的压力。所以在处理长连接时,一般才用I/O多路复用的方式,LINUX上I/O多路复用,有SELECT、EPOLL等。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;使用I/O多路复用一方面可以让单个进程同时多个连接,可以提高并发连接数。另一方面,还可以可以让CLIENT和SERVER的通讯更加灵活,例如使用I/O多路复用,让CLIENT和SERVER可以很容易的异步通讯。&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;strong&gt;（2）进程池&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;进程池技术的应该致少由以下两部分组成&lt;/span&gt;：&lt;strong&gt;link：&lt;a href=&quot;http://baike.baidu.com/view/4429048.htm&quot;&gt;http://baike.baidu.com/view/4429048.htm&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;para&quot;&gt;&lt;div class=&quot;para&quot;&gt;&lt;strong&gt;管理进程&lt;/strong&gt;&lt;/div&gt;&lt;div class=&quot;para&quot;&gt;管理进程负责创建资源进程，把工作交给空闲资源进程处理，回收已经处理完工作的资源进程。&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;para&quot;&gt;&lt;strong&gt;资源进程&lt;/strong&gt;&lt;/div&gt;&lt;div class=&quot;para&quot;&gt;预先创建好的空闲进程，管理进程会把工作分发到空闲进程来处理。&lt;/div&gt;&lt;div class=&quot;para&quot;&gt;上面资源进程跟管理进程的概念很好理解，下面就是进程池的关键，管理进程如何有效的管理资源进程，分配任务给资源进程，回收空闲资源进程，管理进程要有效的管理资源进程，那么管理进程跟资源进程间必然需要交互，通过IPC，信号，&lt;a href=&quot;http://baike.baidu.com/view/1303265.htm&quot; target=&quot;_blank&quot;&gt;信号量&lt;/a&gt;，&lt;a href=&quot;http://baike.baidu.com/view/262473.htm&quot; target=&quot;_blank&quot;&gt;消息队列&lt;/a&gt;，管道等进行交互。&lt;/div&gt;&lt;div class=&quot;para&quot;&gt;&lt;strong&gt;使用范围&lt;/strong&gt;&lt;/div&gt;&lt;div class=&quot;para&quot;&gt;&lt;span&gt;采用进程池节省了产生新进程，杀死进程的过程中分配资源回收资源的时间，但同时也占用了相当的内存资源。（以空间换时间）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;para&quot;&gt;&lt;span&gt;如果你的系统很忙，业务很频繁，频繁的开进程，杀进程，那建议用进程池。&lt;/span&gt;&lt;span&gt;开多大还要看你自己机器的具体情况，多测试得到最佳效果。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;para&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一个&lt;/span&gt;&lt;span&gt;非常简单&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;的http服务器，该服务器只能接收Get请求。&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;link：&lt;a href=&quot;http://blog.chinaunix.net/uid-20481436-id-1941519.html&quot;&gt;http://blog.chinaunix.net/uid-20481436-id-1941519.html&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;流程大概如下：&lt;/span&gt;&lt;br /&gt;&lt;span&gt;1，父进程listen，创建pipe（下面所有父子进程之间的通信都用该pipe）&lt;/span&gt;&lt;br /&gt;&lt;span&gt;2，父进程预fork n个子进程&lt;/span&gt;&lt;br /&gt;&lt;span&gt;3，各个子进程accept(listenfd)，即所有子进程竞争accept请求。由于listenfd是在fork之前就有的，所以所有子进程都可以访问到，不需用到&amp;ldquo;进程间文件描述符传递&amp;rdquo;问题；&lt;/span&gt;&lt;br /&gt;&lt;span&gt;4，子进程每accept到一个请求都告诉父进程，父进程把请求数加1；子进程没完成一个请求，父进程把请求数减1；当父进程发现请求数 &amp;gt;= 子进程数时，父进程创建新的子进程，并把子进程数加1（当然子进程数有个预先上限）；当父进程发现子进程数大于请求数加1时，父进程杀死多余的子进程。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;总的来说，思想是让子进程accept并处理请求，父进程通过子进程发来的信息控制请求数与子进程数之间的关系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;SPProcPool 是一个 linux/unix 平台上的进程池服务器框架&lt;/span&gt;，使用 c++ 实现。link：&lt;a href=&quot;http://www.iteye.com/topic/147010&quot;&gt;http://www.iteye.com/topic/147010&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Erlang进程池：&lt;/span&gt;&lt;a href=&quot;http://blog.csdn.net/thomescai/article/details/8212758&quot;&gt;http://blog.csdn.net/thomescai/article/details/8212758&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;（3）线程池&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;开源实现：threadpool线程池&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;线程池的原理&lt;/span&gt;:&lt;/strong&gt;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;link： &amp;nbsp;&lt;a href=&quot;http://www.cnblogs.com/zping/archive/2008/10/29/1322440.html&quot;&gt;http://www.cnblogs.com/zping/archive/2008/10/29/1322440.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 来看一下线程池究竟是怎么一回事？其实线程池的原理很简单，类似于操作系统中的缓冲区的概念，它的流程如下：先启动若干数量的线程，并让这些线程都处于睡眠状态，当客户端有一个新请求时，就会唤醒线程池中的某一个睡眠线程，让它来处理客户端的这个请求，当处理完这个请求后，线程又处于睡眠状态。可能你也许会问：为什么要搞得这么麻烦，如果每当客户端有新的请求时，我就创建一个新的线程不就完了？这也许是个不错的方法，因为它能使得你编写代码相对容易一些，但你却忽略了一个重要的问题??性能！就拿我所在的单位来说，我的单位是一个省级数据大集中的银行网络中心，高峰期每秒的客户端请&lt;span id=&quot;note_temp&quot; class=&quot;noted&quot;&gt;求并发数超&lt;/span&gt;过100，如果为每个客户端请求创建一个新线程的话，那耗费的CPU时间和内存将是惊人的，如果采用一个拥有200个线程的线程池，那将会节约大量的的系统资源，使得更多的CPU时间和内存用来处理实际的商业应用，而不是频繁的线程创建与销毁。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt;link：&lt;a href=&quot;http://www.ibm.com/developerworks/cn/java/l-threadPool/&quot;&gt;http://www.ibm.com/developerworks/cn/java/l-threadPool/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;一般一个简单线程池至少包含下列组成部分。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;线程池管理器（ThreadPoolManager）:用于创建并管理线程池&lt;/li&gt;&lt;li&gt;工作线程（WorkThread）: 线程池中线程&lt;/li&gt;&lt;li&gt;任务接口（Task）:每个任务必须实现的接口，以供工作线程调度任务的执行。&lt;/li&gt;&lt;li&gt;任务队列:用于存放没有处理的任务。提供一种缓冲机制。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt;线程池管理器至少有下列功能：创建线程池，销毁线程池，添加新任务 创建线程池的部分代码如下：&lt;/span&gt;&lt;/p&gt;&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code-outline&quot;&gt;&lt;span&gt;  &amp;hellip;&lt;br /&gt;        //create threads&lt;br /&gt;        synchronized(workThreadVector)&lt;br /&gt;        {&lt;br /&gt;            for(int j = 0; j &amp;lt; i; j++)&lt;br /&gt;            {&lt;br /&gt;                threadNum++;&lt;br /&gt;               WorkThread workThread = new WorkThread(taskVector, threadNum);&lt;br /&gt;                workThreadVector.addElement(workThread);&lt;br /&gt;            }&lt;br /&gt;        }&lt;br /&gt;&amp;hellip;&lt;br /&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;p&gt;&lt;span&gt;注意同步workThreadVector并没有降低效率，相反提高了效率,请参考Brian Goetz的文章。 销毁线程池的部分代码如下：&lt;/span&gt;&lt;/p&gt;&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code-outline&quot;&gt;&lt;span&gt;  &amp;hellip;&lt;br /&gt;        while(!workThreadVector.isEmpty())&lt;br /&gt;        {&lt;br /&gt;        if(debugLevel &amp;gt; 2)&lt;br /&gt;         System.out.println(&quot;stop:&quot;+(i));&lt;br /&gt;         i++;&lt;br /&gt;            try&lt;br /&gt;            {&lt;br /&gt;                WorkThread workThread = (WorkThread)workThreadVector.remove(0);&lt;br /&gt;                workThread.closeThread();&lt;br /&gt;                continue;&lt;br /&gt;            }&lt;br /&gt;            catch(Exception exception)&lt;br /&gt;            {&lt;br /&gt;                if(debugLevel &amp;gt; 2)&lt;br /&gt;                    exception.printStackTrace();&lt;br /&gt;            }&lt;br /&gt;            break;&lt;br /&gt;        }&lt;br /&gt;   &amp;hellip;&lt;br /&gt;   &lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;p&gt;&lt;span&gt;添加新任务的部分代码如下：&lt;/span&gt;&lt;/p&gt;&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code-outline&quot;&gt;&lt;span&gt;   &amp;hellip;&lt;br /&gt;        synchronized(taskVector)&lt;br /&gt;        {&lt;br /&gt;            taskVector.addElement(taskObj);&lt;br /&gt;            taskVector.notifyAll();&lt;br /&gt;        }&lt;br /&gt;   &amp;hellip;&lt;br /&gt;   &lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;p&gt;&lt;span&gt;工作线程是一个可以循环执行任务的线程，在没有任务时将等待。由于代码比较多在此不罗列.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;任务接口是为所有任务提供统一的接口，以便工作线程处理。任务接口主要规定了任务的入口，任务执行完后的收尾工作，任务的执行状态等。在文章结尾有相关代码的下载。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;线程池尺寸对于大量任务处理的效率有非常明显的提高，但是一旦尺寸选择不合理（过大或过小）就会严重降低影响服务器性能。理论上&quot;过小&quot;将出现任务不能及时处理的情况,但在图表中显示出某些小尺寸的线程池表现很好，这是因为测试驱动中有很多线程同步开销，且这个开销相对于完成单个任务的时间是不能忽略的。&quot;过大&quot;则会出现线程间同步开销太大的问题，而且在线程间切换很耗CPU时间，在图表显示的很清楚。可见任何一个好技术，如果滥用都会造成灾难性后果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;深入研究线程池&lt;/strong&gt;：&lt;a href=&quot;http://blog.csdn.net/axman/article/details/1481197&quot;&gt;http://blog.csdn.net/axman/article/details/1481197&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3323696&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/lpshou/p/3323696.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/lpshou/p/3323696.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-16T02:01:00+00:00</dc:date>
	<dc:creator>lpshou</dc:creator>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252846.htm">
	<title>cnBeta.COM: PS4、Xbox One：最后一代游戏机？</title>
	<link>http://www.cnbeta.com/articles/252846.htm</link>
	<content:encoded>&lt;p&gt;市场咨询机构Furturesource Consulting对索尼、微软的两大新主机做出了一番预测，认为PS4将最终在销量上明显超过Xbox One，但是都赶不上各自的前辈，甚至可能是游戏主机的终结。据其预计，&lt;strong&gt;等到2018年的时候，PS4将卖出3600万部，Xbox One则是3000万部。&lt;/strong&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31457bb3/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252846.htm&amp;t=PS4%E3%80%81Xbox+One%EF%BC%9A%E6%9C%80%E5%90%8E%E4%B8%80%E4%BB%A3%E6%B8%B8%E6%88%8F%E6%9C%BA%EF%BC%9F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252846.htm&amp;t=PS4%E3%80%81Xbox+One%EF%BC%9A%E6%9C%80%E5%90%8E%E4%B8%80%E4%BB%A3%E6%B8%B8%E6%88%8F%E6%9C%BA%EF%BC%9F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252846.htm&amp;t=PS4%E3%80%81Xbox+One%EF%BC%9A%E6%9C%80%E5%90%8E%E4%B8%80%E4%BB%A3%E6%B8%B8%E6%88%8F%E6%9C%BA%EF%BC%9F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252846.htm&amp;t=PS4%E3%80%81Xbox+One%EF%BC%9A%E6%9C%80%E5%90%8E%E4%B8%80%E4%BB%A3%E6%B8%B8%E6%88%8F%E6%9C%BA%EF%BC%9F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252846.htm&amp;t=PS4%E3%80%81Xbox+One%EF%BC%9A%E6%9C%80%E5%90%8E%E4%B8%80%E4%BB%A3%E6%B8%B8%E6%88%8F%E6%9C%BA%EF%BC%9F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609118339/u/47/f/624776/c/34306/s/31457bb3/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609118339/u/47/f/624776/c/34306/s/31457bb3/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609118339/u/47/f/624776/c/34306/s/31457bb3/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:57:49+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252845.htm">
	<title>cnBeta.COM: 评论：“设备枯竭”现象将给苹果公司带来麻烦</title>
	<link>http://www.cnbeta.com/articles/252845.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;随着创新减弱和市场饱和度提升，苹果公司和其他智能手机制造商通过新设备引起市场轰动的能力可能受限。&lt;/strong&gt;因此当有关“苹果公司下一件大事”的传闻铺天盖地时，事实往往可能没那么吸引人。花旗集团预期智能手机市场将出现“设备枯竭”现象。设备枯竭，意味着智能手机制造商越来越难在这样的市场环境中找到没有智能手机的人和对新智能手机的微小改进感兴趣的人。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31453886/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252845.htm&amp;t=%E8%AF%84%E8%AE%BA%EF%BC%9A%E2%80%9C%E8%AE%BE%E5%A4%87%E6%9E%AF%E7%AB%AD%E2%80%9D%E7%8E%B0%E8%B1%A1%E5%B0%86%E7%BB%99%E8%8B%B9%E6%9E%9C%E5%85%AC%E5%8F%B8%E5%B8%A6%E6%9D%A5%E9%BA%BB%E7%83%A6&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252845.htm&amp;t=%E8%AF%84%E8%AE%BA%EF%BC%9A%E2%80%9C%E8%AE%BE%E5%A4%87%E6%9E%AF%E7%AB%AD%E2%80%9D%E7%8E%B0%E8%B1%A1%E5%B0%86%E7%BB%99%E8%8B%B9%E6%9E%9C%E5%85%AC%E5%8F%B8%E5%B8%A6%E6%9D%A5%E9%BA%BB%E7%83%A6&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252845.htm&amp;t=%E8%AF%84%E8%AE%BA%EF%BC%9A%E2%80%9C%E8%AE%BE%E5%A4%87%E6%9E%AF%E7%AB%AD%E2%80%9D%E7%8E%B0%E8%B1%A1%E5%B0%86%E7%BB%99%E8%8B%B9%E6%9E%9C%E5%85%AC%E5%8F%B8%E5%B8%A6%E6%9D%A5%E9%BA%BB%E7%83%A6&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252845.htm&amp;t=%E8%AF%84%E8%AE%BA%EF%BC%9A%E2%80%9C%E8%AE%BE%E5%A4%87%E6%9E%AF%E7%AB%AD%E2%80%9D%E7%8E%B0%E8%B1%A1%E5%B0%86%E7%BB%99%E8%8B%B9%E6%9E%9C%E5%85%AC%E5%8F%B8%E5%B8%A6%E6%9D%A5%E9%BA%BB%E7%83%A6&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252845.htm&amp;t=%E8%AF%84%E8%AE%BA%EF%BC%9A%E2%80%9C%E8%AE%BE%E5%A4%87%E6%9E%AF%E7%AB%AD%E2%80%9D%E7%8E%B0%E8%B1%A1%E5%B0%86%E7%BB%99%E8%8B%B9%E6%9E%9C%E5%85%AC%E5%8F%B8%E5%B8%A6%E6%9D%A5%E9%BA%BB%E7%83%A6&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608971578/u/47/f/624776/c/34306/s/31453886/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608971578/u/47/f/624776/c/34306/s/31453886/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608971578/u/47/f/624776/c/34306/s/31453886/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:54:37+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252844.htm">
	<title>cnBeta.COM: “人造鸡蛋”首次美国出售：获比尔·盖茨认可</title>
	<link>http://www.cnbeta.com/articles/252844.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;据国外媒体报道，一种得到亿万富翁皮特-泰尔和比尔-盖茨支持的“人造鸡蛋”11日首次在美国超市出售。这种鸡蛋用植物制成，可替代鸡蛋用于制作从蛋糕到蛋黄酱等各种食物。&lt;/strong&gt;科 研组11日在加利福尼亚州全食超市开始销售这种叫Beyond Eggs的“植物鸡蛋”。他们表示，这种鸡蛋可能不久就会出现在全球超市中。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31453885/sc/17/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252844.htm&amp;t=%E2%80%9C%E4%BA%BA%E9%80%A0%E9%B8%A1%E8%9B%8B%E2%80%9D%E9%A6%96%E6%AC%A1%E7%BE%8E%E5%9B%BD%E5%87%BA%E5%94%AE%EF%BC%9A%E8%8E%B7%E6%AF%94%E5%B0%94%C2%B7%E7%9B%96%E8%8C%A8%E8%AE%A4%E5%8F%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252844.htm&amp;t=%E2%80%9C%E4%BA%BA%E9%80%A0%E9%B8%A1%E8%9B%8B%E2%80%9D%E9%A6%96%E6%AC%A1%E7%BE%8E%E5%9B%BD%E5%87%BA%E5%94%AE%EF%BC%9A%E8%8E%B7%E6%AF%94%E5%B0%94%C2%B7%E7%9B%96%E8%8C%A8%E8%AE%A4%E5%8F%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252844.htm&amp;t=%E2%80%9C%E4%BA%BA%E9%80%A0%E9%B8%A1%E8%9B%8B%E2%80%9D%E9%A6%96%E6%AC%A1%E7%BE%8E%E5%9B%BD%E5%87%BA%E5%94%AE%EF%BC%9A%E8%8E%B7%E6%AF%94%E5%B0%94%C2%B7%E7%9B%96%E8%8C%A8%E8%AE%A4%E5%8F%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252844.htm&amp;t=%E2%80%9C%E4%BA%BA%E9%80%A0%E9%B8%A1%E8%9B%8B%E2%80%9D%E9%A6%96%E6%AC%A1%E7%BE%8E%E5%9B%BD%E5%87%BA%E5%94%AE%EF%BC%9A%E8%8E%B7%E6%AF%94%E5%B0%94%C2%B7%E7%9B%96%E8%8C%A8%E8%AE%A4%E5%8F%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252844.htm&amp;t=%E2%80%9C%E4%BA%BA%E9%80%A0%E9%B8%A1%E8%9B%8B%E2%80%9D%E9%A6%96%E6%AC%A1%E7%BE%8E%E5%9B%BD%E5%87%BA%E5%94%AE%EF%BC%9A%E8%8E%B7%E6%AF%94%E5%B0%94%C2%B7%E7%9B%96%E8%8C%A8%E8%AE%A4%E5%8F%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608971577/u/47/f/624776/c/34306/s/31453885/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608971577/u/47/f/624776/c/34306/s/31453885/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608971577/u/47/f/624776/c/34306/s/31453885/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:52:55+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252843.htm">
	<title>cnBeta.COM: iPhone 5S指纹识别技术引发终结传统密码猜想</title>
	<link>http://www.cnbeta.com/articles/252843.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;苹果iPhone 5S上的指纹传感器将免除用户输入密码来解锁设备的麻烦。而这一技术也为埋葬包括手写签名、传统的支付方式和智能识别等传统密码铺就了一条道路。&lt;/strong&gt;PayPal前任CIO，目前是Fast Identity在线联盟总裁的迈克尔-巴雷特表示：“这是该产业一支强有力的兴奋剂。”巴雷特主张广泛使用生物识别技术和密码替代技术。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31453884/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252843.htm&amp;t=iPhone+5S%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E5%BC%95%E5%8F%91%E7%BB%88%E7%BB%93%E4%BC%A0%E7%BB%9F%E5%AF%86%E7%A0%81%E7%8C%9C%E6%83%B3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252843.htm&amp;t=iPhone+5S%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E5%BC%95%E5%8F%91%E7%BB%88%E7%BB%93%E4%BC%A0%E7%BB%9F%E5%AF%86%E7%A0%81%E7%8C%9C%E6%83%B3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252843.htm&amp;t=iPhone+5S%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E5%BC%95%E5%8F%91%E7%BB%88%E7%BB%93%E4%BC%A0%E7%BB%9F%E5%AF%86%E7%A0%81%E7%8C%9C%E6%83%B3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252843.htm&amp;t=iPhone+5S%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E5%BC%95%E5%8F%91%E7%BB%88%E7%BB%93%E4%BC%A0%E7%BB%9F%E5%AF%86%E7%A0%81%E7%8C%9C%E6%83%B3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252843.htm&amp;t=iPhone+5S%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E5%BC%95%E5%8F%91%E7%BB%88%E7%BB%93%E4%BC%A0%E7%BB%9F%E5%AF%86%E7%A0%81%E7%8C%9C%E6%83%B3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608971576/u/47/f/624776/c/34306/s/31453884/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608971576/u/47/f/624776/c/34306/s/31453884/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608971576/u/47/f/624776/c/34306/s/31453884/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:52:48+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252842.htm">
	<title>cnBeta.COM: OrCam眼镜 - 帮助盲人重见光明</title>
	<link>http://www.cnbeta.com/articles/252842.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;感谢&lt;a href=&quot;http://ianpo.com/&quot; target=&quot;_blank&quot;&gt;安珀网&lt;/a&gt;的投递&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;如果我们退一步看看近几个月内可穿戴式技术的新闻，就会发现大多数都是围绕智能手表和耳机，比如谷歌眼镜。这些都是伟大的产品，都是针对消费者而设计，如果你的商业计划是为了赚钱的话这对你来说是一件很好的事。但是，有一些公司却有不同的想法----他们是为了帮助那些真正需要它的人而设计。新产品OrCam就是其中一款可穿戴式产品，它能够帮助有视力障碍的人能够看到。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31453883/sc/38/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252842.htm&amp;t=OrCam%E7%9C%BC%E9%95%9C+-+%E5%B8%AE%E5%8A%A9%E7%9B%B2%E4%BA%BA%E9%87%8D%E8%A7%81%E5%85%89%E6%98%8E&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252842.htm&amp;t=OrCam%E7%9C%BC%E9%95%9C+-+%E5%B8%AE%E5%8A%A9%E7%9B%B2%E4%BA%BA%E9%87%8D%E8%A7%81%E5%85%89%E6%98%8E&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252842.htm&amp;t=OrCam%E7%9C%BC%E9%95%9C+-+%E5%B8%AE%E5%8A%A9%E7%9B%B2%E4%BA%BA%E9%87%8D%E8%A7%81%E5%85%89%E6%98%8E&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252842.htm&amp;t=OrCam%E7%9C%BC%E9%95%9C+-+%E5%B8%AE%E5%8A%A9%E7%9B%B2%E4%BA%BA%E9%87%8D%E8%A7%81%E5%85%89%E6%98%8E&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252842.htm&amp;t=OrCam%E7%9C%BC%E9%95%9C+-+%E5%B8%AE%E5%8A%A9%E7%9B%B2%E4%BA%BA%E9%87%8D%E8%A7%81%E5%85%89%E6%98%8E&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608971575/u/47/f/624776/c/34306/s/31453883/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608971575/u/47/f/624776/c/34306/s/31453883/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608971575/u/47/f/624776/c/34306/s/31453883/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:51:06+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252841.htm">
	<title>cnBeta.COM: 密码技术弊端显现：生物识别渐受追捧</title>
	<link>http://www.cnbeta.com/articles/252841.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;美国《华尔街日报》网络版上周日刊登题为《跟密码说再见》(Say Goodbye to the Password)的评论文章称，由于密码技术在便利性和安全性方面的弊端逐渐显现，相关企业纷纷开始寻找替代方案，而以指纹为代表的生物识别技术则成为最受追捧的领域。&lt;/strong&gt;以下为文章全文：&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31453882/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252841.htm&amp;t=%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF%E5%BC%8A%E7%AB%AF%E6%98%BE%E7%8E%B0%EF%BC%9A%E7%94%9F%E7%89%A9%E8%AF%86%E5%88%AB%E6%B8%90%E5%8F%97%E8%BF%BD%E6%8D%A7&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252841.htm&amp;t=%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF%E5%BC%8A%E7%AB%AF%E6%98%BE%E7%8E%B0%EF%BC%9A%E7%94%9F%E7%89%A9%E8%AF%86%E5%88%AB%E6%B8%90%E5%8F%97%E8%BF%BD%E6%8D%A7&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252841.htm&amp;t=%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF%E5%BC%8A%E7%AB%AF%E6%98%BE%E7%8E%B0%EF%BC%9A%E7%94%9F%E7%89%A9%E8%AF%86%E5%88%AB%E6%B8%90%E5%8F%97%E8%BF%BD%E6%8D%A7&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252841.htm&amp;t=%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF%E5%BC%8A%E7%AB%AF%E6%98%BE%E7%8E%B0%EF%BC%9A%E7%94%9F%E7%89%A9%E8%AF%86%E5%88%AB%E6%B8%90%E5%8F%97%E8%BF%BD%E6%8D%A7&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252841.htm&amp;t=%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF%E5%BC%8A%E7%AB%AF%E6%98%BE%E7%8E%B0%EF%BC%9A%E7%94%9F%E7%89%A9%E8%AF%86%E5%88%AB%E6%B8%90%E5%8F%97%E8%BF%BD%E6%8D%A7&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608971574/u/47/f/624776/c/34306/s/31453882/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608971574/u/47/f/624776/c/34306/s/31453882/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608971574/u/47/f/624776/c/34306/s/31453882/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:50:32+00:00</dc:date>
</item>
<item rdf:about="http://www.cnblogs.com/graphics/p/3044238.html">
	<title>博客园_首页: 用DirectX实现魔方（三）视角变换及缩放（附源码） - zdd</title>
	<link>http://www.cnblogs.com/graphics/p/3044238.html</link>
	<content:encoded>&lt;p&gt;&lt;span&gt;在本系列第一篇介绍过鼠标按键的功能，如下。&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;左键拖拽 - 旋转魔方&lt;/li&gt;&lt;li&gt;右键拖拽 - 变换视角&lt;/li&gt;&lt;li&gt;滚轮 - 缩放魔方&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;今天研究一下如何实现后面两个功能，用到的技术主要是Arcball，Arcball是实现Model-View-Camera的重要技术，这里的旋转基于Quaternion（四元数）来实现，当然也可以通过欧拉角来实现，但是欧拉角的旋转不够平滑。先看一下Model-View-Camera的效果，如下，这个gif效果图是用LICEcap录制的，帧率有些慢，略有卡顿现象，大家可以下载文末的可执行文件查看更加平滑的效果。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/64257/201309/12220932-688a884280f2409e885ad5a4ecd6fa30.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;右键拖拽 - 变换视角&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;由上面的动画可以看到，通过用户按下并拖拽鼠标右键即可以旋转视角（表面上看是魔方在旋转，但实际上是camera在旋转，相对运动而已）。为了研究这个功能是如何实现的，我们可以将鼠标右键拖拽这个过程分解一下。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;按下鼠标右键（此时鼠标的位置是P1）&lt;/li&gt;&lt;li&gt;拖拽右键（此时鼠标的位置是P2，注意P2是随拖拽实时变化的）&lt;/li&gt;&lt;li&gt;抬起鼠标右键（停止旋转）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;为了实现上面的功能，我们在屏幕上虚拟出一个球体来，将P1和P2映射到这个球体，再从球心到P1和P2连线构成两个向量，有了这两个向量就可以求出旋转轴及旋转角度了，这个虚拟的球体，就是Arcball了，如下图。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/64257/201309/12231522-dffd4dc8798a481099b4f131bc0815c7.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;在上图中P1和P2的夹角就是旋转角度，N则是旋转轴。旋转角度可以通过P1和P2的点积来实现，旋转轴可以通过P1和P2的叉积来实现，稍后详述，下面看看如何将屏幕上的点映射到球体上，这是实现Arcball的关键步骤。直观一点的想法，可以把屏幕看成一个矩形纹理，球体看做一个模型，所以将屏幕坐标映射到球体坐标的过程实际上相当于将这个矩形纹理贴图到球体上。需要注意的是，我们这里只用到半个球体（如果屏幕将球体一份为二的话）。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;屏幕坐标到球坐标&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;看代码，顾名思义，这个函数完成屏幕坐标到球体坐标（单位向量）的转换，两个输入参数分别是鼠标按下时屏幕的X，Y坐标。&lt;/p&gt;&lt;div&gt;&lt;span&gt; 1&lt;/span&gt; D3DXVECTOR3 ArcBall::ScreenToVector(&lt;span&gt;int&lt;/span&gt; screen_x, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; screen_y)&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;{&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Scale to screen&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;float&lt;/span&gt; x = -(screen_x - window_width_ / &lt;span&gt;2&lt;/span&gt;) / (radius_ * window_width_ / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;float&lt;/span&gt; y = (screen_y - window_height_ / &lt;span&gt;2&lt;/span&gt;) / (radius_ * window_height_ / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;float&lt;/span&gt; z = &lt;span&gt;0.0f&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;float&lt;/span&gt; mag = x * x + y *&lt;span&gt; y;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;br /&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(mag &amp;gt; &lt;span&gt;1.0f&lt;/span&gt;&lt;span&gt;)&lt;br /&gt;&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;float&lt;/span&gt; scale = &lt;span&gt;1.0f&lt;/span&gt; /&lt;span&gt; sqrtf(mag);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         x *=&lt;span&gt; scale;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         y *=&lt;span&gt; scale;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt;&lt;br /&gt;&lt;span&gt;17&lt;/span&gt;         z = sqrtf(&lt;span&gt;1.0f&lt;/span&gt; -&lt;span&gt; mag);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;br /&gt;&lt;span&gt;19&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; D3DXVECTOR3(x, y, z);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; }&lt;/div&gt;&lt;p&gt;代码解释：&lt;/p&gt;&lt;p&gt;4-5两行代码将屏幕坐标映射到球体坐标的范围，但此时还只是xy两个分量，所以后续的代码都是计算z坐标并单位化的。这里radius_是球体的半径，为了方便计算，通常设置为1。&lt;/p&gt;&lt;p&gt;10-15行，如果xy的平方和大于1，此时该点恰好位于半球球的边缘，所以令z=0&lt;/p&gt;&lt;p&gt;17行，如果xy平方和小于1，说明该点不位于半球边缘，计算z的值。&lt;/p&gt;&lt;p&gt;19行返回球体坐标对应的向量（已经单位化）。&lt;/p&gt;&lt;p&gt;关于这个函数更加详细的解释，看以看看我的另一篇随笔，&lt;a href=&quot;http://www.cnblogs.com/graphics/archive/2009/11/28/1612832.html&quot;&gt;ScreenToVector详解&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;旋转轴及旋转角度&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这里我们用四元组来表示旋转，一个四元组包含四个分量x, y, z, w。假设一个旋转的旋转轴是axis，旋转角度是theta。那么对应的四元组q如下。&lt;/p&gt;&lt;div&gt;q.x = sin(theta / &lt;span&gt;2&lt;/span&gt;) *&lt;span&gt; axis.x;&lt;br /&gt;q.y &lt;/span&gt;= sin(theta / &lt;span&gt;2&lt;/span&gt;) *&lt;span&gt; axis.y;&lt;br /&gt;q.z &lt;/span&gt;= sin(theta / &lt;span&gt;2&lt;/span&gt;) *&lt;span&gt; axis.z;&lt;br /&gt;q.w &lt;/span&gt;= cos(theta / &lt;span&gt;2&lt;/span&gt;);&lt;/div&gt;&lt;p&gt;有了上面的公式，我们就可以根据旋转轴和旋转角度来构造四元组了。下面的函数就是用来做这件事的，两个参数分别是旋转的起始向量和结束向量，这两个向量是由前面的ScreenToVector函数生成的。&lt;/p&gt;&lt;div&gt;&lt;span&gt; 1&lt;/span&gt; D3DXQUATERNION ArcBall::QuatFromBallPoints(D3DXVECTOR3&amp;amp; start_point, D3DXVECTOR3&amp;amp;&lt;span&gt; end_point)&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;{&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Calculate rotate angle&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;float&lt;/span&gt; angle = D3DXVec3Dot(&amp;amp;start_point, &amp;amp;&lt;span&gt;end_point);    &lt;br /&gt;&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Calculate rotate axis&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;    D3DXVECTOR3 axis;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     D3DXVec3Cross(&amp;amp;axis, &amp;amp;start_point, &amp;amp;&lt;span&gt;end_point);        &lt;br /&gt;&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;br /&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Build and Normalize the Quaternion&lt;/span&gt;&lt;br /&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    D3DXQUATERNION quat(axis.x, axis.y, axis.z, angle);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     D3DXQuaternionNormalize(&amp;amp;quat, &amp;amp;&lt;span&gt;quat);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;br /&gt;&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; quat;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; }&lt;/div&gt;&lt;p&gt;代码解释：&lt;/p&gt;&lt;p&gt;第4行，计算量个向量的夹角余弦值，用的是点积公式，两个向量a和b，他们的点积a dot b = |a||b|cost(theta)，如果a和b都是单位向量的话，那么a dot b = cost(theta)，这里start_point和end_point已经是单位向量了，所以angle = cos(theta)。&lt;/p&gt;&lt;p&gt;第7,8两行代码计算旋转轴，用的是叉积公式，两个向量P1和P2的叉积生成第三个向量N，且N垂直于P1和P2。&lt;/p&gt;&lt;p&gt;第11,12行构造四元组，并单位化。需要注意的是旋转轴部分并没有严格按照上面的四元组公式，因为旋转轴是一个向量，而同一个方向可以有多种表示方法，比如（1,2,3）和（2,4,6）表示的是同一个方向向量。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Arcball的调用&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Arcball可以在处理Windows消息的时候调用。&lt;/p&gt;&lt;div&gt;&lt;span&gt;LRESULT Camera::HandleMessages(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)&lt;br /&gt;{&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; update view arc ball&lt;/span&gt;&lt;br /&gt;    &lt;span&gt;if&lt;/span&gt;(uMsg ==&lt;span&gt; WM_RBUTTONDOWN)&lt;br /&gt;    {&lt;br /&gt;        SetCapture(hWnd) ;&lt;br /&gt;&lt;br /&gt;        frame_need_update_ &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt; ;&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; mouse_x = (&lt;span&gt;short&lt;/span&gt;&lt;span&gt;)LOWORD(lParam) ;&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; mouse_y = (&lt;span&gt;short&lt;/span&gt;&lt;span&gt;)HIWORD(lParam) ;&lt;br /&gt;        view_arcball_.OnBegin(mouse_x, mouse_y) ;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; mouse move&lt;/span&gt;&lt;br /&gt;    &lt;span&gt;if&lt;/span&gt;(uMsg ==&lt;span&gt; WM_MOUSEMOVE)&lt;br /&gt;    {&lt;br /&gt;        frame_need_update_ &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt; ;&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; mouse_x = (&lt;span&gt;short&lt;/span&gt;&lt;span&gt;)LOWORD(lParam);&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; mouse_y = (&lt;span&gt;short&lt;/span&gt;&lt;span&gt;)HIWORD(lParam);&lt;br /&gt;        view_arcball_.OnMove(mouse_x, mouse_y) ;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; right button up, terminate view arc ball rotation&lt;/span&gt;&lt;br /&gt;    &lt;span&gt;if&lt;/span&gt;(uMsg ==&lt;span&gt; WM_RBUTTONUP)&lt;br /&gt;    {&lt;br /&gt;        frame_need_update_ &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt; ;&lt;br /&gt;        view_arcball_.OnEnd();&lt;br /&gt;        ReleaseCapture() ;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; TRUE ;&lt;br /&gt;}&lt;/span&gt;&lt;/div&gt;&lt;p&gt;当鼠标右键按下时，设置frame_need_update_为true，这个向量表示鼠标移动时是否有拖拽发生，因为Windows并没有对应鼠标拖拽的消息，所以要通过两个方面来判断，一是鼠标按下了，二是鼠标移动了，同时满足这两个条件才表示拖拽发生了。调用ArcBall.OnBegin函数，这个函数会判断当前的鼠标位置是否位于窗口客户区内，如果在客户区外则不做相应。如果鼠标在窗口客户区内，还要记录当前鼠标的位置，并生成球体向量用于后续计算。&lt;/p&gt;&lt;p&gt;当鼠标移动时，调用ArcBall.OnMove()，这个函数首先求取鼠标当前位置，并生成球体向量，在根据上一次保存的球体向量计算出旋转增量对应的四元组。&lt;/p&gt;&lt;p&gt;当鼠标右键抬起时，设置frame_need_update_为false，结束旋转。&lt;/p&gt;&lt;div&gt;&lt;span&gt;void&lt;/span&gt; ArcBall::OnBegin(&lt;span&gt;int&lt;/span&gt; mouse_x, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; mouse_y)&lt;br /&gt;{&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; enter drag state only if user click the window's client area&lt;/span&gt;&lt;br /&gt;    &lt;span&gt;if&lt;/span&gt;(mouse_x &amp;gt;= &lt;span&gt;0&lt;/span&gt; &amp;amp;&amp;amp; mouse_x &amp;lt;=&lt;span&gt; window_width_ &lt;br /&gt;       &lt;/span&gt;&amp;amp;&amp;amp; mouse_y &amp;gt;= &lt;span&gt;0&lt;/span&gt; &amp;amp;&amp;amp; mouse_y &amp;lt;&lt;span&gt; window_height_)&lt;br /&gt;    {&lt;br /&gt;        is_dragged_ &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt; ; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; begin drag state&lt;/span&gt;&lt;br /&gt;        previous_quaternion_ =&lt;span&gt; current_quaternion_ ;&lt;br /&gt;        previous_point_ &lt;/span&gt;=&lt;span&gt; ScreenToVector(mouse_x, mouse_y) ;&lt;br /&gt;        old_point_ &lt;/span&gt;=&lt;span&gt; previous_point_ ;&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; ArcBall::OnMove(&lt;span&gt;int&lt;/span&gt; mouse_x, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; mouse_y)&lt;br /&gt;{&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(is_dragged_)&lt;br /&gt;    {&lt;br /&gt;        current_point_ &lt;/span&gt;=&lt;span&gt; ScreenToVector(mouse_x, mouse_y) ;&lt;br /&gt;        rotation_increament_ &lt;/span&gt;=&lt;span&gt; QuatFromBallPoints( old_point_, current_point_ ) ;&lt;br /&gt;        current_quaternion_ &lt;/span&gt;= previous_quaternion_ *&lt;span&gt; QuatFromBallPoints( previous_point_, current_point_ ) ;&lt;br /&gt;        old_point_ &lt;/span&gt;=&lt;span&gt; current_point_ ;&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; ArcBall::OnEnd()&lt;br /&gt;{&lt;br /&gt;    is_dragged_ &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt; ;&lt;br /&gt;}&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;鼠标滚轮 - 缩放&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;缩放使用鼠标滚轮来完成，在WM_MOUSEWHEEL消息，HIWORD里面存放的是鼠标滚轮的增量。获取这个增量，并&lt;/p&gt;&lt;div&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Mouse wheel, zoom in/out&lt;/span&gt;&lt;br /&gt;&lt;span&gt;if&lt;/span&gt;(uMsg ==&lt;span&gt; WM_MOUSEWHEEL) &lt;br /&gt;{&lt;br /&gt;    frame_need_update_ &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt; ;&lt;br /&gt;    mouse_wheel_delta_ &lt;/span&gt;+= (&lt;span&gt;short&lt;/span&gt;&lt;span&gt;)HIWORD(wParam);&lt;br /&gt;}&lt;/span&gt;&lt;/div&gt;&lt;p&gt;在Camera类的OnFrameMove中判断是否有滚轮滚动，并做响应的处理，代码如下。&lt;/p&gt;&lt;div&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(mouse_wheel_delta_)&lt;br /&gt;{&lt;br /&gt;    radius_ &lt;/span&gt;-= mouse_wheel_delta_ * radius_ * &lt;span&gt;0.1f&lt;/span&gt; / &lt;span&gt;360.0f&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Make the radius in range of [min_radius_, max_radius_]&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; This can Prevent the cube became too big or too small&lt;/span&gt;&lt;br /&gt;    radius_ =&lt;span&gt; max(radius_, min_radius_) ;&lt;br /&gt;    radius_ &lt;/span&gt;=&lt;span&gt; min(radius_, max_radius_) ;&lt;br /&gt;}&lt;/span&gt;&lt;/div&gt;&lt;p&gt;这个if语句会根据滚轮的增量计算radius_，并将radius_限制在范围[min_radius_, max_radius_]内，防止模型过大或者过小。radius_变量稍后会用来计算眼睛到视点的距离，通过改变这个距离的值达到模型放大和缩小的效果，实际上模型并没有真正被缩放，只是观察的距离变了而已，这样就会产生近大远小的效果了。下面的代码用来计算眼睛的位置。&lt;/p&gt;&lt;div&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Update the eye point based on a radius away from the lookAt position&lt;/span&gt;&lt;br /&gt;eye_point_ = lookat_point_ - world_ahead_vector * radius_;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Camera&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Camera类是Arcball的使用者，里面的OnFrameMove函数每一帧都会被调用，该函数负责缩放和旋转，并生成新的View Matrix。&lt;/p&gt;&lt;div&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Camera::OnFrameMove()&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;{&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; No need to handle if no drag since last frame move&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(!&lt;span&gt;m_bDragSinceLastUpdate)&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; ;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     m_bDragSinceLastUpdate = &lt;span&gt;false&lt;/span&gt;&lt;span&gt; ;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(m_nMouseWheelDelta)&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         m_fRadius -= m_nMouseWheelDelta * m_fRadius * &lt;span&gt;0.1f&lt;/span&gt; / &lt;span&gt;120.0f&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;br /&gt;&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Make the radius in range of [m_fMinRadius, m_fMaxRadius]&lt;/span&gt;&lt;br /&gt;&lt;span&gt;13&lt;/span&gt;         m_fRadius =&lt;span&gt; max(m_fRadius, m_fMinRadius) ;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         m_fRadius =&lt;span&gt; min(m_fRadius, m_fMaxRadius) ;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;br /&gt;&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; The mouse delta is retrieved IN every WM_MOUSE message and do not accumulate, so clear it after one frame&lt;/span&gt;&lt;br /&gt;&lt;span&gt;18&lt;/span&gt;     m_nMouseWheelDelta = &lt;span&gt;0&lt;/span&gt;&lt;span&gt; ;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;br /&gt;&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Get the inverse of the view Arcball's rotation matrix&lt;/span&gt;&lt;br /&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;    D3DXMATRIX mCameraRot ;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;     D3DXMatrixInverse(&amp;amp;&lt;span&gt;mCameraRot, NULL, m_ViewArcBall.GetRotationMatrix());&lt;br /&gt;&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;br /&gt;&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Transform vectors based on camera's rotation matrix&lt;/span&gt;&lt;br /&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;    D3DXVECTOR3 vWorldUp;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;     D3DXVECTOR3 vLocalUp = D3DXVECTOR3(&lt;span&gt;0&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;     D3DXVec3TransformCoord(&amp;amp;vWorldUp, &amp;amp;vLocalUp, &amp;amp;&lt;span&gt;mCameraRot);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;br /&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;    D3DXVECTOR3 vWorldAhead;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;     D3DXVECTOR3 vLocalAhead = D3DXVECTOR3(&lt;span&gt;0&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;     D3DXVec3TransformCoord(&amp;amp;vWorldAhead, &amp;amp;vLocalAhead, &amp;amp;&lt;span&gt;mCameraRot);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;br /&gt;&lt;span&gt;33&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Update the eye point based on a radius away from the lookAt position&lt;/span&gt;&lt;br /&gt;&lt;span&gt;34&lt;/span&gt;     m_vEyePt = m_vLookatPt - vWorldAhead *&lt;span&gt; m_fRadius;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;br /&gt;&lt;span&gt;36&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Update the view matrix&lt;/span&gt;&lt;br /&gt;&lt;span&gt;37&lt;/span&gt;     D3DXMatrixLookAtLH( &amp;amp;m_matView, &amp;amp;m_vEyePt, &amp;amp;m_vLookatPt, &amp;amp;&lt;span&gt;vWorldUp );&lt;br /&gt;&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; }&lt;/div&gt;&lt;p&gt;代码解释：&lt;/p&gt;&lt;p&gt;第4行首先判断是否有拖拽，如果没有拖拽动作则不必更新视角，直接返回。&lt;/p&gt;&lt;p&gt;第6行将是否拖拽标志设置为false，因为能走到这一行表示有拖拽。&lt;/p&gt;&lt;p&gt;第8-15行处理鼠标滚轮动作，并确保camera的radius在控制范围内，这样魔方不至于太小或者太大。&lt;/p&gt;&lt;p&gt;第18行将滚轮的旋转增量清0，因为增量不累加，每个frame计算一次，下一个frame重新计算。&lt;/p&gt;&lt;p&gt;第21-22行求出旋转矩阵的逆矩阵，因为如果要达到同样的视角，模型和camera的旋转方向刚好相反。可以这样理解，如果想看魔方的背面，我们可以将魔方旋转180度，这相当于旋转模型，也可以固定魔方，走到魔方的背面去看，这就是旋转camera了。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;源码&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;之前有几个网友提出公布源代码，当时由于代码比较混乱，所以没有公布，我花了几个星期的时间，将所有代码重新整理了一遍，现在基本上可以看了，但是还有很多细节需要打磨。昨晚上传到了github上，欢迎fork，如果不熟悉github，也可以在博客园本地下载。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/zdd/RubikCube&quot;&gt;github&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://files.cnblogs.com/graphics/RubikCube-master.zip&quot;&gt;博客园本地下载&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;编译源代码需要安装DirectX SDK，推荐大家使用Microsoft DirectX SDK (June 2010)，这是最新的SDK，当然也是最后一个。大家可以自己编译试着玩玩，如有问题，欢迎留言讨论。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;可执行程序&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;如果不想看代码，可以下载下面的可执行文件试玩，这个版本修复了之前几位网友发现的几个bug，还是那句话，欢迎大家继续找毛病。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://files.cnblogs.com/graphics/RubikCube20130915.zip&quot;&gt;RubikCube&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To Be Continued&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这个Demo刚刚上传到github，还有很多功能需要完善，由于个人精力有限，如果哪位网友有兴趣，可以和我一起完成，那就太好了，期待你的加入！稍后将这个Demo升级，编写DirectX10及DirectX11版本的RubikCube，也算是一个练手的过程吧，欢迎继续关注！&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3044238&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/graphics/p/3044238.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/graphics/p/3044238.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-16T01:50:00+00:00</dc:date>
	<dc:creator>zdd</dc:creator>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252840.htm">
	<title>cnBeta.COM: 美国宇航局计划捕捉小行星：范围缩致三颗</title>
	<link>http://www.cnbeta.com/articles/252840.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;据国外媒体报道，美国宇航局打算捕获一颗小行星，然后把它送到月球的轨道周围，目前该局已经缩小符合条件的这种小行星的搜索范围。&lt;/strong&gt;该局表示，它已经发现3颗符合条件的小行星，并希望可以借助遥控太空套索，把其中一颗送入月球轨道。进入轨道后，宇航员最早能在2021年利用“猎户座”飞船前去探访这个太空岩石。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31453881/sc/17/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252840.htm&amp;t=%E7%BE%8E%E5%9B%BD%E5%AE%87%E8%88%AA%E5%B1%80%E8%AE%A1%E5%88%92%E6%8D%95%E6%8D%89%E5%B0%8F%E8%A1%8C%E6%98%9F%EF%BC%9A%E8%8C%83%E5%9B%B4%E7%BC%A9%E8%87%B4%E4%B8%89%E9%A2%97&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252840.htm&amp;t=%E7%BE%8E%E5%9B%BD%E5%AE%87%E8%88%AA%E5%B1%80%E8%AE%A1%E5%88%92%E6%8D%95%E6%8D%89%E5%B0%8F%E8%A1%8C%E6%98%9F%EF%BC%9A%E8%8C%83%E5%9B%B4%E7%BC%A9%E8%87%B4%E4%B8%89%E9%A2%97&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252840.htm&amp;t=%E7%BE%8E%E5%9B%BD%E5%AE%87%E8%88%AA%E5%B1%80%E8%AE%A1%E5%88%92%E6%8D%95%E6%8D%89%E5%B0%8F%E8%A1%8C%E6%98%9F%EF%BC%9A%E8%8C%83%E5%9B%B4%E7%BC%A9%E8%87%B4%E4%B8%89%E9%A2%97&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252840.htm&amp;t=%E7%BE%8E%E5%9B%BD%E5%AE%87%E8%88%AA%E5%B1%80%E8%AE%A1%E5%88%92%E6%8D%95%E6%8D%89%E5%B0%8F%E8%A1%8C%E6%98%9F%EF%BC%9A%E8%8C%83%E5%9B%B4%E7%BC%A9%E8%87%B4%E4%B8%89%E9%A2%97&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252840.htm&amp;t=%E7%BE%8E%E5%9B%BD%E5%AE%87%E8%88%AA%E5%B1%80%E8%AE%A1%E5%88%92%E6%8D%95%E6%8D%89%E5%B0%8F%E8%A1%8C%E6%98%9F%EF%BC%9A%E8%8C%83%E5%9B%B4%E7%BC%A9%E8%87%B4%E4%B8%89%E9%A2%97&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608971573/u/47/f/624776/c/34306/s/31453881/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608971573/u/47/f/624776/c/34306/s/31453881/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608971573/u/47/f/624776/c/34306/s/31453881/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:49:59+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252839.htm">
	<title>cnBeta.COM: [程序员注意]南方电网信息中心招聘 - cnBeta专场</title>
	<link>http://www.cnbeta.com/articles/252839.htm</link>
	<content:encoded>&lt;p&gt;南方电网公司总部信息中心是公司企业级信息化项目群建设的执行机构和总部信息系统的运维服务机构，主要承担公司资产、营销、财务、人力资源、综合管理、协同办公、决策支持等企业级应用系统和基础设施、数据资源管理、服务集成、用户交互等综合技术平台的建设工作，以及总部软硬件平台、信息系统的运行维护工 作。在具体运作上，与公司信息部实行“两块牌子、一套人员”模式。&lt;strong&gt;为满足信息化建设与运维的需要，有效促进公司总部信息化人才队伍建设，经研究，决定面向社会公开招聘中高级信息技术人才，现将有关事项公告如下：&lt;/strong&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3145387f/sc/3/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252839.htm&amp;t=%5B%E7%A8%8B%E5%BA%8F%E5%91%98%E6%B3%A8%E6%84%8F%5D%E5%8D%97%E6%96%B9%E7%94%B5%E7%BD%91%E4%BF%A1%E6%81%AF%E4%B8%AD%E5%BF%83%E6%8B%9B%E8%81%98+-+cnBeta%E4%B8%93%E5%9C%BA&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252839.htm&amp;t=%5B%E7%A8%8B%E5%BA%8F%E5%91%98%E6%B3%A8%E6%84%8F%5D%E5%8D%97%E6%96%B9%E7%94%B5%E7%BD%91%E4%BF%A1%E6%81%AF%E4%B8%AD%E5%BF%83%E6%8B%9B%E8%81%98+-+cnBeta%E4%B8%93%E5%9C%BA&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252839.htm&amp;t=%5B%E7%A8%8B%E5%BA%8F%E5%91%98%E6%B3%A8%E6%84%8F%5D%E5%8D%97%E6%96%B9%E7%94%B5%E7%BD%91%E4%BF%A1%E6%81%AF%E4%B8%AD%E5%BF%83%E6%8B%9B%E8%81%98+-+cnBeta%E4%B8%93%E5%9C%BA&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252839.htm&amp;t=%5B%E7%A8%8B%E5%BA%8F%E5%91%98%E6%B3%A8%E6%84%8F%5D%E5%8D%97%E6%96%B9%E7%94%B5%E7%BD%91%E4%BF%A1%E6%81%AF%E4%B8%AD%E5%BF%83%E6%8B%9B%E8%81%98+-+cnBeta%E4%B8%93%E5%9C%BA&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252839.htm&amp;t=%5B%E7%A8%8B%E5%BA%8F%E5%91%98%E6%B3%A8%E6%84%8F%5D%E5%8D%97%E6%96%B9%E7%94%B5%E7%BD%91%E4%BF%A1%E6%81%AF%E4%B8%AD%E5%BF%83%E6%8B%9B%E8%81%98+-+cnBeta%E4%B8%93%E5%9C%BA&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608971572/u/47/f/624776/c/34306/s/3145387f/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608971572/u/47/f/624776/c/34306/s/3145387f/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608971572/u/47/f/624776/c/34306/s/3145387f/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:44:41+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252838.htm">
	<title>cnBeta.COM: 苹果对待劳工问题“双重标准”遭质疑</title>
	<link>http://www.cnbeta.com/articles/252838.htm</link>
	<content:encoded>&lt;p&gt;本周，苹果发布了新品iPhone 5S和iPhone 5C，无论是失望、不满或是欣喜，总之，苹果吸引了大家的全部眼光。&lt;strong&gt;不过，在风光的背后，苹果依旧被供应商的劳工问题所困扰。9月初，位于美国纽约的非盈 利组织“中国劳工观察”发布报告，指出苹果的无锡代工厂捷普绿点科技存在一系列侵权问题。&lt;/strong&gt;而在此前的7月30日，该组织已经发布报告指出，苹果的代工厂上 海昌硕、上海日腾、苏州应华共存在86项对于劳工权利的伤害。&lt;br /&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3145387c/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252838.htm&amp;t=%E8%8B%B9%E6%9E%9C%E5%AF%B9%E5%BE%85%E5%8A%B3%E5%B7%A5%E9%97%AE%E9%A2%98%E2%80%9C%E5%8F%8C%E9%87%8D%E6%A0%87%E5%87%86%E2%80%9D%E9%81%AD%E8%B4%A8%E7%96%91&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252838.htm&amp;t=%E8%8B%B9%E6%9E%9C%E5%AF%B9%E5%BE%85%E5%8A%B3%E5%B7%A5%E9%97%AE%E9%A2%98%E2%80%9C%E5%8F%8C%E9%87%8D%E6%A0%87%E5%87%86%E2%80%9D%E9%81%AD%E8%B4%A8%E7%96%91&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252838.htm&amp;t=%E8%8B%B9%E6%9E%9C%E5%AF%B9%E5%BE%85%E5%8A%B3%E5%B7%A5%E9%97%AE%E9%A2%98%E2%80%9C%E5%8F%8C%E9%87%8D%E6%A0%87%E5%87%86%E2%80%9D%E9%81%AD%E8%B4%A8%E7%96%91&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252838.htm&amp;t=%E8%8B%B9%E6%9E%9C%E5%AF%B9%E5%BE%85%E5%8A%B3%E5%B7%A5%E9%97%AE%E9%A2%98%E2%80%9C%E5%8F%8C%E9%87%8D%E6%A0%87%E5%87%86%E2%80%9D%E9%81%AD%E8%B4%A8%E7%96%91&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252838.htm&amp;t=%E8%8B%B9%E6%9E%9C%E5%AF%B9%E5%BE%85%E5%8A%B3%E5%B7%A5%E9%97%AE%E9%A2%98%E2%80%9C%E5%8F%8C%E9%87%8D%E6%A0%87%E5%87%86%E2%80%9D%E9%81%AD%E8%B4%A8%E7%96%91&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608971571/u/47/f/624776/c/34306/s/3145387c/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608971571/u/47/f/624776/c/34306/s/3145387c/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608971571/u/47/f/624776/c/34306/s/3145387c/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:43:10+00:00</dc:date>
</item>
<item rdf:about="http://www.cnblogs.com/pengdonglin137/p/3323663.html">
	<title>博客园_首页: 虚拟机利用Host-only实现在不插网线的情况下，虚拟机与主机实现双向通信，实现ssh连接以及samba服务实现共享 - 摩斯电码</title>
	<link>http://www.cnblogs.com/pengdonglin137/p/3323663.html</link>
	<content:encoded>&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;font size=&quot;4&quot;&gt;为了不影响其他的虚拟网卡，我们在VMware下在添加一块虚拟网卡：&lt;/font&gt; &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16094036-dd5b5df2f3354fbe9255e53f18434355.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16094044-fcd505c69d364b09b78002d499722687.png&quot; width=&quot;578&quot; height=&quot;483&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16094047-54362ef00b2a4683beb7522c22e16b56.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16094053-a1dc0d6114eb4248be0497bd096416ad.png&quot; width=&quot;535&quot; height=&quot;533&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;font size=&quot;4&quot;&gt;然后点击Next，选择连接方式：&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16094055-1f6727f9415f4a9b825500388a898995.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16094100-a1025faebee54c9890bd7c21bba7678d.png&quot; width=&quot;438&quot; height=&quot;436&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;font size=&quot;4&quot;&gt;点击Finish即可。&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;font size=&quot;4&quot;&gt;重新启动虚拟机，如果这是你手动添加的第一块虚拟网卡，那么应该是eth1。&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;font size=&quot;4&quot;&gt;配置eth1的ip信息&lt;/font&gt; &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16094115-005c7151810f445e9f8c4ba2bbedbdee.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16094120-b4afe1814ce04a3fb481073d65aabe81.png&quot; width=&quot;466&quot; height=&quot;418&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;font size=&quot;4&quot;&gt;可以看到，VMnet1的type就是Host-only，我们看一下他的DHCP setting信息：&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16094122-cbf628c7fb044911afd9d7ac1acda70b.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16094127-e837b3f9417c43f19bfea3ef82b2d94e.png&quot; width=&quot;488&quot; height=&quot;365&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;font size=&quot;4&quot;&gt;根据上面的信息，可以将eth1设置为跟VMnet1处于同一个网段，并将设置信息填写在 /etc/network/interfaces中，比如像如下信息：&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;  &lt;div&gt;   &lt;span&gt;# This file describes the network interfaces available on your system                                                                   &lt;br /&gt;# and how to activate them. For more information, see interfaces(&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;).&lt;br /&gt;&lt;br /&gt;# The loopback network &lt;/span&gt;&lt;span&gt;interface&lt;/span&gt;&lt;span&gt;&lt;br /&gt;auto lo&lt;br /&gt;iface lo inet loopback&lt;br /&gt;&lt;br /&gt;# The primary network &lt;/span&gt;&lt;span&gt;interface&lt;/span&gt;&lt;span&gt;&lt;br /&gt;auto eth0&lt;br /&gt;iface eth0 inet &lt;/span&gt;&lt;span&gt;static&lt;/span&gt;&lt;span&gt;&lt;br /&gt;address &lt;/span&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;8.129&lt;/span&gt;&lt;span&gt;&lt;br /&gt;netmask &lt;/span&gt;&lt;span&gt;255.255&lt;/span&gt;.&lt;span&gt;255.0&lt;/span&gt;&lt;span&gt;&lt;br /&gt;network &lt;/span&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;8.0&lt;/span&gt;&lt;span&gt;&lt;br /&gt;broadcast &lt;/span&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;8.255&lt;/span&gt;&lt;span&gt;&lt;br /&gt;gateway &lt;/span&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;8.1&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;br /&gt;auto eth0:&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;&lt;br /&gt;iface eth0:&lt;/span&gt;&lt;span&gt;1&lt;/span&gt; inet &lt;span&gt;static&lt;/span&gt;&lt;span&gt;&lt;br /&gt;address &lt;/span&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;253.129&lt;/span&gt;&lt;span&gt;&lt;br /&gt;netmask &lt;/span&gt;&lt;span&gt;255.255&lt;/span&gt;.&lt;span&gt;255.0&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;br /&gt;auto eth1&lt;br /&gt;iface eth1 inet &lt;/span&gt;&lt;span&gt;static&lt;/span&gt;&lt;span&gt;&lt;br /&gt;address &lt;/span&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;229.129&lt;/span&gt;&lt;span&gt;&lt;br /&gt;netmask &lt;/span&gt;&lt;span&gt;255.255&lt;/span&gt;.&lt;span&gt;255.0&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;这里只需要看eth1的配置即可，不用看其他的。&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;然后重新启动网络服务&amp;#160;&amp;#160; sudo /etc/init.d/networking restart &lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16094135-0bf46d9cb6a744989f12a91975f90c1e.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16094142-f1c2b9541eda40deb8024fefe64804f4.png&quot; width=&quot;580&quot; height=&quot;542&quot; /&gt;&lt;/a&gt; &lt;/p&gt;&lt;ul&gt;  &lt;li&gt;&lt;font size=&quot;4&quot;&gt;测试（为了准确点，拔掉网线）&lt;/font&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;在宿主机下面ping虚拟机&amp;#160;&amp;#160;&amp;#160; &lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16094148-97500c7bd8514babbc9ed1d7202ca7c0.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16094156-65695508bf1f4747a0847b200285bf63.png&quot; width=&quot;625&quot; height=&quot;410&quot; /&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;在虚拟机下面ping宿主机:&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16094209-2120f152cb9042739382a376954542d1.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16094217-2d1b002722aa4e6285977693894eaee2.png&quot; width=&quot;692&quot; height=&quot;225&quot; /&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;或者虚拟机可以ping一下宿主机的其他ip，比如我的宿主机上网的ip是192.168.8.129&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16094219-b660a8bd0fea439fa29dc10fe3ae6dca.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16094227-f48c0edaba98469bbbf2b6b0b0a500c3.png&quot; width=&quot;624&quot; height=&quot;270&quot; /&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;ul&gt;  &lt;li&gt;&lt;font size=&quot;4&quot;&gt;用samba服务实现共享（samba的配置过程这里不介绍），同样为了准确一些，还是拔掉网线。&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16094232-5725da77bff8464fa01729ef23e34d9a.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16094236-3e1e3099f5234aafb508a938419c4388.png&quot; width=&quot;214&quot; height=&quot;432&quot; /&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16094237-cc48328537cf41fe831beeb627572512.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16094303-df7272d4502f4ec89f8e3e8e6055c0f7.png&quot; width=&quot;497&quot; height=&quot;333&quot; /&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;点击完成即可。这样就可以在我的电脑下面出现一个映射出来的网络驱动器。&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;ul&gt;  &lt;li&gt;&lt;font size=&quot;4&quot;&gt;SSH连接，同样为了准确一些，还是拔掉网线。这里使用secureCRT作为客户端&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16100026-9e8f2322ad0f402daf1b105a75662814.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16100035-37a994e411a14c278532d2f57301709c.png&quot; width=&quot;386&quot; height=&quot;359&quot; /&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16100036-4d3179ddfff649d9aca6476dbbebecd3.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16100039-3a5147475d2b496296045af27dba4a87.png&quot; width=&quot;450&quot; height=&quot;283&quot; /&gt;&lt;/a&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;进行连接测试：&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16100041-f8cd288e174342c7a47aecad5febba18.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16100048-7ba1b94c6fd141adb2ed95ea68c9a14b.png&quot; width=&quot;450&quot; height=&quot;418&quot; /&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16100049-a6e1197f3ce340de8ee45e83803b4659.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16100052-a578e8a12adf4322b920339be078ca00.png&quot; width=&quot;395&quot; height=&quot;208&quot; /&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/480488/201309/16100055-6f0c8fdc57e8481ea0e99394f5b3c641.png&quot;&gt;&lt;img title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/480488/201309/16100057-b5840c2eb9604014add510aa4feb7b96.png&quot; width=&quot;580&quot; height=&quot;263&quot; /&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;连接成功。&lt;/font&gt;&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3323663&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/pengdonglin137/p/3323663.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/pengdonglin137/p/3323663.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-16T01:43:00+00:00</dc:date>
	<dc:creator>摩斯电码</dc:creator>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252837.htm">
	<title>cnBeta.COM: Netflix会借鉴盗版视频统计数据 以决定是否购买相关内容</title>
	<link>http://www.cnbeta.com/articles/252837.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;据外媒报道，Netflix公司会追踪盗版网站的节目下载量，以决定他们需要为客户购买哪些剧集的版权。作为一张反映观众喜好程度的&quot;晴雨表&quot;，这种做法确实是相对更加真实且有效的。&lt;/strong&gt;该公司内容收购副总裁Kelly Merryman在接受荷兰网站Tweakers的采访时，举出了一个例子——因为《越狱》(Prison Break)的种子(torrents)在该国非常流行，这促使Netflix收购了该剧的播放权。&lt;br /&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/314513a2/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252837.htm&amp;t=Netflix%E4%BC%9A%E5%80%9F%E9%89%B4%E7%9B%97%E7%89%88%E8%A7%86%E9%A2%91%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE+%E4%BB%A5%E5%86%B3%E5%AE%9A%E6%98%AF%E5%90%A6%E8%B4%AD%E4%B9%B0%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252837.htm&amp;t=Netflix%E4%BC%9A%E5%80%9F%E9%89%B4%E7%9B%97%E7%89%88%E8%A7%86%E9%A2%91%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE+%E4%BB%A5%E5%86%B3%E5%AE%9A%E6%98%AF%E5%90%A6%E8%B4%AD%E4%B9%B0%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252837.htm&amp;t=Netflix%E4%BC%9A%E5%80%9F%E9%89%B4%E7%9B%97%E7%89%88%E8%A7%86%E9%A2%91%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE+%E4%BB%A5%E5%86%B3%E5%AE%9A%E6%98%AF%E5%90%A6%E8%B4%AD%E4%B9%B0%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252837.htm&amp;t=Netflix%E4%BC%9A%E5%80%9F%E9%89%B4%E7%9B%97%E7%89%88%E8%A7%86%E9%A2%91%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE+%E4%BB%A5%E5%86%B3%E5%AE%9A%E6%98%AF%E5%90%A6%E8%B4%AD%E4%B9%B0%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252837.htm&amp;t=Netflix%E4%BC%9A%E5%80%9F%E9%89%B4%E7%9B%97%E7%89%88%E8%A7%86%E9%A2%91%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE+%E4%BB%A5%E5%86%B3%E5%AE%9A%E6%98%AF%E5%90%A6%E8%B4%AD%E4%B9%B0%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609117726/u/47/f/624776/c/34306/s/314513a2/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609117726/u/47/f/624776/c/34306/s/314513a2/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609117726/u/47/f/624776/c/34306/s/314513a2/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:38:20+00:00</dc:date>
</item>
<item rdf:about="http://www.cnblogs.com/CrazyProgram/p/How-to-learn-programing.html">
	<title>博客园_首页: [求指正]给大一孩子们的编程学习心得 - CrazyProgram</title>
	<link>http://www.cnblogs.com/CrazyProgram/p/How-to-learn-programing.html</link>
	<content:encoded>&lt;h1&gt;引言&lt;/h1&gt;&lt;p&gt;&lt;span&gt;应系里面要求要跟大一的孩子们讲一讲编程方面的心得，昨天搜罗了点东西，结合自己的经历今天早上整理的一下，不知道怎么样，发到园子里请大家看看，多多批评指正。&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;1、要学什么？&lt;/h1&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;搜索招聘信息，看其中的要求，了解社会需要什么。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;多看，了解行业的发展前景。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;h1&gt;2、如何学？&lt;/h1&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;基础很重要，大一的&lt;/span&gt;C/C++&lt;span&gt;课程就是基础，学会了一门语言其他的学习就会很快了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;学习技术最好的方法就是练习、练习、练习，用各种各样的程序证明你自己的猜测，猜测是思考的过程，证明是实践的过程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;不需要你有天赋，只需要愿意动手去做。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;h1&gt;3、如何更快更好的学习？&lt;/h1&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;有一个学习编程的动机，无论是为了解决自己使用计算机时的问题，还是做一个可以满足其他人需求的产品，或者是开发一个好玩的游戏，甚至是成为一名黑客。这些都是你学习编程的强有力的动力。有了一个动机之后，你就会为编程着迷。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;学会使用搜索引擎，遇到问题的时候使用搜索引擎是一个良好的习惯，会提取问题中的关键字，技术性的问题最好去谷歌。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;看别人写的技术博客，即使是没有目的的，也会帮你了解新知识，明确目标。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;开一个技术博客，博客园也好，&lt;/span&gt;CSDN&lt;span&gt;也好，把自己学习的过程，遇到的问题记录下来。注册一个&lt;/span&gt;github&lt;span&gt;帐号&lt;/span&gt;&lt;span&gt;，把自己写过的代码保存下来。这些都是求职的砝码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;在为了实现一个目标而学习编程的过程中，学习的效率是很快的，但是在这个过程中学习的深度和全面性是达不到的，因为这期间学习的目的非常明确，学习的只是与目标相关的问题，这时候就需要看一些编程博客和编程的书籍来完善自己的知识。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;h1&gt;4、大学与培训机构的区别&lt;/h1&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;大学会有一些理论性的、原理性的东西来帮你更好的理解和运用编程语言，能够帮你在遇到问题时明白问题的根源在哪，如何更好的解决。能够帮你开阔眼界。培训机构对实践的要求较高，所以在大学中应当自己有实践的动力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt; &lt;br /&gt;&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3323649&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/CrazyProgram/p/How-to-learn-programing.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/CrazyProgram/p/How-to-learn-programing.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-16T01:33:00+00:00</dc:date>
	<dc:creator>CrazyProgram</dc:creator>
</item>
<item rdf:about="http://www.cnblogs.com/geniusvczh/p/3323637.html">
	<title>博客园_首页: 如何设计一门语言（十）——正则表达式与领域特定语言（DSL） - 陈梓瀚(vczh)</title>
	<link>http://www.cnblogs.com/geniusvczh/p/3323637.html</link>
	<content:encoded>&lt;p&gt;几个月前就一直有博友关心DSL的问题，于是我想一想，我在&lt;a href=&quot;https://gac.codeplex.com&quot; target=&quot;_blank&quot;&gt;gac.codeplex.com&lt;/a&gt;里面也创建了一些DSL，于是今天就来说一说这个事情。&lt;/p&gt;  &lt;p&gt;创建DSL恐怕是很多人第一次设计一门语言的经历，很少有人一开始上来就设计通用语言的。我自己第一次做这种事情是在高中写这个&lt;a href=&quot;http://bbs.gameres.com/thread_5391_1_1.html&quot; target=&quot;_blank&quot;&gt;傻逼ARPG&lt;/a&gt;的时候了。当时做了一个超简单的脚本语言，长的就跟汇编差不多，虽然每一个指令都写成了调用函数的形态。虽然这个游戏需要脚本在剧情里面控制一些人物的走动什么的，但是所幸并不复杂，于是还是完成了任务。一眨眼10年过去了，现在在写&lt;a href=&quot;http://www.gaclib.net/&quot; target=&quot;_blank&quot;&gt;GacUI&lt;/a&gt;，为了开发的方便，我自己做了一些DSL，或者实现了别人的DSL，渐渐地也明白了一些设计DSL的手法。不过在讲这些东西之前，我们先来看一个令我们又爱（对所有人）又恨（反正我不会）的DSL——正则表达式！&lt;/p&gt;  &lt;p&gt;&lt;font size=&quot;5&quot;&gt;&lt;strong&gt;一、正则表达式&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;正则表达式可读性之差我们人人都知道，而且正则表达式之难写好都值得O’reilly出一本两厘米厚的书了。根据我的经验，只要先学好编译原理，然后按照.net的规格自己撸一个自己的正则表达式，基本上这本书就不用看了。因为正则表达式之所以要用奇怪的方法去写，只是因为你手上的引擎是那么实现的，所以你需要顺着他去写而已，没什么特别的原因。而且我自己的正则表达式拥有DFA和NFA两套解析器，我的正则表达式引擎会通过检查你的正则表达式来检查是否可以用DFA，从而可以优先使用DFA来运行，省去了很多其实不是那么重要的麻烦（譬如说a**会傻逼什么的）。这个东西我自己用的特别开心，代码也放在&lt;a href=&quot;https://gac.codeplex.com/&quot; target=&quot;_blank&quot;&gt;gac.codeplex.com&lt;/a&gt;上面。&lt;/p&gt;  &lt;p&gt;正则表达式作为一门DSL是当之无愧的——因为它用了一种紧凑的语法来让我们可以定义一个字符串的集合，并且取出里面的特征。大体上语法我还是很喜欢的，我唯一不喜欢的是正则表达式的括号的功能。括号作为一种指定优先级的方法，几乎是无法避免使用的。但是很多流行的正则表达式的括号竟然还带有捕获的功能，实在是令我大跌眼镜——因为大部分时候我是不需要捕获的，这个时候只会浪费时间和空间去做一些多余的事情而已。所以在我自己的正则表达式引擎里面，括号是不捕获的。如果要捕获，就得用特殊的语法，譬如说(&amp;lt;name&amp;gt;pattern)把pattern捕获到一个叫做name的组里面去。&lt;/p&gt;  &lt;p&gt;那我们可以从正则表达式的语法里面学到什么DSL的设计原则呢？我认为，DSL的原则其实很简单，只有以下三个：&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;短的语法要分配给常用的功能 &lt;/li&gt;    &lt;li&gt;语法要么可读性特别好（从而比直接用C#写直接），要么很紧凑（从而比直接用C#写短很多） &lt;/li&gt;    &lt;li&gt;API要容易定义（从而用C#调用非常方便，还可以确保DSL的目标是明确又简单的） &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;很多DSL其实都满足这个定义。SQL就属于API简单而且可读性好的那一部分（想想ADO.NET），而正则表达式就属于API简单而且语法紧凑的那一部分。为什么正则表达式可以设计的那么紧凑呢？现在让我们来一一揭开它神秘的面纱。&lt;/p&gt;  &lt;p&gt;正则表达式的基本元素是很少的，只有连接、分支和循环，还有一些简单的语法糖。连接不需要字符，分支需要一个字符“|”，循环也只需要一个字符“+”或者“*”，还有代表任意字符的“.”，还有代表多次循环的{5,}，还有代表字符集合的[a-zA-Z0-9_]。对于单个字符的集合来讲，我们甚至不需要[]，直接写就好了。除此之外因为我们用了一些特殊字符所以还得有转义（escaping）的过程。那让我们数数我们定义了多少字符：“|+*[]-\{},.()”。用的也不多，对吧。&lt;/p&gt;  &lt;p&gt;尽管看起来很乱，但是正则表达式本身也有一个严谨的语法结构。关于我的正则表达式的语法树定义可以看这里：&lt;a title=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Regex/RegexExpression.h&quot; href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Regex/RegexExpression.h&quot; target=&quot;_blank&quot;&gt;https://gac.codeplex.com/SourceControl/latest#Common/Source/Regex/RegexExpression.h&lt;/a&gt;。在这里我们可以整理出一个语法： &lt;/p&gt;  &lt;div&gt;   DIGIT ::= [&lt;span&gt;0&lt;/span&gt;-&lt;span&gt;9&lt;/span&gt;&lt;span&gt;]&lt;br /&gt;LITERAL ::&lt;/span&gt;= [^|+*\[\]\-\\{}\^&lt;span&gt;,.()]&lt;br /&gt;ANY_CHAR ::&lt;/span&gt;= LITERAL | &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;^&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt; | &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt; | &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt; | &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt; | &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt; | &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt; | &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt; | &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;\&amp;quot; | &lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;{&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt; | &lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;}&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt; | &lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;,&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt; | &lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;.&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt; | &lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;(&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt; | &lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;)&lt;span&gt;&amp;quot;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;CHAR&lt;br /&gt;    ::&lt;/span&gt;=&lt;span&gt; LITERAL&lt;br /&gt;    ::&lt;/span&gt;= &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;\&amp;quot; ANY_CHAR&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;CHARSET_COMPONENT&lt;br /&gt;    ::&lt;/span&gt;=&lt;span&gt; CHAR&lt;br /&gt;    ::&lt;/span&gt;= CHAR &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt; CHAR&lt;br /&gt;&lt;br /&gt;CHARSET&lt;br /&gt;    ::&lt;/span&gt;=&lt;span&gt; CHAR&lt;br /&gt;    ::&lt;/span&gt;= &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt; [&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;^&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;] { CHARSET_COMPONENT } &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;br /&gt;REGEX_0&lt;br /&gt;    ::&lt;/span&gt;=&lt;span&gt; CHARSET&lt;br /&gt;    ::&lt;/span&gt;= REGEX_0 &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;    ::&lt;/span&gt;= REGEX_0 &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;    ::&lt;/span&gt;= REGEX_0 &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt; { DIGIT } [&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt; [ { DIGIT } ]] &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;    ::&lt;/span&gt;= &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt; REGEX_2 &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;br /&gt;REGEX_1&lt;br /&gt;    ::&lt;/span&gt;=&lt;span&gt; REGEX_0&lt;br /&gt;    ::&lt;/span&gt;=&lt;span&gt; REGEX_1 REGEX_0&lt;br /&gt;&lt;br /&gt;REGEX_2&lt;br /&gt;    ::&lt;/span&gt;=&lt;span&gt; REGEX_1&lt;br /&gt;    ::&lt;/span&gt;= REGEX_2 &lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt; REGEX_1&lt;br /&gt;&lt;br /&gt;REGULAR_EXPRESSION&lt;br /&gt;    ::&lt;/span&gt;= REGEX_2&lt;/div&gt;&lt;p&gt;这只是随手写出来的语法，尽管可能不是那么严谨，但是代表了正则表达式的所有结构。为什么&lt;strong&gt;我们要熟练掌握EBNF的阅读和编写&lt;/strong&gt;？因为当我们用EBNF来看待我们的语言的时候，我们就不会被愈发的表面所困扰，我们会投过语法的外衣，看到语言本身的结构。脱别人衣服总是很爽的。&lt;/p&gt;&lt;p&gt;于是我们也要透过EBNF来看到正则表达式本身的结构。其实这是一件很简单的事情，只要把EBNF里面那些“fuck”这样的字符字面量去掉，然后规则就会分为两种：&lt;/p&gt;&lt;p&gt;1：规则仅由终结符构成——这是基本概念，譬如说上面的CHAR什么的。   &lt;br /&gt;2：规则的构成包含非终结符——这就是一个结构了。&lt;/p&gt;&lt;p&gt;我们甚至可以利用这种方法迅速从EBNF确定出我们需要的语法树长什么样子。具体的方法我就不说了，大家自己联系一下就会悟到这个简单粗暴的方法了。但是，我们在设计DSL的时候，是要反过来做的。&lt;strong&gt;首先确定语言的结构，翻译成语法树，再翻译成不带“fuck”的“骨架EBNF”，再设计具体的细节写成完整的EBNF&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;看到这里大家会觉得，其实正则表达式的结构跟四则运算式子是没有区别的。正则表达式的*是后缀操作符，|是中缀操作符，连接也是中最操作符——而且操作符是隐藏的！我猜perl系正则表达式的作者当初在做这个东西的时候，肯定纠结过“隐藏的中缀操作符”应该给谁的问题。不过其实我们可以通过收集一些素材，用不同的方案写出正则表达式，最后经过统计发现——隐藏的中缀操作符给连接操作是最靠谱的。&lt;/p&gt;&lt;p&gt;为什么呢？我们来举个例子，如果我们把连接和分支的语法互换的话，那么原本“fuck|you”就要写成“(f|u|c|k)(y|o|u)”了。写多几个你会发现，的确连接是比分支更常用的，所以短的那个要给连接，所以连接就&lt;strong&gt;被分配&lt;/strong&gt;了一个隐藏的中缀操作符了。&lt;/p&gt;&lt;p&gt;上面说了这么多废话，只是为了说明白一个道理——要先从结构入手然后才设计语法，并且要把最短的语法分配给最常用的功能。因为很多人设计DSL都反着来，然后做成了屎。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;font size=&quot;5&quot;&gt;二、Fpmacro&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;第二个要讲的是Fpmacro。简单来说，Fpmacro和C++的宏是类似的，但是C++的宏是从外向内展开的，这意味着dynamic scoping和call by name。Fpmacro是从内向外展开的，这意味着lexical scoping和call by value。这些概念我在&lt;a href=&quot;http://www.cppblog.com/vczh/archive/2013/07/05/201541.html&quot; target=&quot;_blank&quot;&gt;第七篇文章&lt;/a&gt;已经讲了，大家也知道C++的宏是一件多么不靠谱的事情。但是为什么我要设计Fpmacro呢？因为有一天我终于需要类似于Boost::Preprocessor那样子的东西了，因为我要生成&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Tuple.h&quot; target=&quot;_blank&quot;&gt;类似这样的代码&lt;/a&gt;。但是C++的宏实在是太他妈恶心了，恶心到连我都不能驾驭它。最终我就做出了Fpmacro，于是我可以用&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Tuple.h.fpm&quot; target=&quot;_blank&quot;&gt;这样的宏&lt;/a&gt;来生成上面提到的文件了。&lt;/p&gt;&lt;p&gt;我来举个例子，如果我要生成下面的代码： &lt;/p&gt;&lt;div&gt;  &lt;span&gt;int&lt;/span&gt; a1 = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; a2 = &lt;span&gt;2&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; a3 = &lt;span&gt;3&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; a4 = &lt;span&gt;4&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;a1&amp;lt;&amp;lt;a2&amp;lt;&amp;lt;a3&amp;lt;&amp;lt;a4&amp;lt;&amp;lt;endl;&lt;/div&gt;&lt;p&gt;就要写下面的Fpmacro代码： &lt;/p&gt;&lt;div&gt;  $$define $COUNT &lt;span&gt;4&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;定义数量：4&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;&lt;br /&gt;$$define $USE_VAR($index) a$index &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;定义变量名字，这样$USE_VAR(10)就会生成“a10”&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;br /&gt;$$define $DEFINE_VAR($index) $$begin &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;定义变量声明，这样$DEFINE_VAR(10)就会生成“int a10 = 10;”&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;br /&gt;&lt;span&gt;int&lt;/span&gt; $USE_VAR($index) =&lt;span&gt; $index;&lt;br /&gt;$( ) &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;用来换行——会多出一个多余的空格不过没关系&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;br /&gt;$$end&lt;br /&gt;&lt;br /&gt;$loop($COUNT,&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,$DEFINE_VAR) &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;首先，循环生成变量声明&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;&lt;br /&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;$loopsep($COUNT,&lt;span&gt;1&lt;/span&gt;,$USE_VAR,&amp;lt;&amp;lt;)&amp;lt;&amp;lt;endl; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;其次，循环使用这些变量&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;/div&gt;&lt;p&gt;顺便，Fpmacro的语法在&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Tools/Fpmacro/Fpmacro/FpmacroParser.parser.txt&quot; target=&quot;_blank&quot;&gt;这里&lt;/a&gt;，FpmacroParser.h/cpp是由这个语法生成的，剩下的几个文件就是C++的源代码了。不过因为今天讲的是如何设计DSL，那我就来讲一下，我当初为什么要把Fpmacro设计成这个样子。&lt;/p&gt;&lt;p&gt;在设计之前，首先我们需要知道Fpmacro的目标——设计一个没有坑的宏，而且这个宏还要支持分支和循环。那如何避免坑呢？最简单的方法就是把宏看成函数，真正的函数。当我们把一个宏的名字当成参数传递给另一个宏的时候，这个名字就成为了函数指针。这一点C++的宏是不可能完全的做到的，这里的坑实在是太多了。而且Boost::Preprocessor用来实现循环的那个技巧实在是我操太他妈难受了。&lt;/p&gt;&lt;p&gt;于是，我们就可以把需求整理成这样：&lt;/p&gt;&lt;ol&gt;  &lt;li&gt;Fpmacro的代码由函数组成，每一个函数的唯一目的都是生成C++代码的片段。 &lt;/li&gt;  &lt;li&gt;函数和函数之间的空白可以用来写代码。把这些代码收集起来就可以组成“main函数”了，从而构成Fpmacro代码的主体。 &lt;/li&gt;  &lt;li&gt;函数可以有内部函数，在代码复杂的时候可以充当一些namespace的功能，而且内部函数都是私有的。 &lt;/li&gt;  &lt;li&gt;Fpmacro代码可以include另一份Fpmacro代码，可以实现全局配置的功能。 &lt;/li&gt;  &lt;li&gt;Fpmacro必须支持分支和循环，而且他们的语法和函数调用应该一致。 &lt;/li&gt;  &lt;li&gt;用来代表C++代码的部分需要的转义应该降到最低。 &lt;/li&gt;  &lt;li&gt;即使是非功能代码部分，括号也必须配对。这是为了定义出一个清晰的简单的语法，而且因为C++本身也是括号配对的，所以这个规则并没有伤害。 &lt;/li&gt;  &lt;li&gt;C++本身对空格是有很高的容忍度的，因此Fpmacro作为一个以换行作为分隔符的语言，并不需要具备特别精确的控制空格的功能。 &lt;/li&gt;&lt;/ol&gt;&lt;p&gt;为什么要强调转义呢？因为如果用Fpmacro随便写点什么代码都要到处转义的话，那还怎么写得下去呀！&lt;/p&gt;&lt;p&gt;这个时候我们开始从结构入手。Fpmacro的结构是简单的，只有下面几种：&lt;/p&gt;&lt;ol&gt;  &lt;li&gt;普通C++代码 &lt;/li&gt;  &lt;li&gt;宏名字引用 &lt;/li&gt;  &lt;li&gt;宏调用 &lt;/li&gt;  &lt;li&gt;连接 &lt;/li&gt;  &lt;li&gt;括号 &lt;/li&gt;  &lt;li&gt;表达数组字面量（最后这被证明是没有任何意义的功能） &lt;/li&gt;&lt;/ol&gt;&lt;p&gt;根据上面提到的DSL三大原则，我们要给最常用的功能配置最短的语法。那最短的功能是什么呢？跟正则表达式一样，是连接。所以要给他一个隐藏的中缀运算符。其次就要考虑到转义了。如果Fpmacro大量运用的字符与C++用到的字符一样，那么我们在C++里面用这个字符的时候，就得转义了。这个是绝对不能接受的。我们来看看键盘，C++没用到的也就只有@和$了。这里我因为个人喜好，选择了$，它的功能大概跟C++的宏里面的#差不多。&lt;/p&gt;&lt;p&gt;那我们如何知道我们的代码片段是访问一个C++的名字，还是访问一个Fpmacro的名字呢？为了避免转义，而且也顺便可以突出Fpmacro的结构本身，我让所有的Fpmacro名字都要用$开头，无论是函数名还是参数都一样。于是定义函数就用$$define开始，而且多行的函数还要用$$begin和$$end来提示（见上面的例子）。函数调用就可以这么做：$名字(一些参数)。因为不管是参数名还是函数名都是$开头的，所以函数调用肯定也是$开头的。那写出来的代码真的需要转义怎么办呢？直接用$(字符)就行了。&lt;strong&gt;这个时候我们可以来检查一下这样做是不是会定义出歧义的语法&lt;/strong&gt;，答案当然是不会。&lt;/p&gt;&lt;p&gt;我们定义了$作为Fpmacro的名字前缀之后，是不是一个普通的C++代码（因此没有$），直接贴上去就相当于一个Fpmacro代码呢？结论当然是成立的。仔细选择这些语法可以让我们在只想写C++的时候可以专心写C++而不会被各种转义干扰到（想想在C++里面写正则表达式的那一堆斜杠卧槽）。&lt;/p&gt;&lt;p&gt;到了这里，就到了最关键的一步了。那我们把一个Fpmacro的名字传递给参数的时候，究竟是什么意思呢？一个Fpmacro的名字，要么就是一个字符串，要么就是一个Fpmacro函数，不会有别的东西了（其实还可能是数组，但是最后证明没用）。这个纯洁性要一直保持下去。就跟我们在C语言里面传递一个函数指针一样，不管传递到了哪里，我们都可以随时调用它。&lt;/p&gt;&lt;p&gt;那Fpmacro的函数到底有没有包括上下文呢？因为Fpmacro和pascal一样有“内部函数”，所以当然是要有上下文的。但是Fpmacro的名字都是只读的，所以只用shared_ptr来记录就可以了，不需要出动GC这样的东西。关于为什么带变量的闭包就必须用GC，这个大家可以去想一想。这是Fpmacro的函数像函数式语言而不是C语言的一个地方，这也是为什么我把名字写成了Fpmacro的原因了。&lt;/p&gt;&lt;p&gt;不过Fpmacro是不带lambda表达式的，因为这样只会把语法搞得更糟糕。再加上Fpmacro允许定义内部函数和Fpmacro名字是只读的这两条规则，所有的lambda表达式都可以简单的写成一个内部函数然后赋予它一个名字。因此这一点没有伤害。那什么时候需要传递一个Fpmacro函数呢进另一个函数呢？当然就只有循环了。Fpmacro的内置函数有分支循环还有简单的数值计算和比较功能。&lt;/p&gt;&lt;p&gt;我们来做一个小实验，生成下面的代码： &lt;/p&gt;&lt;div&gt;  &lt;span&gt;void&lt;/span&gt; Print(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; a1)&lt;br /&gt;{&lt;br /&gt;    cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;1st&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&amp;lt;&amp;lt;a1&amp;lt;&amp;lt;&lt;span&gt;endl;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Print(&lt;span&gt;int&lt;/span&gt; a1, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; a2)&lt;br /&gt;{&lt;br /&gt;    cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;1st&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&amp;lt;&amp;lt;a1&amp;lt;&amp;lt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;2nd&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&amp;lt;&amp;lt;a2&amp;lt;&amp;lt;&lt;span&gt;endl;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;....&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Print(&lt;span&gt;int&lt;/span&gt; a1, &lt;span&gt;int&lt;/span&gt; a2, ... &lt;span&gt;int&lt;/span&gt;&lt;span&gt; a10)&lt;br /&gt;{&lt;br /&gt;    cout&lt;/span&gt;&amp;lt;&amp;lt;...&amp;lt;&amp;lt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;10th&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&amp;lt;&amp;lt;a10&amp;lt;&amp;lt;&lt;span&gt;endl;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;....&lt;/span&gt;&lt;/div&gt;&lt;p&gt;我们需要两重循环，第一重是生成Print，第二重是里面的cout。cout里面还要根据数字来产生st啊、nd啊、rd啊、这些前缀。于是我们可以开始写了。Fpmacro的写法是这样的，因为没有lambda表达式，所以循环体都是一些独立的函数。于是我们来定义一些函数来生成变量名、参数定义和cout的片段： &lt;/p&gt;&lt;div&gt;  $$define $VAR_NAME($index) a$index &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;$VAR_NAME(3) -&amp;gt; a3&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;&lt;br /&gt;$$define $VAR_DEF($index) &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; $VAR_NAME($index) &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;$VAR_DEF(3) -&amp;gt; int a3&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;&lt;br /&gt;$$define $ORDER($index) $$begin &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;$ORDER(3) -&amp;gt; 3rd&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;&lt;br /&gt;    $$define $LAST_DIGIT $mod($index,&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;)&lt;br /&gt;    $index$&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;($eq($LAST_DIGIT,&lt;span&gt;1&lt;/span&gt;),st,$&lt;span&gt;if&lt;/span&gt;($eq($LAST_DIGIT,&lt;span&gt;2&lt;/span&gt;),nd,$&lt;span&gt;if&lt;/span&gt;($eq($LAST_DIGIT,&lt;span&gt;3&lt;/span&gt;&lt;span&gt;),rd,th)))&lt;br /&gt;$$end&lt;br /&gt;$$define $OUTPUT($index) $(&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span&gt;)$ORDER($index)$(&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;)&amp;lt;&amp;lt;$VAR_NAME($index) &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;$OUTPUT(3) -&amp;gt; &amp;quot;3rd&amp;quot;&amp;lt;&amp;lt;a3&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;/div&gt;&lt;p&gt;接下来就是实现Print函数的宏： &lt;/p&gt;&lt;div&gt;  &lt;span&gt;$$define $PRINT_FUNCTION($count) $$begin&lt;br /&gt;&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Print($loopsep($count,&lt;span&gt;1&lt;/span&gt;&lt;span&gt;,$VAR_DEF,$(,)))&lt;br /&gt;{&lt;br /&gt;    cout&lt;/span&gt;&amp;lt;&amp;lt;$loopsep($count,&lt;span&gt;1&lt;/span&gt;,$OUTPUT,&amp;lt;&amp;lt;)&amp;lt;&amp;lt;&lt;span&gt;endl;&lt;br /&gt;}&lt;br /&gt;$( )&lt;br /&gt;$$end&lt;/span&gt;&lt;/div&gt;&lt;p&gt;最后就是生成整片代码了： &lt;/p&gt;&lt;div&gt;  $define $COUNT &lt;span&gt;10&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;就算是20，那上面的代码的11也会生成11st，特别方便&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;&lt;br /&gt;$loop($COUNT,&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,$PRINT_FUNCTION)&lt;/div&gt;&lt;p&gt;注意：&lt;strong&gt;注释其实是不能加的&lt;/strong&gt;，因为如果你加了注释，这些注释最后也会被生成成C++，所以上面那个$COUNT就会变成10+空格+注释，他就不能放进$loop函数里面了。Fpmacro并没有添加“Fpmacro注释”的代码，因为我觉得没必要&lt;/p&gt;&lt;p&gt;为什么我们不需要C++的宏的#和##操作呢？因为在这里，A(x)##B(x)被我们处理成了$A(x)$B(x)，而L#A(x)被我们处理成了L$(“)$A(x)$(“)。虽然就这么看起来好像Fpmacro长了一点点，但是实际上用起来是特别方便的。$这个前缀恰好帮我们解决了A(x)##B(x)的##的问题，写的时候只需要直接写下去就可以了，譬如说$ORDER里面的$index$if…。&lt;/p&gt;&lt;p&gt;那么这样做到底行不行呢？看在Fpmacro可以用&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Reflection/GuiTypeDescriptorBuilder_Gen.h.fpm&quot; target=&quot;_blank&quot;&gt;这个宏&lt;/a&gt;来生成&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Reflection/GuiTypeDescriptorBuilder_Gen.h&quot; target=&quot;_blank&quot;&gt;这么复杂的代码&lt;/a&gt;的份上，我认为“简单紧凑”和“C++代码几乎不需要转义”和“没有坑”这三个目标算是达到了。DSL之所以为DSL就是因为我们是用它来完成特殊的目的的，不是general purpose的，因此不需要太复杂。因此设计DSL要有一个习惯，就是&lt;strong&gt;时刻审视一下，我们是不是设计了多余的东西&lt;/strong&gt;。现在我回过头来看，Fpmacro支持数组就是多余的，而且实践证明，根本没用上。&lt;/p&gt;&lt;p&gt;大家可能会说，代码遍地都是$看起来也很乱啊？没关系，最近我刚刚搞定了一个基于语法文件驱动的自动着色和智能提示的算法，只需要简单地写一个Fpmacro的编辑器就可以了，啊哈哈哈哈。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;font size=&quot;5&quot;&gt;三、尾声&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;本来我是想举很多个例子的，还有语法文件啊，GUI配置啊，甚至是SQL什么的。不过其实&lt;strong&gt;设计一个DSL首先要求你对领域本身有着足够的理解，在长期的开发中已经在这个领域里面感受到了极大的痛苦&lt;/strong&gt;，这样你才能真的设计出一个专门根除痛点的DSL来。&lt;/p&gt;&lt;p&gt;像正则表达式，我们都知道手写字符串处理程序经常要人肉做错误处理和回溯等工作，正则表达式帮我们自动完成了这个功能。&lt;/p&gt;&lt;p&gt;C++的宏生成复杂代码的时候，动不动就会因为dynamic scoping和call by name掉坑里而且还没有靠谱的工具来告诉我们究竟要怎么做，Fpmacro就解决了这个问题。&lt;/p&gt;&lt;p&gt;开发DSL需要语法分析器，而且带Visitor模式的语法树可扩展性好但是定义起来特别的麻烦，所以我定义了一个语法文件的格式，写了一个ParserGen.exe（代码在&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Tools/ParserGen/ParserGen/Main.cpp&quot; target=&quot;_blank&quot;&gt;这里&lt;/a&gt;）来替我生成代码。Fpmacro的语法分析器就是这么生成出来的。&lt;/p&gt;&lt;p&gt;GUI的构造代码写起来太他妈烦了，所以还得有一个配置的文件。&lt;/p&gt;&lt;p&gt;查询数据特别麻烦，而且就算是只有十几个T的小型数据库也很难自己设计一个靠谱的容器，所以我们需要SQLServer。这个DSL做起来不简单，但是用起来简单。这也是一个成功的DSL。&lt;/p&gt;&lt;p&gt;类似的，Visual Studio为了生成代码还提供了T4这种模板文件。这个东西其实超好用的——除了用来生成C++代码，所以我还得自己撸一个Fpmacro……&lt;/p&gt;&lt;p&gt;用MVC的方法来写HTML，需要从数据结构里面拼HTML。用过php的人都知道这种东西很容易就写成了屎，所以Visual Studio里面又在ASP.NET MVC里面提供了razor模板。而且他的IDE支持特别号，razor模板里面可以混着HTML+CSS+Javascript+C#的代码，智能提示从不出错！&lt;/p&gt;&lt;p&gt;还有各种数不清的配置文件。我们都知道，一个强大的配置文件最后都会进化成为lisp，哦不，DSL的。&lt;/p&gt;&lt;p&gt;这些都是DSL，用来解决我们的痛点的东西，而且他本身又不足以复杂到用来完成程序所有的功能（除了连http service都能写的SQLServer我们就不说了=_=）。设计DSL的时候，首先要找到痛点，其次要理清楚DSL的结构，然后再给他设计一个要么紧凑要么可读性特别高的语法，然后再给一个简单的API，用起来别提多爽了。&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3323637&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/geniusvczh/p/3323637.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/geniusvczh/p/3323637.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-16T01:27:00+00:00</dc:date>
	<dc:creator>陈梓瀚(vczh)</dc:creator>
</item>
<item rdf:about="http://www.cppblog.com/vczh/archive/2013/09/16/203249.html">
	<title>C++博客-首页原创净化区: 如何设计一门语言（十）&amp;mdash;&amp;mdash;正则表达式与领域特定语言（DSL）</title>
	<link>http://www.cppblog.com/vczh/archive/2013/09/16/203249.html</link>
	<content:encoded>&lt;p&gt;几个月前就一直有博友关心DSL的问题，于是我想一想，我在&lt;a href=&quot;https://gac.codeplex.com&quot; target=&quot;_blank&quot;&gt;gac.codeplex.com&lt;/a&gt;里面也创建了一些DSL，于是今天就来说一说这个事情。&lt;/p&gt; &lt;p&gt;创建DSL恐怕是很多人第一次设计一门语言的经历，很少有人一开始上来就设计通用语言的。我自己第一次做这种事情是在高中写这个&lt;a href=&quot;http://bbs.gameres.com/thread_5391_1_1.html&quot; target=&quot;_blank&quot;&gt;傻逼ARPG&lt;/a&gt;的时候了。当时做了一个超简单的脚本语言，长的就跟汇编差不多，虽然每一个指令都写成了调用函数的形态。虽然这个游戏需要脚本在剧情里面控制一些人物的走动什么的，但是所幸并不复杂，于是还是完成了任务。一眨眼10年过去了，现在在写&lt;a href=&quot;http://www.gaclib.net/&quot; target=&quot;_blank&quot;&gt;GacUI&lt;/a&gt;，为了开发的方便，我自己做了一些DSL，或者实现了别人的DSL，渐渐地也明白了一些设计DSL的手法。不过在讲这些东西之前，我们先来看一个令我们又爱（对所有人）又恨（反正我不会）的DSL——正则表达式！&lt;/p&gt; &lt;p&gt;&lt;font size=&quot;5&quot;&gt;&lt;strong&gt;一、正则表达式&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt; &lt;p&gt;正则表达式可读性之差我们人人都知道，而且正则表达式之难写好都值得O&amp;#8217;reilly出一本两厘米厚的书了。根据我的经验，只要先学好编译原理，然后按照.net的规格自己撸一个自己的正则表达式，基本上这本书就不用看了。因为正则表达式之所以要用奇怪的方法去写，只是因为你手上的引擎是那么实现的，所以你需要顺着他去写而已，没什么特别的原因。而且我自己的正则表达式拥有DFA和NFA两套解析器，我的正则表达式引擎会通过检查你的正则表达式来检查是否可以用DFA，从而可以优先使用DFA来运行，省去了很多其实不是那么重要的麻烦（譬如说a**会傻逼什么的）。这个东西我自己用的特别开心，代码也放在&lt;a href=&quot;https://gac.codeplex.com/&quot; target=&quot;_blank&quot;&gt;gac.codeplex.com&lt;/a&gt;上面。&lt;/p&gt; &lt;p&gt;正则表达式作为一门DSL是当之无愧的——因为它用了一种紧凑的语法来让我们可以定义一个字符串的集合，并且取出里面的特征。大体上语法我还是很喜欢的，我唯一不喜欢的是正则表达式的括号的功能。括号作为一种指定优先级的方法，几乎是无法避免使用的。但是很多流行的正则表达式的括号竟然还带有捕获的功能，实在是令我大跌眼镜——因为大部分时候我是不需要捕获的，这个时候只会浪费时间和空间去做一些多余的事情而已。所以在我自己的正则表达式引擎里面，括号是不捕获的。如果要捕获，就得用特殊的语法，譬如说(&amp;lt;name&amp;gt;pattern)把pattern捕获到一个叫做name的组里面去。&lt;/p&gt; &lt;p&gt;那我们可以从正则表达式的语法里面学到什么DSL的设计原则呢？我认为，DSL的原则其实很简单，只有以下三个：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;短的语法要分配给常用的功能  &lt;li&gt;语法要么可读性特别好（从而比直接用C#写直接），要么很紧凑（从而比直接用C#写短很多）  &lt;li&gt;API要容易定义（从而用C#调用非常方便，还可以确保DSL的目标是明确又简单的）&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;很多DSL其实都满足这个定义。SQL就属于API简单而且可读性好的那一部分（想想ADO.NET），而正则表达式就属于API简单而且语法紧凑的那一部分。为什么正则表达式可以设计的那么紧凑呢？现在让我们来一一揭开它神秘的面纱。&lt;/p&gt; &lt;p&gt;正则表达式的基本元素是很少的，只有连接、分支和循环，还有一些简单的语法糖。连接不需要字符，分支需要一个字符&amp;#8220;|&amp;#8221;，循环也只需要一个字符&amp;#8220;+&amp;#8221;或者&amp;#8220;*&amp;#8221;，还有代表任意字符的&amp;#8220;.&amp;#8221;，还有代表多次循环的{5,}，还有代表字符集合的[a-zA-Z0-9_]。对于单个字符的集合来讲，我们甚至不需要[]，直接写就好了。除此之外因为我们用了一些特殊字符所以还得有转义（escaping）的过程。那让我们数数我们定义了多少字符：&amp;#8220;|+*[]-\{},.()&amp;#8221;。用的也不多，对吧。&lt;/p&gt; &lt;p&gt;尽管看起来很乱，但是正则表达式本身也有一个严谨的语法结构。关于我的正则表达式的语法树定义可以看这里：&lt;a title=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Regex/RegexExpression.h&quot; href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Regex/RegexExpression.h&quot; target=&quot;_blank&quot;&gt;https://gac.codeplex.com/SourceControl/latest#Common/Source/Regex/RegexExpression.h&lt;/a&gt;。在这里我们可以整理出一个语法：  &lt;div class=&quot;cnblogs_code&quot;&gt;&lt;pre&gt;DIGIT ::= [&lt;span&gt;0&lt;/span&gt;-&lt;span&gt;9&lt;/span&gt;&lt;span&gt;]
LITERAL ::&lt;/span&gt;= [^|+*\[\]\-\\{}\^&lt;span&gt;,.()]
ANY_CHAR ::&lt;/span&gt;= LITERAL | &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;^&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; | &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; | &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; | &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; | &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; | &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; | &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; | &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\&quot; | &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;{&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; | &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; | &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; | &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;.&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; | &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; | &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)&lt;span&gt;&quot;
&lt;/span&gt;&lt;span&gt;
CHAR
    ::&lt;/span&gt;=&lt;span&gt; LITERAL
    ::&lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\&quot; ANY_CHAR&lt;/span&gt;
&lt;span&gt;
CHARSET_COMPONENT
    ::&lt;/span&gt;=&lt;span&gt; CHAR
    ::&lt;/span&gt;= CHAR &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; CHAR

CHARSET
    ::&lt;/span&gt;=&lt;span&gt; CHAR
    ::&lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; [&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;^&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] { CHARSET_COMPONENT } &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;

REGEX_0
    ::&lt;/span&gt;=&lt;span&gt; CHARSET
    ::&lt;/span&gt;= REGEX_0 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    ::&lt;/span&gt;= REGEX_0 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    ::&lt;/span&gt;= REGEX_0 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; { DIGIT } [&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; [ { DIGIT } ]] &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    ::&lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; REGEX_2 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;

REGEX_1
    ::&lt;/span&gt;=&lt;span&gt; REGEX_0
    ::&lt;/span&gt;=&lt;span&gt; REGEX_1 REGEX_0

REGEX_2
    ::&lt;/span&gt;=&lt;span&gt; REGEX_1
    ::&lt;/span&gt;= REGEX_2 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; REGEX_1

REGULAR_EXPRESSION
    ::&lt;/span&gt;= REGEX_2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这只是随手写出来的语法，尽管可能不是那么严谨，但是代表了正则表达式的所有结构。为什么&lt;strong&gt;我们要熟练掌握EBNF的阅读和编写&lt;/strong&gt;？因为当我们用EBNF来看待我们的语言的时候，我们就不会被愈发的表面所困扰，我们会投过语法的外衣，看到语言本身的结构。脱别人衣服总是很爽的。&lt;/p&gt;
&lt;p&gt;于是我们也要透过EBNF来看到正则表达式本身的结构。其实这是一件很简单的事情，只要把EBNF里面那些&amp;#8220;fuck&amp;#8221;这样的字符字面量去掉，然后规则就会分为两种：&lt;/p&gt;
&lt;p&gt;1：规则仅由终结符构成——这是基本概念，譬如说上面的CHAR什么的。&lt;br /&gt;2：规则的构成包含非终结符——这就是一个结构了。&lt;/p&gt;
&lt;p&gt;我们甚至可以利用这种方法迅速从EBNF确定出我们需要的语法树长什么样子。具体的方法我就不说了，大家自己联系一下就会悟到这个简单粗暴的方法了。但是，我们在设计DSL的时候，是要反过来做的。&lt;strong&gt;首先确定语言的结构，翻译成语法树，再翻译成不带&amp;#8220;fuck&amp;#8221;的&amp;#8220;骨架EBNF&amp;#8221;，再设计具体的细节写成完整的EBNF&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;看到这里大家会觉得，其实正则表达式的结构跟四则运算式子是没有区别的。正则表达式的*是后缀操作符，|是中缀操作符，连接也是中最操作符——而且操作符是隐藏的！我猜perl系正则表达式的作者当初在做这个东西的时候，肯定纠结过&amp;#8220;隐藏的中缀操作符&amp;#8221;应该给谁的问题。不过其实我们可以通过收集一些素材，用不同的方案写出正则表达式，最后经过统计发现——隐藏的中缀操作符给连接操作是最靠谱的。&lt;/p&gt;
&lt;p&gt;为什么呢？我们来举个例子，如果我们把连接和分支的语法互换的话，那么原本&amp;#8220;fuck|you&amp;#8221;就要写成&amp;#8220;(f|u|c|k)(y|o|u)&amp;#8221;了。写多几个你会发现，的确连接是比分支更常用的，所以短的那个要给连接，所以连接就&lt;strong&gt;被分配&lt;/strong&gt;了一个隐藏的中缀操作符了。&lt;/p&gt;
&lt;p&gt;上面说了这么多废话，只是为了说明白一个道理——要先从结构入手然后才设计语法，并且要把最短的语法分配给最常用的功能。因为很多人设计DSL都反着来，然后做成了屎。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;font size=&quot;5&quot;&gt;二、Fpmacro&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二个要讲的是Fpmacro。简单来说，Fpmacro和C++的宏是类似的，但是C++的宏是从外向内展开的，这意味着dynamic scoping和call by name。Fpmacro是从内向外展开的，这意味着lexical scoping和call by value。这些概念我在&lt;a href=&quot;http://www.cppblog.com/vczh/archive/2013/07/05/201541.html&quot; target=&quot;_blank&quot;&gt;第七篇文章&lt;/a&gt;已经讲了，大家也知道C++的宏是一件多么不靠谱的事情。但是为什么我要设计Fpmacro呢？因为有一天我终于需要类似于Boost::Preprocessor那样子的东西了，因为我要生成&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Tuple.h&quot; target=&quot;_blank&quot;&gt;类似这样的代码&lt;/a&gt;。但是C++的宏实在是太他妈恶心了，恶心到连我都不能驾驭它。最终我就做出了Fpmacro，于是我可以用&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Tuple.h.fpm&quot; target=&quot;_blank&quot;&gt;这样的宏&lt;/a&gt;来生成上面提到的文件了。&lt;/p&gt;
&lt;p&gt;我来举个例子，如果我要生成下面的代码： 
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;pre&gt;&lt;span&gt;int&lt;/span&gt; a1 = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; a2 = &lt;span&gt;2&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; a3 = &lt;span&gt;3&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; a4 = &lt;span&gt;4&lt;/span&gt;&lt;span&gt;;
cout&lt;/span&gt;&amp;lt;&amp;lt;a1&amp;lt;&amp;lt;a2&amp;lt;&amp;lt;a3&amp;lt;&amp;lt;a4&amp;lt;&amp;lt;endl;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;就要写下面的Fpmacro代码： 
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;pre&gt;$$define $COUNT &lt;span&gt;4&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;定义数量：4&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
$$define $USE_VAR($index) a$index &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;定义变量名字，这样$USE_VAR(10)就会生成&amp;#8220;a10&amp;#8221;&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;

$$define $DEFINE_VAR($index) $$begin &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;定义变量声明，这样$DEFINE_VAR(10)就会生成&amp;#8220;int a10 = 10;&amp;#8221;&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;int&lt;/span&gt; $USE_VAR($index) =&lt;span&gt; $index;
$( ) &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;用来换行——会多出一个多余的空格不过没关系&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt; &lt;/span&gt;
$$end

$loop($COUNT,&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,$DEFINE_VAR) &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;首先，循环生成变量声明&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
cout&lt;/span&gt;&amp;lt;&amp;lt;$loopsep($COUNT,&lt;span&gt;1&lt;/span&gt;,$USE_VAR,&amp;lt;&amp;lt;)&amp;lt;&amp;lt;endl; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;其次，循环使用这些变量&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;顺便，Fpmacro的语法在&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Tools/Fpmacro/Fpmacro/FpmacroParser.parser.txt&quot; target=&quot;_blank&quot;&gt;这里&lt;/a&gt;，FpmacroParser.h/cpp是由这个语法生成的，剩下的几个文件就是C++的源代码了。不过因为今天讲的是如何设计DSL，那我就来讲一下，我当初为什么要把Fpmacro设计成这个样子。&lt;/p&gt;
&lt;p&gt;在设计之前，首先我们需要知道Fpmacro的目标——设计一个没有坑的宏，而且这个宏还要支持分支和循环。那如何避免坑呢？最简单的方法就是把宏看成函数，真正的函数。当我们把一个宏的名字当成参数传递给另一个宏的时候，这个名字就成为了函数指针。这一点C++的宏是不可能完全的做到的，这里的坑实在是太多了。而且Boost::Preprocessor用来实现循环的那个技巧实在是我操太他妈难受了。&lt;/p&gt;
&lt;p&gt;于是，我们就可以把需求整理成这样：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fpmacro的代码由函数组成，每一个函数的唯一目的都是生成C++代码的片段。 
&lt;li&gt;函数和函数之间的空白可以用来写代码。把这些代码收集起来就可以组成&amp;#8220;main函数&amp;#8221;了，从而构成Fpmacro代码的主体。 
&lt;li&gt;函数可以有内部函数，在代码复杂的时候可以充当一些namespace的功能，而且内部函数都是私有的。 
&lt;li&gt;Fpmacro代码可以include另一份Fpmacro代码，可以实现全局配置的功能。 
&lt;li&gt;Fpmacro必须支持分支和循环，而且他们的语法和函数调用应该一致。 
&lt;li&gt;用来代表C++代码的部分需要的转义应该降到最低。 
&lt;li&gt;即使是非功能代码部分，括号也必须配对。这是为了定义出一个清晰的简单的语法，而且因为C++本身也是括号配对的，所以这个规则并没有伤害。 
&lt;li&gt;C++本身对空格是有很高的容忍度的，因此Fpmacro作为一个以换行作为分隔符的语言，并不需要具备特别精确的控制空格的功能。&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;为什么要强调转义呢？因为如果用Fpmacro随便写点什么代码都要到处转义的话，那还怎么写得下去呀！&lt;/p&gt;
&lt;p&gt;这个时候我们开始从结构入手。Fpmacro的结构是简单的，只有下面几种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;普通C++代码 
&lt;li&gt;宏名字引用 
&lt;li&gt;宏调用 
&lt;li&gt;连接 
&lt;li&gt;括号 
&lt;li&gt;表达数组字面量（最后这被证明是没有任何意义的功能）&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;根据上面提到的DSL三大原则，我们要给最常用的功能配置最短的语法。那最短的功能是什么呢？跟正则表达式一样，是连接。所以要给他一个隐藏的中缀运算符。其次就要考虑到转义了。如果Fpmacro大量运用的字符与C++用到的字符一样，那么我们在C++里面用这个字符的时候，就得转义了。这个是绝对不能接受的。我们来看看键盘，C++没用到的也就只有@和$了。这里我因为个人喜好，选择了$，它的功能大概跟C++的宏里面的#差不多。&lt;/p&gt;
&lt;p&gt;那我们如何知道我们的代码片段是访问一个C++的名字，还是访问一个Fpmacro的名字呢？为了避免转义，而且也顺便可以突出Fpmacro的结构本身，我让所有的Fpmacro名字都要用$开头，无论是函数名还是参数都一样。于是定义函数就用$$define开始，而且多行的函数还要用$$begin和$$end来提示（见上面的例子）。函数调用就可以这么做：$名字(一些参数)。因为不管是参数名还是函数名都是$开头的，所以函数调用肯定也是$开头的。那写出来的代码真的需要转义怎么办呢？直接用$(字符)就行了。&lt;strong&gt;这个时候我们可以来检查一下这样做是不是会定义出歧义的语法&lt;/strong&gt;，答案当然是不会。&lt;/p&gt;
&lt;p&gt;我们定义了$作为Fpmacro的名字前缀之后，是不是一个普通的C++代码（因此没有$），直接贴上去就相当于一个Fpmacro代码呢？结论当然是成立的。仔细选择这些语法可以让我们在只想写C++的时候可以专心写C++而不会被各种转义干扰到（想想在C++里面写正则表达式的那一堆斜杠卧槽）。&lt;/p&gt;
&lt;p&gt;到了这里，就到了最关键的一步了。那我们把一个Fpmacro的名字传递给参数的时候，究竟是什么意思呢？一个Fpmacro的名字，要么就是一个字符串，要么就是一个Fpmacro函数，不会有别的东西了（其实还可能是数组，但是最后证明没用）。这个纯洁性要一直保持下去。就跟我们在C语言里面传递一个函数指针一样，不管传递到了哪里，我们都可以随时调用它。&lt;/p&gt;
&lt;p&gt;那Fpmacro的函数到底有没有包括上下文呢？因为Fpmacro和pascal一样有&amp;#8220;内部函数&amp;#8221;，所以当然是要有上下文的。但是Fpmacro的名字都是只读的，所以只用shared_ptr来记录就可以了，不需要出动GC这样的东西。关于为什么带变量的闭包就必须用GC，这个大家可以去想一想。这是Fpmacro的函数像函数式语言而不是C语言的一个地方，这也是为什么我把名字写成了Fpmacro的原因了。&lt;/p&gt;
&lt;p&gt;不过Fpmacro是不带lambda表达式的，因为这样只会把语法搞得更糟糕。再加上Fpmacro允许定义内部函数和Fpmacro名字是只读的这两条规则，所有的lambda表达式都可以简单的写成一个内部函数然后赋予它一个名字。因此这一点没有伤害。那什么时候需要传递一个Fpmacro函数呢进另一个函数呢？当然就只有循环了。Fpmacro的内置函数有分支循环还有简单的数值计算和比较功能。&lt;/p&gt;
&lt;p&gt;我们来做一个小实验，生成下面的代码：
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;pre&gt;&lt;span&gt;void&lt;/span&gt; Print(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; a1)
{
    cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1st&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;a1&amp;lt;&amp;lt;&lt;span&gt;endl;
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Print(&lt;span&gt;int&lt;/span&gt; a1, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; a2)
{
    cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1st&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;a1&amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2nd&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;a2&amp;lt;&amp;lt;&lt;span&gt;endl;
}

....

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Print(&lt;span&gt;int&lt;/span&gt; a1, &lt;span&gt;int&lt;/span&gt; a2, ... &lt;span&gt;int&lt;/span&gt;&lt;span&gt; a10)
{
    cout&lt;/span&gt;&amp;lt;&amp;lt;...&amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;10th&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;a10&amp;lt;&amp;lt;&lt;span&gt;endl;
}

....&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;我们需要两重循环，第一重是生成Print，第二重是里面的cout。cout里面还要根据数字来产生st啊、nd啊、rd啊、这些前缀。于是我们可以开始写了。Fpmacro的写法是这样的，因为没有lambda表达式，所以循环体都是一些独立的函数。于是我们来定义一些函数来生成变量名、参数定义和cout的片段：
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;pre&gt;$$define $VAR_NAME($index) a$index &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;$VAR_NAME(3) -&amp;gt; a3&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
$$define $VAR_DEF($index) &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; $VAR_NAME($index) &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;$VAR_DEF(3) -&amp;gt; int a3&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
$$define $ORDER($index) $$begin &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;$ORDER(3) -&amp;gt; 3rd&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    $$define $LAST_DIGIT $mod($index,&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;)
    $index$&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;($eq($LAST_DIGIT,&lt;span&gt;1&lt;/span&gt;),st,$&lt;span&gt;if&lt;/span&gt;($eq($LAST_DIGIT,&lt;span&gt;2&lt;/span&gt;),nd,$&lt;span&gt;if&lt;/span&gt;($eq($LAST_DIGIT,&lt;span&gt;3&lt;/span&gt;&lt;span&gt;),rd,th)))
$$end
$$define $OUTPUT($index) $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)$ORDER($index)$(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)&amp;lt;&amp;lt;$VAR_NAME($index) &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;$OUTPUT(3) -&amp;gt; &quot;3rd&quot;&amp;lt;&amp;lt;a3&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;接下来就是实现Print函数的宏：
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;pre&gt;&lt;span&gt;$$define $PRINT_FUNCTION($count) $$begin
&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Print($loopsep($count,&lt;span&gt;1&lt;/span&gt;&lt;span&gt;,$VAR_DEF,$(,)))
{
    cout&lt;/span&gt;&amp;lt;&amp;lt;$loopsep($count,&lt;span&gt;1&lt;/span&gt;,$OUTPUT,&amp;lt;&amp;lt;)&amp;lt;&amp;lt;&lt;span&gt;endl;
}&lt;br /&gt;$( )
$$end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;最后就是生成整片代码了：
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;pre&gt;$define $COUNT &lt;span&gt;10&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;就算是20，那上面的代码的11也会生成11st，特别方便&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
$loop($COUNT,&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,$PRINT_FUNCTION)&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;注意：&lt;strong&gt;注释其实是不能加的&lt;/strong&gt;，因为如果你加了注释，这些注释最后也会被生成成C++，所以上面那个$COUNT就会变成10+空格+注释，他就不能放进$loop函数里面了。Fpmacro并没有添加&amp;#8220;Fpmacro注释&amp;#8221;的代码，因为我觉得没必要&lt;/p&gt;
&lt;p&gt;为什么我们不需要C++的宏的#和##操作呢？因为在这里，A(x)##B(x)被我们处理成了$A(x)$B(x)，而L#A(x)被我们处理成了L$(&amp;#8220;)$A(x)$(&amp;#8220;)。虽然就这么看起来好像Fpmacro长了一点点，但是实际上用起来是特别方便的。$这个前缀恰好帮我们解决了A(x)##B(x)的##的问题，写的时候只需要直接写下去就可以了，譬如说$ORDER里面的$index$if&amp;#8230;。&lt;/p&gt;
&lt;p&gt;那么这样做到底行不行呢？看在Fpmacro可以用&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Reflection/GuiTypeDescriptorBuilder_Gen.h.fpm&quot; target=&quot;_blank&quot;&gt;这个宏&lt;/a&gt;来生成&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Reflection/GuiTypeDescriptorBuilder_Gen.h&quot; target=&quot;_blank&quot;&gt;这么复杂的代码&lt;/a&gt;的份上，我认为&amp;#8220;简单紧凑&amp;#8221;和&amp;#8220;C++代码几乎不需要转义&amp;#8221;和&amp;#8220;没有坑&amp;#8221;这三个目标算是达到了。DSL之所以为DSL就是因为我们是用它来完成特殊的目的的，不是general purpose的，因此不需要太复杂。因此设计DSL要有一个习惯，就是&lt;strong&gt;时刻审视一下，我们是不是设计了多余的东西&lt;/strong&gt;。现在我回过头来看，Fpmacro支持数组就是多余的，而且实践证明，根本没用上。&lt;/p&gt;
&lt;p&gt;大家可能会说，代码遍地都是$看起来也很乱啊？没关系，最近我刚刚搞定了一个基于语法文件驱动的自动着色和智能提示的算法，只需要简单地写一个Fpmacro的编辑器就可以了，啊哈哈哈哈。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;font size=&quot;5&quot;&gt;三、尾声&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本来我是想举很多个例子的，还有语法文件啊，GUI配置啊，甚至是SQL什么的。不过其实&lt;strong&gt;设计一个DSL首先要求你对领域本身有着足够的理解，在长期的开发中已经在这个领域里面感受到了极大的痛苦&lt;/strong&gt;，这样你才能真的设计出一个专门根除痛点的DSL来。&lt;/p&gt;
&lt;p&gt;像正则表达式，我们都知道手写字符串处理程序经常要人肉做错误处理和回溯等工作，正则表达式帮我们自动完成了这个功能。&lt;/p&gt;
&lt;p&gt;C++的宏生成复杂代码的时候，动不动就会因为dynamic scoping和call by name掉坑里而且还没有靠谱的工具来告诉我们究竟要怎么做，Fpmacro就解决了这个问题。&lt;/p&gt;




&lt;p&gt;开发DSL需要语法分析器，而且带Visitor模式的语法树可扩展性好但是定义起来特别的麻烦，所以我定义了一个语法文件的格式，写了一个ParserGen.exe（代码在&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Tools/ParserGen/ParserGen/Main.cpp&quot; target=&quot;_blank&quot;&gt;这里&lt;/a&gt;）来替我生成代码。Fpmacro的语法分析器就是这么生成出来的。&lt;/p&gt;
&lt;p&gt;GUI的构造代码写起来太他妈烦了，所以还得有一个配置的文件。&lt;/p&gt;
&lt;p&gt;查询数据特别麻烦，而且就算是只有十几个T的小型数据库也很难自己设计一个靠谱的容器，所以我们需要SQLServer。这个DSL做起来不简单，但是用起来简单。这也是一个成功的DSL。&lt;/p&gt;
&lt;p&gt;类似的，Visual Studio为了生成代码还提供了T4这种模板文件。这个东西其实超好用的——除了用来生成C++代码，所以我还得自己撸一个Fpmacro&amp;#8230;&amp;#8230;&lt;/p&gt;
&lt;p&gt;用MVC的方法来写HTML，需要从数据结构里面拼HTML。用过php的人都知道这种东西很容易就写成了屎，所以Visual Studio里面又在ASP.NET MVC里面提供了razor模板。而且他的IDE支持特别号，razor模板里面可以混着HTML+CSS+Javascript+C#的代码，智能提示从不出错！&lt;/p&gt;
&lt;p&gt;还有各种数不清的配置文件。我们都知道，一个强大的配置文件最后都会进化成为lisp，哦不，DSL的。&lt;/p&gt;
&lt;p&gt;这些都是DSL，用来解决我们的痛点的东西，而且他本身又不足以复杂到用来完成程序所有的功能（除了连http service都能写的SQLServer我们就不说了=_=）。设计DSL的时候，首先要找到痛点，其次要理清楚DSL的结构，然后再给他设计一个要么紧凑要么可读性特别高的语法，然后再给一个简单的API，用起来别提多爽了。&lt;/p&gt; &lt;img src=&quot;http://www.cppblog.com/vczh/aggbug/203249.html&quot; width=&quot;1&quot; height=&quot;1&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;right&quot;&gt;&lt;a href=&quot;http://www.cppblog.com/vczh/&quot; target=&quot;_blank&quot;&gt;陈梓瀚(vczh)&lt;/a&gt; 2013-09-16 09:26 &lt;a href=&quot;http://www.cppblog.com/vczh/archive/2013/09/16/203249.html#Feedback&quot; target=&quot;_blank&quot;&gt;发表评论&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-16T01:26:00+00:00</dc:date>
</item>
<item rdf:about="http://www.udpwork.com/item/10682.html">
	<title>IT牛人博客聚合网站: 如何设计一门语言（十）&amp;mdash;&amp;mdash;正则表达式与领域特定语言（DSL）</title>
	<link>http://www.udpwork.com/item/10682.html</link>
	<content:encoded>&lt;p&gt;几个月前就一直有博友关心DSL的问题，于是我想一想，我在&lt;a href=&quot;https://gac.codeplex.com&quot;&gt;gac.codeplex.com&lt;/a&gt;里面也创建了一些DSL，于是今天就来说一说这个事情。&lt;/p&gt;
&lt;p&gt;创建DSL恐怕是很多人第一次设计一门语言的经历，很少有人一开始上来就设计通用语言的。我自己第一次做这种事情是在高中写这个&lt;a href=&quot;http://bbs.gameres.com/thread_5391_1_1.html&quot;&gt;傻逼ARPG&lt;/a&gt;的时候了。当时做了一个超简单的脚本语言，长的就跟汇编差不多，虽然每一个指令都写成了调用函数的形态。虽然这个游戏需要脚本在剧情里面控制一些人物的走动什么的，但是所幸并不复杂，于是还是完成了任务。一眨眼10年过去了，现在在写&lt;a href=&quot;http://www.gaclib.net/&quot;&gt;GacUI&lt;/a&gt;，为了开发的方便，我自己做了一些DSL，或者实现了别人的DSL，渐渐地也明白了一些设计DSL的手法。不过在讲这些东西之前，我们先来看一个令我们又爱（对所有人）又恨（反正我不会）的DSL——正则表达式！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、正则表达式&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;正则表达式可读性之差我们人人都知道，而且正则表达式之难写好都值得O’reilly出一本两厘米厚的书了。根据我的经验，只要先学好编译原理，然后按照.net的规格自己撸一个自己的正则表达式，基本上这本书就不用看了。因为正则表达式之所以要用奇怪的方法去写，只是因为你手上的引擎是那么实现的，所以你需要顺着他去写而已，没什么特别的原因。而且我自己的正则表达式拥有DFA和NFA两套解析器，我的正则表达式引擎会通过检查你的正则表达式来检查是否可以用DFA，从而可以优先使用DFA来运行，省去了很多其实不是那么重要的麻烦（譬如说a**会傻逼什么的）。这个东西我自己用的特别开心，代码也放在&lt;a href=&quot;https://gac.codeplex.com/&quot;&gt;gac.codeplex.com&lt;/a&gt;上面。&lt;/p&gt;
&lt;p&gt;正则表达式作为一门DSL是当之无愧的——因为它用了一种紧凑的语法来让我们可以定义一个字符串的集合，并且取出里面的特征。大体上语法我还是很喜欢的，我唯一不喜欢的是正则表达式的括号的功能。括号作为一种指定优先级的方法，几乎是无法避免使用的。但是很多流行的正则表达式的括号竟然还带有捕获的功能，实在是令我大跌眼镜——因为大部分时候我是不需要捕获的，这个时候只会浪费时间和空间去做一些多余的事情而已。所以在我自己的正则表达式引擎里面，括号是不捕获的。如果要捕获，就得用特殊的语法，譬如说(&amp;lt;name&amp;gt;pattern)把pattern捕获到一个叫做name的组里面去。&lt;/p&gt;
&lt;p&gt;那我们可以从正则表达式的语法里面学到什么DSL的设计原则呢？我认为，DSL的原则其实很简单，只有以下三个：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;短的语法要分配给常用的功能&lt;/li&gt;
&lt;li&gt;语法要么可读性特别好（从而比直接用C#写直接），要么很紧凑（从而比直接用C#写短很多）&lt;/li&gt;
&lt;li&gt;API要容易定义（从而用C#调用非常方便，还可以确保DSL的目标是明确又简单的）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;很多DSL其实都满足这个定义。SQL就属于API简单而且可读性好的那一部分（想想ADO.NET），而正则表达式就属于API简单而且语法紧凑的那一部分。为什么正则表达式可以设计的那么紧凑呢？现在让我们来一一揭开它神秘的面纱。&lt;/p&gt;
&lt;p&gt;正则表达式的基本元素是很少的，只有连接、分支和循环，还有一些简单的语法糖。连接不需要字符，分支需要一个字符“|”，循环也只需要一个字符“+”或者“*”，还有代表任意字符的“.”，还有代表多次循环的{5,}，还有代表字符集合的[a-zA-Z0-9_]。对于单个字符的集合来讲，我们甚至不需要[]，直接写就好了。除此之外因为我们用了一些特殊字符所以还得有转义（escaping）的过程。那让我们数数我们定义了多少字符：“|+*[]-\{},.()”。用的也不多，对吧。&lt;/p&gt;
&lt;p&gt;尽管看起来很乱，但是正则表达式本身也有一个严谨的语法结构。关于我的正则表达式的语法树定义可以看这里：&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Regex/RegexExpression.h&quot; title=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Regex/RegexExpression.h&quot;&gt;https://gac.codeplex.com/SourceControl/latest#Common/Source/Regex/RegexExpression.h&lt;/a&gt;。在这里我们可以整理出一个语法：&lt;/p&gt;
&lt;div&gt;&lt;pre&gt;DIGIT ::= [0-9]
LITERAL ::= [^|+*\[\]\-\\{}\^,.()]
ANY_CHAR ::= LITERAL | &amp;quot;^&amp;quot; | &amp;quot;|&amp;quot; | &amp;quot;+&amp;quot; | &amp;quot;*&amp;quot; | &amp;quot;[&amp;quot; | &amp;quot;]&amp;quot; | &amp;quot;-&amp;quot; | &amp;quot;\&amp;quot; | &amp;quot;{&amp;quot; | &amp;quot;}&amp;quot; | &amp;quot;,&amp;quot; | &amp;quot;.&amp;quot; | &amp;quot;(&amp;quot; | &amp;quot;)&amp;quot;

CHAR
    ::= LITERAL
    ::= &amp;quot;\&amp;quot; ANY_CHAR

CHARSET_COMPONENT
    ::= CHAR
    ::= CHAR &amp;quot;-&amp;quot; CHAR

CHARSET
    ::= CHAR
    ::= &amp;quot;[&amp;quot; [&amp;quot;^&amp;quot;] { CHARSET_COMPONENT } &amp;quot;]&amp;quot;

REGEX_0
    ::= CHARSET
    ::= REGEX_0 &amp;quot;+&amp;quot;
    ::= REGEX_0 &amp;quot;*&amp;quot;
    ::= REGEX_0 &amp;quot;{&amp;quot; { DIGIT } [&amp;quot;,&amp;quot; [ { DIGIT } ]] &amp;quot;}&amp;quot;
    ::= &amp;quot;(&amp;quot; REGEX_2 &amp;quot;)&amp;quot;

REGEX_1
    ::= REGEX_0
    ::= REGEX_1 REGEX_0

REGEX_2
    ::= REGEX_1
    ::= REGEX_2 &amp;quot;|&amp;quot; REGEX_1

REGULAR_EXPRESSION
    ::= REGEX_2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这只是随手写出来的语法，尽管可能不是那么严谨，但是代表了正则表达式的所有结构。为什么&lt;strong&gt;我们要熟练掌握EBNF的阅读和编写&lt;/strong&gt;
？因为当我们用EBNF来看待我们的语言的时候，我们就不会被愈发的表面所困扰，我们会投过语法的外衣，看到语言本身的结构。脱别人衣服总是很爽的。&lt;/p&gt;
&lt;p&gt;于是我们也要透过EBNF来看到正则表达式本身的结构。其实这是一件很简单的事情，只要把EBNF里面那些“fuck”这样的字符字面量去掉，然后规则就会分为两种：&lt;/p&gt;
&lt;p&gt;1：规则仅由终结符构成——这是基本概念，譬如说上面的CHAR什么的。
&lt;br /&gt;
2：规则的构成包含非终结符——这就是一个结构了。&lt;/p&gt;
&lt;p&gt;我们甚至可以利用这种方法迅速从EBNF确定出我们需要的语法树长什么样子。具体的方法我就不说了，大家自己联系一下就会悟到这个简单粗暴的方法了。但是，我们在设计DSL的时候，是要反过来做的。&lt;strong&gt;首先确定语言的结构，翻译成语法树，再翻译成不带“fuck”的“骨架EBNF”，再设计具体的细节写成完整的EBNF&lt;/strong&gt;
。&lt;/p&gt;
&lt;p&gt;看到这里大家会觉得，其实正则表达式的结构跟四则运算式子是没有区别的。正则表达式的*是后缀操作符，|是中缀操作符，连接也是中最操作符——而且操作符是隐藏的！我猜perl系正则表达式的作者当初在做这个东西的时候，肯定纠结过“隐藏的中缀操作符”应该给谁的问题。不过其实我们可以通过收集一些素材，用不同的方案写出正则表达式，最后经过统计发现——隐藏的中缀操作符给连接操作是最靠谱的。&lt;/p&gt;
&lt;p&gt;为什么呢？我们来举个例子，如果我们把连接和分支的语法互换的话，那么原本“fuck|you”就要写成“(f|u|c|k)(y|o|u)”了。写多几个你会发现，的确连接是比分支更常用的，所以短的那个要给连接，所以连接就&lt;strong&gt;被分配&lt;/strong&gt;
了一个隐藏的中缀操作符了。&lt;/p&gt;
&lt;p&gt;上面说了这么多废话，只是为了说明白一个道理——要先从结构入手然后才设计语法，并且要把最短的语法分配给最常用的功能。因为很多人设计DSL都反着来，然后做成了屎。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、Fpmacro&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;第二个要讲的是Fpmacro。简单来说，Fpmacro和C++的宏是类似的，但是C++的宏是从外向内展开的，这意味着dynamic scoping和call by name。Fpmacro是从内向外展开的，这意味着lexical scoping和call by value。这些概念我在&lt;a href=&quot;http://www.cppblog.com/vczh/archive/2013/07/05/201541.html&quot;&gt;第七篇文章&lt;/a&gt;已经讲了，大家也知道C++的宏是一件多么不靠谱的事情。但是为什么我要设计Fpmacro呢？因为有一天我终于需要类似于Boost::Preprocessor那样子的东西了，因为我要生成&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Tuple.h&quot;&gt;类似这样的代码&lt;/a&gt;。但是C++的宏实在是太他妈恶心了，恶心到连我都不能驾驭它。最终我就做出了Fpmacro，于是我可以用&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Tuple.h.fpm&quot;&gt;这样的宏&lt;/a&gt;来生成上面提到的文件了。&lt;/p&gt;
&lt;p&gt;我来举个例子，如果我要生成下面的代码：&lt;/p&gt;
&lt;div&gt;&lt;pre&gt;int a1 = 1;
int a2 = 2;
int a3 = 3;
int a4 = 4;
cout&amp;lt;&amp;lt;a1&amp;lt;&amp;lt;a2&amp;lt;&amp;lt;a3&amp;lt;&amp;lt;a4&amp;lt;&amp;lt;endl;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;就要写下面的Fpmacro代码：&lt;/p&gt;
&lt;div&gt;&lt;pre&gt;$$define $COUNT 4 /*定义数量：4*/
$$define $USE_VAR($index) a$index /*定义变量名字，这样$USE_VAR(10)就会生成“a10”*/

$$define $DEFINE_VAR($index) $$begin /*定义变量声明，这样$DEFINE_VAR(10)就会生成“int a10 = 10;”*/
int $USE_VAR($index) = $index;
$( ) /*用来换行——会多出一个多余的空格不过没关系*/ 
$$end

$loop($COUNT,1,$DEFINE_VAR) /*首先，循环生成变量声明*/
cout&amp;lt;&amp;lt;$loopsep($COUNT,1,$USE_VAR,&amp;lt;&amp;lt;)&amp;lt;&amp;lt;endl; /*其次，循环使用这些变量*/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;顺便，Fpmacro的语法在&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Tools/Fpmacro/Fpmacro/FpmacroParser.parser.txt&quot;&gt;这里&lt;/a&gt;，FpmacroParser.h/cpp是由这个语法生成的，剩下的几个文件就是C++的源代码了。不过因为今天讲的是如何设计DSL，那我就来讲一下，我当初为什么要把Fpmacro设计成这个样子。&lt;/p&gt;
&lt;p&gt;在设计之前，首先我们需要知道Fpmacro的目标——设计一个没有坑的宏，而且这个宏还要支持分支和循环。那如何避免坑呢？最简单的方法就是把宏看成函数，真正的函数。当我们把一个宏的名字当成参数传递给另一个宏的时候，这个名字就成为了函数指针。这一点C++的宏是不可能完全的做到的，这里的坑实在是太多了。而且Boost::Preprocessor用来实现循环的那个技巧实在是我操太他妈难受了。&lt;/p&gt;
&lt;p&gt;于是，我们就可以把需求整理成这样：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Fpmacro的代码由函数组成，每一个函数的唯一目的都是生成C++代码的片段。&lt;/li&gt;
&lt;li&gt;函数和函数之间的空白可以用来写代码。把这些代码收集起来就可以组成“main函数”了，从而构成Fpmacro代码的主体。&lt;/li&gt;
&lt;li&gt;函数可以有内部函数，在代码复杂的时候可以充当一些namespace的功能，而且内部函数都是私有的。&lt;/li&gt;
&lt;li&gt;Fpmacro代码可以include另一份Fpmacro代码，可以实现全局配置的功能。&lt;/li&gt;
&lt;li&gt;Fpmacro必须支持分支和循环，而且他们的语法和函数调用应该一致。&lt;/li&gt;
&lt;li&gt;用来代表C++代码的部分需要的转义应该降到最低。&lt;/li&gt;
&lt;li&gt;即使是非功能代码部分，括号也必须配对。这是为了定义出一个清晰的简单的语法，而且因为C++本身也是括号配对的，所以这个规则并没有伤害。&lt;/li&gt;
&lt;li&gt;C++本身对空格是有很高的容忍度的，因此Fpmacro作为一个以换行作为分隔符的语言，并不需要具备特别精确的控制空格的功能。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为什么要强调转义呢？因为如果用Fpmacro随便写点什么代码都要到处转义的话，那还怎么写得下去呀！&lt;/p&gt;
&lt;p&gt;这个时候我们开始从结构入手。Fpmacro的结构是简单的，只有下面几种：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;普通C++代码&lt;/li&gt;
&lt;li&gt;宏名字引用&lt;/li&gt;
&lt;li&gt;宏调用&lt;/li&gt;
&lt;li&gt;连接&lt;/li&gt;
&lt;li&gt;括号&lt;/li&gt;
&lt;li&gt;表达数组字面量（最后这被证明是没有任何意义的功能）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根据上面提到的DSL三大原则，我们要给最常用的功能配置最短的语法。那最短的功能是什么呢？跟正则表达式一样，是连接。所以要给他一个隐藏的中缀运算符。其次就要考虑到转义了。如果Fpmacro大量运用的字符与C++用到的字符一样，那么我们在C++里面用这个字符的时候，就得转义了。这个是绝对不能接受的。我们来看看键盘，C++没用到的也就只有@和$了。这里我因为个人喜好，选择了$，它的功能大概跟C++的宏里面的#差不多。&lt;/p&gt;
&lt;p&gt;那我们如何知道我们的代码片段是访问一个C++的名字，还是访问一个Fpmacro的名字呢？为了避免转义，而且也顺便可以突出Fpmacro的结构本身，我让所有的Fpmacro名字都要用$开头，无论是函数名还是参数都一样。于是定义函数就用$$define开始，而且多行的函数还要用$$begin和$$end来提示（见上面的例子）。函数调用就可以这么做：$名字(一些参数)。因为不管是参数名还是函数名都是$开头的，所以函数调用肯定也是$开头的。那写出来的代码真的需要转义怎么办呢？直接用$(字符)就行了。&lt;strong&gt;这个时候我们可以来检查一下这样做是不是会定义出歧义的语法&lt;/strong&gt;
，答案当然是不会。&lt;/p&gt;
&lt;p&gt;我们定义了$作为Fpmacro的名字前缀之后，是不是一个普通的C++代码（因此没有$），直接贴上去就相当于一个Fpmacro代码呢？结论当然是成立的。仔细选择这些语法可以让我们在只想写C++的时候可以专心写C++而不会被各种转义干扰到（想想在C++里面写正则表达式的那一堆斜杠卧槽）。&lt;/p&gt;
&lt;p&gt;到了这里，就到了最关键的一步了。那我们把一个Fpmacro的名字传递给参数的时候，究竟是什么意思呢？一个Fpmacro的名字，要么就是一个字符串，要么就是一个Fpmacro函数，不会有别的东西了（其实还可能是数组，但是最后证明没用）。这个纯洁性要一直保持下去。就跟我们在C语言里面传递一个函数指针一样，不管传递到了哪里，我们都可以随时调用它。&lt;/p&gt;
&lt;p&gt;那Fpmacro的函数到底有没有包括上下文呢？因为Fpmacro和pascal一样有“内部函数”，所以当然是要有上下文的。但是Fpmacro的名字都是只读的，所以只用shared_ptr来记录就可以了，不需要出动GC这样的东西。关于为什么带变量的闭包就必须用GC，这个大家可以去想一想。这是Fpmacro的函数像函数式语言而不是C语言的一个地方，这也是为什么我把名字写成了Fpmacro的原因了。&lt;/p&gt;
&lt;p&gt;不过Fpmacro是不带lambda表达式的，因为这样只会把语法搞得更糟糕。再加上Fpmacro允许定义内部函数和Fpmacro名字是只读的这两条规则，所有的lambda表达式都可以简单的写成一个内部函数然后赋予它一个名字。因此这一点没有伤害。那什么时候需要传递一个Fpmacro函数呢进另一个函数呢？当然就只有循环了。Fpmacro的内置函数有分支循环还有简单的数值计算和比较功能。&lt;/p&gt;
&lt;p&gt;我们来做一个小实验，生成下面的代码：&lt;/p&gt;
&lt;div&gt;&lt;pre&gt;void Print(int a1)
{
    cout&amp;lt;&amp;lt;&amp;quot;1st&amp;quot;&amp;lt;&amp;lt;a1&amp;lt;&amp;lt;endl;
}

void Print(int a1, int a2)
{
    cout&amp;lt;&amp;lt;&amp;quot;1st&amp;quot;&amp;lt;&amp;lt;a1&amp;lt;&amp;lt;&amp;quot;, &amp;quot;&amp;lt;&amp;lt;&amp;quot;2nd&amp;quot;&amp;lt;&amp;lt;a2&amp;lt;&amp;lt;endl;
}

....

void Print(int a1, int a2, ... int a10)
{
    cout&amp;lt;&amp;lt;...&amp;lt;&amp;lt;&amp;quot;10th&amp;quot;&amp;lt;&amp;lt;a10&amp;lt;&amp;lt;endl;
}

....&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们需要两重循环，第一重是生成Print，第二重是里面的cout。cout里面还要根据数字来产生st啊、nd啊、rd啊、这些前缀。于是我们可以开始写了。Fpmacro的写法是这样的，因为没有lambda表达式，所以循环体都是一些独立的函数。于是我们来定义一些函数来生成变量名、参数定义和cout的片段：&lt;/p&gt;
&lt;div&gt;&lt;pre&gt;$$define $VAR_NAME($index) a$index /*$VAR_NAME(3) -&amp;gt; a3*/
$$define $VAR_DEF($index) int $VAR_NAME($index) /*$VAR_DEF(3) -&amp;gt; int a3*/
$$define $ORDER($index) $$begin /*$ORDER(3) -&amp;gt; 3rd*/
    $$define $LAST_DIGIT $mod($index,10)
    $index$if($eq($LAST_DIGIT,1),st,$if($eq($LAST_DIGIT,2),nd,$if($eq($LAST_DIGIT,3),rd,th)))
$$end
$$define $OUTPUT($index) $(&amp;quot;)$ORDER($index)$(&amp;quot;)&amp;lt;&amp;lt;$VAR_NAME($index) /*$OUTPUT(3) -&amp;gt; &amp;quot;3rd&amp;quot;&amp;lt;&amp;lt;a3*/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来就是实现Print函数的宏：&lt;/p&gt;
&lt;div&gt;&lt;pre&gt;$$define $PRINT_FUNCTION($count) $$begin
void Print($loopsep($count,1,$VAR_DEF,$(,)))
{
    cout&amp;lt;&amp;lt;$loopsep($count,1,$OUTPUT,&amp;lt;&amp;lt;)&amp;lt;&amp;lt;endl;
}$( )
$$end&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后就是生成整片代码了：&lt;/p&gt;
&lt;div&gt;&lt;pre&gt;$define $COUNT 10 /*就算是20，那上面的代码的11也会生成11st，特别方便*/
$loop($COUNT,1,$PRINT_FUNCTION)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意：&lt;strong&gt;注释其实是不能加的&lt;/strong&gt;
，因为如果你加了注释，这些注释最后也会被生成成C++，所以上面那个$COUNT就会变成10+空格+注释，他就不能放进$loop函数里面了。Fpmacro并没有添加“Fpmacro注释”的代码，因为我觉得没必要&lt;/p&gt;
&lt;p&gt;为什么我们不需要C++的宏的#和##操作呢？因为在这里，A(x)##B(x)被我们处理成了$A(x)$B(x)，而L#A(x)被我们处理成了L$(“)$A(x)$(“)。虽然就这么看起来好像Fpmacro长了一点点，但是实际上用起来是特别方便的。$这个前缀恰好帮我们解决了A(x)##B(x)的##的问题，写的时候只需要直接写下去就可以了，譬如说$ORDER里面的$index$if…。&lt;/p&gt;
&lt;p&gt;那么这样做到底行不行呢？看在Fpmacro可以用&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Reflection/GuiTypeDescriptorBuilder_Gen.h.fpm&quot;&gt;这个宏&lt;/a&gt;来生成&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Source/Reflection/GuiTypeDescriptorBuilder_Gen.h&quot;&gt;这么复杂的代码&lt;/a&gt;的份上，我认为“简单紧凑”和“C++代码几乎不需要转义”和“没有坑”这三个目标算是达到了。DSL之所以为DSL就是因为我们是用它来完成特殊的目的的，不是general purpose的，因此不需要太复杂。因此设计DSL要有一个习惯，就是&lt;strong&gt;时刻审视一下，我们是不是设计了多余的东西&lt;/strong&gt;
。现在我回过头来看，Fpmacro支持数组就是多余的，而且实践证明，根本没用上。&lt;/p&gt;
&lt;p&gt;大家可能会说，代码遍地都是$看起来也很乱啊？没关系，最近我刚刚搞定了一个基于语法文件驱动的自动着色和智能提示的算法，只需要简单地写一个Fpmacro的编辑器就可以了，啊哈哈哈哈。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、尾声&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;本来我是想举很多个例子的，还有语法文件啊，GUI配置啊，甚至是SQL什么的。不过其实&lt;strong&gt;设计一个DSL首先要求你对领域本身有着足够的理解，在长期的开发中已经在这个领域里面感受到了极大的痛苦&lt;/strong&gt;
，这样你才能真的设计出一个专门根除痛点的DSL来。&lt;/p&gt;
&lt;p&gt;像正则表达式，我们都知道手写字符串处理程序经常要人肉做错误处理和回溯等工作，正则表达式帮我们自动完成了这个功能。&lt;/p&gt;
&lt;p&gt;C++的宏生成复杂代码的时候，动不动就会因为dynamic scoping和call by name掉坑里而且还没有靠谱的工具来告诉我们究竟要怎么做，Fpmacro就解决了这个问题。&lt;/p&gt;
&lt;p&gt;开发DSL需要语法分析器，而且带Visitor模式的语法树可扩展性好但是定义起来特别的麻烦，所以我定义了一个语法文件的格式，写了一个ParserGen.exe（代码在&lt;a href=&quot;https://gac.codeplex.com/SourceControl/latest#Common/Tools/ParserGen/ParserGen/Main.cpp&quot;&gt;这里&lt;/a&gt;）来替我生成代码。Fpmacro的语法分析器就是这么生成出来的。&lt;/p&gt;
&lt;p&gt;GUI的构造代码写起来太他妈烦了，所以还得有一个配置的文件。&lt;/p&gt;
&lt;p&gt;查询数据特别麻烦，而且就算是只有十几个T的小型数据库也很难自己设计一个靠谱的容器，所以我们需要SQLServer。这个DSL做起来不简单，但是用起来简单。这也是一个成功的DSL。&lt;/p&gt;
&lt;p&gt;类似的，Visual Studio为了生成代码还提供了T4这种模板文件。这个东西其实超好用的——除了用来生成C++代码，所以我还得自己撸一个Fpmacro……&lt;/p&gt;
&lt;p&gt;用MVC的方法来写HTML，需要从数据结构里面拼HTML。用过php的人都知道这种东西很容易就写成了屎，所以Visual Studio里面又在ASP.NET MVC里面提供了razor模板。而且他的IDE支持特别号，razor模板里面可以混着HTML+CSS+Javascript+C#的代码，智能提示从不出错！&lt;/p&gt;
&lt;p&gt;还有各种数不清的配置文件。我们都知道，一个强大的配置文件最后都会进化成为lisp，哦不，DSL的。&lt;/p&gt;
&lt;p&gt;这些都是DSL，用来解决我们的痛点的东西，而且他本身又不足以复杂到用来完成程序所有的功能（除了连http service都能写的SQLServer我们就不说了=_=）。设计DSL的时候，首先要找到痛点，其次要理清楚DSL的结构，然后再给他设计一个要么紧凑要么可读性特别高的语法，然后再给一个简单的API，用起来别提多爽了。&lt;/p&gt;
&lt;img src=&quot;http://www.cppblog.com/vczh/aggbug/203249.html&quot; /&gt;
&lt;br /&gt;

&lt;br /&gt;
&lt;div&gt;&lt;a href=&quot;http://www.cppblog.com/vczh/&quot;&gt;陈梓瀚(vczh)&lt;/a&gt;2013-09-16 09:26&lt;a href=&quot;http://www.cppblog.com/vczh/archive/2013/09/16/203249.html#Feedback&quot;&gt;发表评论&lt;/a&gt;&lt;/div&gt;

			&lt;div&gt;
				&lt;div&gt;
	&lt;a href=&quot;http://www.udpwork.com/item/10682.html#review_form&quot; target=&quot;_blank&quot; title=&quot;不喜欢&quot;&gt;
		&lt;img src=&quot;http://www.udpwork.com//images/thumb_down24.gif&quot; alt=&quot;&quot; /&gt;
		&lt;span&gt;0&lt;/span&gt;
	&lt;/a&gt;
	&amp;nbsp; &amp;nbsp;
	&lt;a href=&quot;http://www.udpwork.com/item/10682.html#review_form&quot; target=&quot;_blank&quot; title=&quot;喜欢&quot;&gt;
		&lt;img src=&quot;http://www.udpwork.com//images/thumb_up24.gif&quot; alt=&quot;&quot; /&gt;
		&lt;span&gt;0&lt;/span&gt;
	&lt;/a&gt;
&lt;/div&gt;				&lt;p&gt;
					由 &lt;a href=&quot;http://www.udpwork.com/&quot;&gt;udpwork.com&lt;/a&gt; 聚合
					|
					&lt;a href=&quot;http://www.udpwork.com/item/10682.html#reviews&quot;&gt;评论: 0&lt;/a&gt;
					|
					&lt;a href=&quot;http://www.jikenow.com/&quot; target=&quot;_blank&quot;&gt;要! 要! 即刻! Now!&lt;/a&gt;
				&lt;/p&gt;
			&lt;/div&gt;</content:encoded>
	<dc:date>2013-09-16T01:26:00+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252836.htm">
	<title>cnBeta.COM: 苹果内部开始广泛测试iOS 7.0.1，iOS 7.0.2和iOS 7.1</title>
	<link>http://www.cnbeta.com/articles/252836.htm</link>
	<content:encoded>&lt;p&gt;虽然iOS 7的首个正式版本要过两天在9月18日才正式对外公开，但是苹果内部现在已经开始了更新的iOS 7版本的测试工作。&lt;strong&gt;根据9to5mac网站分析数据显示，已经有iOS 7.0.1，iOS 7.0.2和iOS 7.1正在被苹果员工使用，并尝试使用这些新系统的设备访问各种网站。&lt;/strong&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31452229/sc/28/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252836.htm&amp;t=%E8%8B%B9%E6%9E%9C%E5%86%85%E9%83%A8%E5%BC%80%E5%A7%8B%E5%B9%BF%E6%B3%9B%E6%B5%8B%E8%AF%95iOS+7.0.1%EF%BC%8CiOS+7.0.2%E5%92%8CiOS+7.1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252836.htm&amp;t=%E8%8B%B9%E6%9E%9C%E5%86%85%E9%83%A8%E5%BC%80%E5%A7%8B%E5%B9%BF%E6%B3%9B%E6%B5%8B%E8%AF%95iOS+7.0.1%EF%BC%8CiOS+7.0.2%E5%92%8CiOS+7.1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252836.htm&amp;t=%E8%8B%B9%E6%9E%9C%E5%86%85%E9%83%A8%E5%BC%80%E5%A7%8B%E5%B9%BF%E6%B3%9B%E6%B5%8B%E8%AF%95iOS+7.0.1%EF%BC%8CiOS+7.0.2%E5%92%8CiOS+7.1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252836.htm&amp;t=%E8%8B%B9%E6%9E%9C%E5%86%85%E9%83%A8%E5%BC%80%E5%A7%8B%E5%B9%BF%E6%B3%9B%E6%B5%8B%E8%AF%95iOS+7.0.1%EF%BC%8CiOS+7.0.2%E5%92%8CiOS+7.1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252836.htm&amp;t=%E8%8B%B9%E6%9E%9C%E5%86%85%E9%83%A8%E5%BC%80%E5%A7%8B%E5%B9%BF%E6%B3%9B%E6%B5%8B%E8%AF%95iOS+7.0.1%EF%BC%8CiOS+7.0.2%E5%92%8CiOS+7.1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953801256/u/47/f/624776/c/34306/s/31452229/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953801256/u/47/f/624776/c/34306/s/31452229/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953801256/u/47/f/624776/c/34306/s/31452229/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:19:51+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252835.htm">
	<title>cnBeta.COM: [图+视频]冷战遗物：千万美金打造的拉斯维加斯地下避难所</title>
	<link>http://www.cnbeta.com/articles/252835.htm</link>
	<content:encoded>&lt;p&gt;在拉斯维加斯Spencer St.(斯宾塞街)3970号地下26英尺的地方，有一套独一无二的居所。&lt;strong&gt;这个建于70年代的防空洞，正好也是一个16000平方英尺(约1486㎡)的&quot;地下不动产&quot;。它有一个完整的后院、树木(塑料制品)、水池、按摩浴缸、特丽洁(AstroTurf)草皮、厨房、&quot;户外&quot;水井、小酒吧、甚至一个壁炉。&lt;/strong&gt;房地产经纪人Winston King表示，这个拥有三间卧室的居所能够&quot;自给自足&quot;，并且有一套能反映出一天时间的照明系统。&lt;br /&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31452228/sc/38/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252835.htm&amp;t=%5B%E5%9B%BE%2B%E8%A7%86%E9%A2%91%5D%E5%86%B7%E6%88%98%E9%81%97%E7%89%A9%EF%BC%9A%E5%8D%83%E4%B8%87%E7%BE%8E%E9%87%91%E6%89%93%E9%80%A0%E7%9A%84%E6%8B%89%E6%96%AF%E7%BB%B4%E5%8A%A0%E6%96%AF%E5%9C%B0%E4%B8%8B%E9%81%BF%E9%9A%BE%E6%89%80&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252835.htm&amp;t=%5B%E5%9B%BE%2B%E8%A7%86%E9%A2%91%5D%E5%86%B7%E6%88%98%E9%81%97%E7%89%A9%EF%BC%9A%E5%8D%83%E4%B8%87%E7%BE%8E%E9%87%91%E6%89%93%E9%80%A0%E7%9A%84%E6%8B%89%E6%96%AF%E7%BB%B4%E5%8A%A0%E6%96%AF%E5%9C%B0%E4%B8%8B%E9%81%BF%E9%9A%BE%E6%89%80&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252835.htm&amp;t=%5B%E5%9B%BE%2B%E8%A7%86%E9%A2%91%5D%E5%86%B7%E6%88%98%E9%81%97%E7%89%A9%EF%BC%9A%E5%8D%83%E4%B8%87%E7%BE%8E%E9%87%91%E6%89%93%E9%80%A0%E7%9A%84%E6%8B%89%E6%96%AF%E7%BB%B4%E5%8A%A0%E6%96%AF%E5%9C%B0%E4%B8%8B%E9%81%BF%E9%9A%BE%E6%89%80&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252835.htm&amp;t=%5B%E5%9B%BE%2B%E8%A7%86%E9%A2%91%5D%E5%86%B7%E6%88%98%E9%81%97%E7%89%A9%EF%BC%9A%E5%8D%83%E4%B8%87%E7%BE%8E%E9%87%91%E6%89%93%E9%80%A0%E7%9A%84%E6%8B%89%E6%96%AF%E7%BB%B4%E5%8A%A0%E6%96%AF%E5%9C%B0%E4%B8%8B%E9%81%BF%E9%9A%BE%E6%89%80&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252835.htm&amp;t=%5B%E5%9B%BE%2B%E8%A7%86%E9%A2%91%5D%E5%86%B7%E6%88%98%E9%81%97%E7%89%A9%EF%BC%9A%E5%8D%83%E4%B8%87%E7%BE%8E%E9%87%91%E6%89%93%E9%80%A0%E7%9A%84%E6%8B%89%E6%96%AF%E7%BB%B4%E5%8A%A0%E6%96%AF%E5%9C%B0%E4%B8%8B%E9%81%BF%E9%9A%BE%E6%89%80&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953801255/u/47/f/624776/c/34306/s/31452228/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953801255/u/47/f/624776/c/34306/s/31452228/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953801255/u/47/f/624776/c/34306/s/31452228/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:17:56+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252834.htm">
	<title>cnBeta.COM: 诺基亚Lumia520运行Bittersweet Shimmer固件截图曝光</title>
	<link>http://www.cnbeta.com/articles/252834.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;感谢&lt;a href=&quot;http://www.coolxap.com/&quot; target=&quot;_blank&quot;&gt;WP8论坛&lt;/a&gt;的投递&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;在搭载WP8 GDR3固件的Lumia920截图曝光之后，我们看到新的920 GDR3截图中出现了每行三列中等磁贴和电量百分比的小功能。现在lumia520运行诺基亚下一代固件版本Bittersweet Shimmer的截图也泄露了。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31452226/sc/28/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252834.htm&amp;t=%E8%AF%BA%E5%9F%BA%E4%BA%9ALumia520%E8%BF%90%E8%A1%8CBittersweet+Shimmer%E5%9B%BA%E4%BB%B6%E6%88%AA%E5%9B%BE%E6%9B%9D%E5%85%89&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252834.htm&amp;t=%E8%AF%BA%E5%9F%BA%E4%BA%9ALumia520%E8%BF%90%E8%A1%8CBittersweet+Shimmer%E5%9B%BA%E4%BB%B6%E6%88%AA%E5%9B%BE%E6%9B%9D%E5%85%89&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252834.htm&amp;t=%E8%AF%BA%E5%9F%BA%E4%BA%9ALumia520%E8%BF%90%E8%A1%8CBittersweet+Shimmer%E5%9B%BA%E4%BB%B6%E6%88%AA%E5%9B%BE%E6%9B%9D%E5%85%89&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252834.htm&amp;t=%E8%AF%BA%E5%9F%BA%E4%BA%9ALumia520%E8%BF%90%E8%A1%8CBittersweet+Shimmer%E5%9B%BA%E4%BB%B6%E6%88%AA%E5%9B%BE%E6%9B%9D%E5%85%89&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252834.htm&amp;t=%E8%AF%BA%E5%9F%BA%E4%BA%9ALumia520%E8%BF%90%E8%A1%8CBittersweet+Shimmer%E5%9B%BA%E4%BB%B6%E6%88%AA%E5%9B%BE%E6%9B%9D%E5%85%89&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953801254/u/47/f/624776/c/34306/s/31452226/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953801254/u/47/f/624776/c/34306/s/31452226/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953801254/u/47/f/624776/c/34306/s/31452226/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:16:47+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252833.htm">
	<title>cnBeta.COM: [观点]iPhone 5s拔高了智能手机创新门槛</title>
	<link>http://www.cnbeta.com/articles/252833.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;只有阳谋，才真正具有杀伤力。靠近时，你不仅不懂，还看不起，而且，无法躲避，无法抵抗。 iPhone 5s 就是这样的产品。&lt;/strong&gt;虽然媒体一片骂声但是，据不完全统计不到48小时，京东，亚马逊，联通，苏宁，等渠道预售都已经售罄，均超过10万台。预计前三天全球销售超过100万台已经是定局，这给了多数媒体分析师一记耳光。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31452223/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252833.htm&amp;t=%5B%E8%A7%82%E7%82%B9%5DiPhone+5s%E6%8B%94%E9%AB%98%E4%BA%86%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%88%9B%E6%96%B0%E9%97%A8%E6%A7%9B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252833.htm&amp;t=%5B%E8%A7%82%E7%82%B9%5DiPhone+5s%E6%8B%94%E9%AB%98%E4%BA%86%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%88%9B%E6%96%B0%E9%97%A8%E6%A7%9B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252833.htm&amp;t=%5B%E8%A7%82%E7%82%B9%5DiPhone+5s%E6%8B%94%E9%AB%98%E4%BA%86%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%88%9B%E6%96%B0%E9%97%A8%E6%A7%9B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252833.htm&amp;t=%5B%E8%A7%82%E7%82%B9%5DiPhone+5s%E6%8B%94%E9%AB%98%E4%BA%86%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%88%9B%E6%96%B0%E9%97%A8%E6%A7%9B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252833.htm&amp;t=%5B%E8%A7%82%E7%82%B9%5DiPhone+5s%E6%8B%94%E9%AB%98%E4%BA%86%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%88%9B%E6%96%B0%E9%97%A8%E6%A7%9B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953801253/u/47/f/624776/c/34306/s/31452223/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953801253/u/47/f/624776/c/34306/s/31452223/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953801253/u/47/f/624776/c/34306/s/31452223/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:15:35+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252832.htm">
	<title>cnBeta.COM: 魅族创始人黄章的江湖秘事</title>
	<link>http://www.cnbeta.com/articles/252832.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;第一次听说黄章，应该是2002年（汗，11年前也，那年黄章也才28），那时的黄章还是爱琴总经理的黄章，但很快黄章就变成了魅族的创始人黄章。&lt;/strong&gt;黄章怎么离开爱琴的，一直是个迷，当时爱琴的产品很畅销，在电脑报上广告也不小，断然不是因为经营不善离开的。黄章的辩白是新加坡老板逼着自己去接受各种采访，于是愤而离开。另一个更接近事实的版本则是，爱琴的新加坡老板看着生意不错，把没有股份纯打工的总经理黄章给踢了出去。不论哪个版本，最后都是不欢而散。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3145221e/sc/38/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252832.htm&amp;t=%E9%AD%85%E6%97%8F%E5%88%9B%E5%A7%8B%E4%BA%BA%E9%BB%84%E7%AB%A0%E7%9A%84%E6%B1%9F%E6%B9%96%E7%A7%98%E4%BA%8B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252832.htm&amp;t=%E9%AD%85%E6%97%8F%E5%88%9B%E5%A7%8B%E4%BA%BA%E9%BB%84%E7%AB%A0%E7%9A%84%E6%B1%9F%E6%B9%96%E7%A7%98%E4%BA%8B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252832.htm&amp;t=%E9%AD%85%E6%97%8F%E5%88%9B%E5%A7%8B%E4%BA%BA%E9%BB%84%E7%AB%A0%E7%9A%84%E6%B1%9F%E6%B9%96%E7%A7%98%E4%BA%8B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252832.htm&amp;t=%E9%AD%85%E6%97%8F%E5%88%9B%E5%A7%8B%E4%BA%BA%E9%BB%84%E7%AB%A0%E7%9A%84%E6%B1%9F%E6%B9%96%E7%A7%98%E4%BA%8B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252832.htm&amp;t=%E9%AD%85%E6%97%8F%E5%88%9B%E5%A7%8B%E4%BA%BA%E9%BB%84%E7%AB%A0%E7%9A%84%E6%B1%9F%E6%B9%96%E7%A7%98%E4%BA%8B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953801252/u/47/f/624776/c/34306/s/3145221e/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953801252/u/47/f/624776/c/34306/s/3145221e/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953801252/u/47/f/624776/c/34306/s/3145221e/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T01:13:56+00:00</dc:date>
</item>
<item rdf:about="http://www.cnblogs.com/skywang12345/p/3308762.html">
	<title>博客园_首页: Java 集合系列04之 fail-fast总结(通过ArrayList来说明fail-fast的原理、解决办法) - 跨到对岸去</title>
	<link>http://www.cnblogs.com/skywang12345/p/3308762.html</link>
	<content:encoded>&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt;前面，我们已经学习了ArrayList。接下来，我们以ArrayList为例，对Iterator的fail-fast机制进行了解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1 fail-fast简介&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;fail-fast 机制是java集合(Collection)中的一种错误机制。&lt;/strong&gt;当多个线程对同一个集合的内容进行操作时，就可能会产生&lt;span&gt;fail-fast&lt;/span&gt;事件。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;例如：当某一个线程A通过&lt;span&gt;iterator&lt;/span&gt;去遍历某集合的过程中，若该集合的内容被其他线程所改变了；那么线程A访问集合时，就会抛出&lt;span&gt;ConcurrentModificationException&lt;/span&gt;异常，产生&lt;span&gt;fail-fast&lt;/span&gt;事件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在详细介绍&lt;span&gt;fail-fast&lt;/span&gt;机制的原理之前，先通过一个示例来认识&lt;span&gt;fail-fast&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2 fail-fast示例&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;示例代码：(&lt;strong&gt;FastFailTest.java&lt;/strong&gt;)&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;div id=&quot;cnblogs_code_open_70b31138-8701-46bd-9025-2b8d5e715c50&quot; class=&quot;cnblogs_code_hide&quot;&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; java.util.*&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; java.util.concurrent.*&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; * @desc java集合中Fast-Fail的测试程序。&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt; *&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt; *   fast-fail事件产生的条件：当多个线程对Collection进行操作时，若其中某一个线程通过iterator去遍历集合时，该集合的内容被其他线程所改变；则会抛出ConcurrentModificationException异常。&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt; *   fast-fail解决办法：通过util.concurrent集合包下的相应类去处理，则不会产生fast-fail事件。&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt; *&lt;br /&gt;&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt; *   本例中，分别测试ArrayList和CopyOnWriteArrayList这两种情况。ArrayList会产生fast-fail事件，而CopyOnWriteArrayList不会产生fast-fail事件。&lt;br /&gt;&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt; *   (01) 使用ArrayList时，会产生fast-fail事件，抛出ConcurrentModificationException异常；定义如下：&lt;br /&gt;&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt; *            private static List&amp;lt;String&amp;gt; list = new ArrayList&amp;lt;String&amp;gt;();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt; *   (02) 使用时CopyOnWriteArrayList，不会产生fast-fail事件；定义如下：&lt;br /&gt;&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt; *            private static List&amp;lt;String&amp;gt; list = new CopyOnWriteArrayList&amp;lt;String&amp;gt;();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt; *&lt;br /&gt;&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt; * @author skywang&lt;br /&gt;&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;&lt;br /&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; FastFailTest {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;br /&gt;&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; List&amp;lt;String&amp;gt; list = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;&lt;span&gt;();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;private static List&amp;lt;String&amp;gt; list = new CopyOnWriteArrayList&amp;lt;String&amp;gt;();&lt;/span&gt;&lt;br /&gt;&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     &lt;br /&gt;&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 同时启动两个线程对list进行操作！&lt;/span&gt;&lt;br /&gt;&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ThreadOne().start();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ThreadTwo().start();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;br /&gt;&lt;span&gt;29&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; printAll() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;         System.out.println(&quot;&quot;&lt;span&gt;);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;br /&gt;&lt;span&gt;32&lt;/span&gt;         String value = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         Iterator iter =&lt;span&gt; list.iterator();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;while&lt;/span&gt;&lt;span&gt;(iter.hasNext()) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;             value =&lt;span&gt; (String)iter.next();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;             System.out.print(value+&quot;, &quot;&lt;span&gt;);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;br /&gt;&lt;span&gt;40&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;&lt;br /&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;     * 向list中依次添加0,1,2,3,4,5，每添加一个数之后，就通过printAll()遍历整个list&lt;br /&gt;&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;&lt;br /&gt;&lt;span&gt;43&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ThreadOne &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; Thread {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; i = 0&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;             &lt;span&gt;while&lt;/span&gt; (i&amp;lt;6&lt;span&gt;) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;                list.add(String.valueOf(i));&lt;br /&gt;&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;                printAll();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;                 i++&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; &lt;span&gt;            }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;br /&gt;&lt;span&gt;54&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;&lt;br /&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;     * 向list中依次添加10,11,12,13,14,15，每添加一个数之后，就通过printAll()遍历整个list&lt;br /&gt;&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;&lt;br /&gt;&lt;span&gt;57&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ThreadTwo &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; Thread {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; i = 10&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;             &lt;span&gt;while&lt;/span&gt; (i&amp;lt;16&lt;span&gt;) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; &lt;span&gt;                list.add(String.valueOf(i));&lt;br /&gt;&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; &lt;span&gt;                printAll();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;63&lt;/span&gt;                 i++&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; &lt;span&gt;            }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;65&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;66&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;67&lt;/span&gt; &lt;br /&gt;&lt;span&gt;68&lt;/span&gt; }&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;运行结果&lt;/strong&gt;：&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;  运行该代码，抛出异常java.util.ConcurrentModificationException！&lt;/strong&gt;&lt;/span&gt;即，产生fail-fast事件！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;结果说明&lt;/strong&gt;：&lt;/span&gt;&lt;br /&gt;&lt;span&gt;(01) &lt;span&gt;FastFailTest&lt;/span&gt;中通过 &lt;span&gt;new ThreadOne().start()&lt;/span&gt; 和 &lt;span&gt;new ThreadTwo().start()&lt;/span&gt; 同时启动两个线程去操作&lt;span&gt;list&lt;/span&gt;。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &lt;strong&gt;ThreadOne线程&lt;/strong&gt;：向list中依次添加0,1,2,3,4,5。每添加一个数之后，就通过printAll()遍历整个list。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &lt;strong&gt;ThreadTwo线程&lt;/strong&gt;：向list中依次添加10,11,12,13,14,15。每添加一个数之后，就通过printAll()遍历整个list。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;(02) 当某一个线程遍历list的过程中，list的内容被另外一个线程所改变了；就会抛出&lt;span&gt;ConcurrentModificationException&lt;/span&gt;异常，产生&lt;span&gt;fail-fast&lt;/span&gt;事件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3 fail-fast解决办法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;fail-fast&lt;/span&gt;机制，是一种错误检测机制。&lt;strong&gt;它只能被用来检测错误，因为JDK并不保证fail-fast机制一定会发生。&lt;/strong&gt;若在多线程环境下使用&lt;span&gt;fail-fast&lt;/span&gt;机制的集合，建议使用&amp;ldquo;&lt;span&gt;java.util.concurrent&lt;/span&gt;包下的类&amp;rdquo;去取代&amp;ldquo;&lt;span&gt;java.util&lt;/span&gt;包下的类&amp;rdquo;。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;所以，本例中只需要将&lt;span&gt;ArrayList&lt;/span&gt;替换成&lt;span&gt;java.util.concurrent&lt;/span&gt;包下对应的类即可。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;即，将代码&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; List&amp;lt;String&amp;gt; list = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;();&lt;/div&gt;&lt;p&gt;&lt;span&gt;替换为&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; List&amp;lt;String&amp;gt; list = &lt;span&gt;new&lt;/span&gt; CopyOnWriteArrayList&amp;lt;String&amp;gt;();&lt;/div&gt;&lt;p&gt;&lt;span&gt;则可以解决该办法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4 fail-fast原理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;产生&lt;span&gt;fail-fast&lt;/span&gt;事件，是通过抛出&lt;span&gt;ConcurrentModificationException&lt;/span&gt;异常来触发的。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;那么，&lt;span&gt;ArrayList是如何抛出ConcurrentModificationException异常的呢?&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们知道，&lt;span&gt;ConcurrentModificationException&lt;/span&gt;是在操作&lt;span&gt;Iterator&lt;/span&gt;时抛出的异常。我们先看看&lt;span&gt;Iterator&lt;/span&gt;的源码。&lt;span&gt;ArrayList&lt;/span&gt;的&lt;span&gt;Iterator&lt;/span&gt;是在父类&lt;span&gt;AbstractList.java&lt;/span&gt;中实现的。代码如下：&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;div id=&quot;cnblogs_code_open_9a10546c-22e0-499b-abb9-e47e2a1b0b4e&quot; class=&quot;cnblogs_code_hide&quot;&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; java.util;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; AbstractList&amp;lt;E&amp;gt; &lt;span&gt;extends&lt;/span&gt; AbstractCollection&amp;lt;E&amp;gt; &lt;span&gt;implements&lt;/span&gt; List&amp;lt;E&amp;gt;&lt;span&gt; {&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    ...&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; AbstractList中唯一的属性&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 用来记录List修改的次数：每修改一次(添加/删除等操作)，将modCount+1&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;transient&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; modCount = 0&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;br /&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 返回List对应迭代器。实际上，是返回Itr对象。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; Iterator&amp;lt;E&amp;gt;&lt;span&gt; iterator() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Itr();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;br /&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Itr是Iterator(迭代器)的实现类&lt;/span&gt;&lt;br /&gt;&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Itr &lt;span&gt;implements&lt;/span&gt; Iterator&amp;lt;E&amp;gt;&lt;span&gt; {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; cursor = 0&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;br /&gt;&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; lastRet = -1&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;br /&gt;&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 修改数的记录值。&lt;br /&gt;&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 每次新建Itr()对象时，都会保存新建该对象时对应的modCount；&lt;br /&gt;&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 以后每次遍历List中的元素的时候，都会比较expectedModCount和modCount是否相等；&lt;br /&gt;&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 若不相等，则抛出ConcurrentModificationException异常，产生fail-fast事件。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; expectedModCount =&lt;span&gt; modCount;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;br /&gt;&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; hasNext() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; cursor !=&lt;span&gt; size();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;br /&gt;&lt;span&gt;32&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt;&lt;span&gt; E next() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 获取下一个元素之前，都会判断&amp;ldquo;新建Itr对象时保存的modCount&amp;rdquo;和&amp;ldquo;当前的modCount&amp;rdquo;是否相等；&lt;br /&gt;&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 若不相等，则抛出ConcurrentModificationException异常，产生fail-fast事件。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;            checkForComodification();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;             &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;                 E next =&lt;span&gt; get(cursor);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;                 lastRet = cursor++&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt;&lt;span&gt; next;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;             } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IndexOutOfBoundsException e) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;                checkForComodification();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;                 &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; NoSuchElementException();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;            }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;br /&gt;&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; remove() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (lastRet == -1&lt;span&gt;)&lt;br /&gt;&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;                 &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; IllegalStateException();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; &lt;span&gt;            checkForComodification();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; &lt;br /&gt;&lt;span&gt;51&lt;/span&gt;             &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;52&lt;/span&gt;                 AbstractList.&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.remove(lastRet);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;53&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (lastRet &amp;lt;&lt;span&gt; cursor)&lt;br /&gt;&lt;/span&gt;&lt;span&gt;54&lt;/span&gt;                     cursor--&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;                 lastRet = -1&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;                 expectedModCount =&lt;span&gt; modCount;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;             } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IndexOutOfBoundsException e) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;                 &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ConcurrentModificationException();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; &lt;span&gt;            }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; &lt;br /&gt;&lt;span&gt;62&lt;/span&gt;         &lt;span&gt;final&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; checkForComodification() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;63&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (modCount !=&lt;span&gt; expectedModCount)&lt;br /&gt;&lt;/span&gt;&lt;span&gt;64&lt;/span&gt;                 &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ConcurrentModificationException();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;65&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;66&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;67&lt;/span&gt; &lt;br /&gt;&lt;span&gt;68&lt;/span&gt; &lt;span&gt;    ...&lt;br /&gt;&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; }&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;span&gt;从中，我们可以发现在调用&lt;span&gt; next()&lt;/span&gt; 和 &lt;span&gt;remove()&lt;/span&gt;时，都会执行 &lt;span&gt;checkForComodification()&lt;/span&gt;。若 &amp;ldquo;&lt;strong&gt;modCount 不等于 expectedModCount&lt;/strong&gt;&amp;rdquo;，则抛出&lt;span&gt;ConcurrentModificationException&lt;/span&gt;异常，产生&lt;span&gt;fail-fast&lt;/span&gt;事件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;要搞明白 &lt;span&gt;fail-fast&lt;/span&gt;机制，我们就要需要理解&lt;/span&gt;&lt;span&gt;什么时候&amp;ldquo;modCount 不等于 expectedModCount&amp;rdquo;！&lt;/span&gt;&lt;br /&gt;&lt;span&gt;从Itr类中，我们知道 &lt;span&gt;expectedModCount&lt;/span&gt; 在创建Itr对象时，被赋值为 &lt;span&gt;modCount&lt;/span&gt;。通过Itr，我们知道：&lt;span&gt;expectedModCount&lt;/span&gt;不可能被修改为不等于 &lt;span&gt;modCount&lt;/span&gt;。所以，需要考证的就是&lt;span&gt;modCount&lt;/span&gt;何时会被修改。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;接下来，我们查看&lt;span&gt;ArrayList&lt;/span&gt;的源码，来&lt;span&gt;看看modCount是如何被修改的&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;div id=&quot;cnblogs_code_open_546dbb8d-a9a2-4840-8d9e-cf2eb850f06a&quot; class=&quot;cnblogs_code_hide&quot;&gt;&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; java.util;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; &lt;br /&gt;&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ArrayList&amp;lt;E&amp;gt; &lt;span&gt;extends&lt;/span&gt; AbstractList&amp;lt;E&amp;gt;&lt;br /&gt;&lt;span&gt;  4&lt;/span&gt;         &lt;span&gt;implements&lt;/span&gt; List&amp;lt;E&amp;gt;&lt;span&gt;, RandomAccess, Cloneable, java.io.Serializable&lt;br /&gt;&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;{&lt;br /&gt;&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;br /&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;    ...&lt;br /&gt;&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; &lt;br /&gt;&lt;span&gt;  9&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; list中容量变化时，对应的同步函数&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 10&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; ensureCapacity(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; minCapacity) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt;         modCount++&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; oldCapacity =&lt;span&gt; elementData.length;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (minCapacity &amp;gt;&lt;span&gt; oldCapacity) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt;             Object oldData[] =&lt;span&gt; elementData;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; newCapacity = (oldCapacity * 3)/2 + 1&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (newCapacity &amp;lt;&lt;span&gt; minCapacity)&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt;                 newCapacity =&lt;span&gt; minCapacity;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; minCapacity is usually close to size, so this is a win:&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 19&lt;/span&gt;             elementData =&lt;span&gt; Arrays.copyOf(elementData, newCapacity);&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 23&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 24&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加元素到队列最后&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 25&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; add(E e) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 修改modCount&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 27&lt;/span&gt;         ensureCapacity(size + 1);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Increments modCount!!&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 28&lt;/span&gt;         elementData[size++] =&lt;span&gt; e;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 32&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 33&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加元素到指定的位置&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 34&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; add(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; index, E element) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (index &amp;gt; size || index &amp;lt; 0&lt;span&gt;)&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;             &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; IndexOutOfBoundsException(&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;             &quot;Index: &quot;+index+&quot;, Size: &quot;+&lt;span&gt;size);&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 39&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 修改modCount&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 40&lt;/span&gt;         ensureCapacity(size+1);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Increments modCount!!&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 41&lt;/span&gt;         System.arraycopy(elementData, index, elementData, index + 1&lt;span&gt;,&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt;              size -&lt;span&gt; index);&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt;         elementData[index] =&lt;span&gt; element;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt;         size++&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 47&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加集合&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 48&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; addAll(Collection&amp;lt;? &lt;span&gt;extends&lt;/span&gt; E&amp;gt;&lt;span&gt; c) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt;         Object[] a =&lt;span&gt; c.toArray();&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; numNew =&lt;span&gt; a.length;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 修改modCount&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 52&lt;/span&gt;         ensureCapacity(size + numNew);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Increments modCount&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 53&lt;/span&gt;         System.arraycopy(a, 0&lt;span&gt;, elementData, size, numNew);&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt;         size +=&lt;span&gt; numNew;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; numNew != 0&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt;    &lt;br /&gt;&lt;span&gt; 58&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 59&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 删除指定位置的元素 &lt;/span&gt;&lt;br /&gt;&lt;span&gt; 60&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; E remove(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; index) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt; &lt;span&gt;        RangeCheck(index);&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 63&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 修改modCount&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 64&lt;/span&gt;         modCount++&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt;         E oldValue =&lt;span&gt; (E) elementData[index];&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 67&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; numMoved = size - index - 1&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (numMoved &amp;gt; 0&lt;span&gt;)&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt;             System.arraycopy(elementData, index+1&lt;span&gt;, elementData, index, numMoved);&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;         elementData[--size] = &lt;span&gt;null&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Let gc do its work&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 71&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 72&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; oldValue;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 75&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 76&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 快速删除指定位置的元素 &lt;/span&gt;&lt;br /&gt;&lt;span&gt; 77&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; fastRemove(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; index) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 79&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 修改modCount&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 80&lt;/span&gt;         modCount++&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; numMoved = size - index - 1&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (numMoved &amp;gt; 0&lt;span&gt;)&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt;             System.arraycopy(elementData, index+1&lt;span&gt;, elementData, index,&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;                             numMoved);&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt;         elementData[--size] = &lt;span&gt;null&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Let gc do its work&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 86&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 88&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 清空集合&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 89&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; clear() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 修改modCount&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 91&lt;/span&gt;         modCount++&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 93&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Let gc do its work&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 94&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = 0; i &amp;lt; size; i++&lt;span&gt;)&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt;             elementData[i] = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 97&lt;/span&gt;         size = 0&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt; &lt;br /&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;    ...&lt;br /&gt;&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; }&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;span&gt;从中，我们发现：无论是&lt;span&gt;add()&lt;/span&gt;、&lt;span&gt;remove()&lt;/span&gt;，还是&lt;span&gt;clear()&lt;/span&gt;，只要涉及到修改集合中的元素个数时，都会改变&lt;span&gt;modCount&lt;/span&gt;的值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;接下来，我们再系统的梳理一下fail-fast是怎么产生的。步骤如下：&lt;/span&gt;&lt;br /&gt;&lt;span&gt;(01) &lt;em&gt;新建了一个ArrayList，名称为arrayList。&lt;/em&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;(02) &lt;em&gt;向arrayList中添加内容。&lt;/em&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;(03)&lt;em&gt; 新建一个&amp;ldquo;&lt;strong&gt;线程a&lt;/strong&gt;&amp;rdquo;，并在&amp;ldquo;线程a&amp;rdquo;中&lt;strong&gt;通过Iterator反复的读取arrayList的值&lt;/strong&gt;。&lt;/em&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;(04) &lt;em&gt;新建一个&amp;ldquo;&lt;strong&gt;线程b&lt;/strong&gt;&amp;rdquo;，在&amp;ldquo;线程b&amp;rdquo;中&lt;strong&gt;删除arrayList中的一个&amp;ldquo;节点A&lt;/strong&gt;&amp;rdquo;。&lt;/em&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;(05) 这时，就会产生有趣的事件了。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;在某一时刻，&amp;ldquo;线程a&amp;rdquo;创建了arrayList的Iterator。此时&amp;ldquo;节点A&amp;rdquo;仍然存在于arrayList中，&lt;strong&gt;创建arrayList时，expectedModCount = modCount&lt;/strong&gt;(假设它们此时的值为N)。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;在&amp;ldquo;线程a&amp;rdquo;在遍历arrayList过程中的某一时刻，&amp;ldquo;线程b&amp;rdquo;执行了，并且&amp;ldquo;线程b&amp;rdquo;删除了arrayList中的&amp;ldquo;节点A&amp;rdquo;。&amp;ldquo;线程b&amp;rdquo;执行remove()进行删除操作时，在remove()中执行了&amp;ldquo;modCount++&amp;rdquo;，此时&lt;strong&gt;modCount变成了N+1&lt;/strong&gt;！&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;ldquo;线程a&amp;rdquo;接着遍历，当它执行到next()函数时，调用checkForComodification()比较&amp;ldquo;expectedModCount&amp;rdquo;和&amp;ldquo;modCount&amp;rdquo;的大小；而&amp;ldquo;expectedModCount=N&amp;rdquo;，&amp;ldquo;modCount=N+1&amp;rdquo;,这样，便抛出ConcurrentModificationException异常，产生fail-fast事件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;至此，&lt;strong&gt;我们就完全了解了fail-fast是如何产生的！&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;即，当多个线程对同一个集合进行操作的时候，某线程访问集合的过程中，该集合的内容被其他线程所改变(即其它线程通过add、remove、clear等方法，改变了modCount的值)；这时，就会抛出ConcurrentModificationException异常，产生fail-fast事件。&lt;/span&gt;&lt;br /&gt;  &lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;5 解决fail-fast的原理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上面，说明了&amp;ldquo;解决fail-fast机制的办法&amp;rdquo;，也知道了&amp;ldquo;fail-fast产生的根本原因&amp;rdquo;。接下来，我们再进一步谈谈&lt;span&gt;java.util.concurrent包中是如何解决fail-fast事件的&lt;/span&gt;。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;还是以和ArrayList对应的&lt;span&gt;CopyOnWriteArrayList&lt;/span&gt;进行说明。我们先看看&lt;span&gt;CopyOnWriteArrayList&lt;/span&gt;的源码：&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;div id=&quot;cnblogs_code_open_68a1c016-5e58-4ca5-9044-1bb159877d89&quot; class=&quot;cnblogs_code_hide&quot;&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; java.util.concurrent;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; java.util.*&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; java.util.concurrent.locks.*&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; sun.misc.Unsafe;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; CopyOnWriteArrayList&amp;lt;E&amp;gt;&lt;br /&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;implements&lt;/span&gt; List&amp;lt;E&amp;gt;&lt;span&gt;, RandomAccess, Cloneable, java.io.Serializable {&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    ...&lt;br /&gt;&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;br /&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 返回集合对应的迭代器&lt;/span&gt;&lt;br /&gt;&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; Iterator&amp;lt;E&amp;gt;&lt;span&gt; iterator() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; COWIterator&amp;lt;E&amp;gt;(getArray(), 0&lt;span&gt;);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;br /&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    ...&lt;br /&gt;&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;    &lt;br /&gt;&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; COWIterator&amp;lt;E&amp;gt; &lt;span&gt;implements&lt;/span&gt; ListIterator&amp;lt;E&amp;gt;&lt;span&gt; {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; Object[] snapshot;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;br /&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; cursor;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;br /&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; COWIterator(Object[] elements, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; initialCursor) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;             cursor =&lt;span&gt; initialCursor;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 新建COWIterator时，将集合中的元素保存到一个新的拷贝数组中。&lt;br /&gt;&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 这样，当原始集合的数据改变，拷贝数据中的值也不会变化。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;27&lt;/span&gt;             snapshot =&lt;span&gt; elements;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;br /&gt;&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; hasNext() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; cursor &amp;lt;&lt;span&gt; snapshot.length;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;br /&gt;&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; hasPrevious() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; cursor &amp;gt; 0&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;br /&gt;&lt;span&gt;38&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt;&lt;span&gt; E next() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (!&lt;span&gt; hasNext())&lt;br /&gt;&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;                 &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; NoSuchElementException();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; (E) snapshot[cursor++&lt;span&gt;];&lt;br /&gt;&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;br /&gt;&lt;span&gt;44&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt;&lt;span&gt; E previous() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (!&lt;span&gt; hasPrevious())&lt;br /&gt;&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;                 &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; NoSuchElementException();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; (E) snapshot[--&lt;span&gt;cursor];&lt;br /&gt;&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; &lt;br /&gt;&lt;span&gt;50&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; nextIndex() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;51&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; cursor;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;br /&gt;&lt;span&gt;54&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; previousIndex() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; cursor-1&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; &lt;br /&gt;&lt;span&gt;58&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; remove() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;             &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; UnsupportedOperationException();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; &lt;br /&gt;&lt;span&gt;62&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; set(E e) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;63&lt;/span&gt;             &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; UnsupportedOperationException();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;65&lt;/span&gt; &lt;br /&gt;&lt;span&gt;66&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; add(E e) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;67&lt;/span&gt;             &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; UnsupportedOperationException();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;68&lt;/span&gt; &lt;span&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;70&lt;/span&gt;   &lt;br /&gt;&lt;span&gt;71&lt;/span&gt; &lt;span&gt;    ...&lt;br /&gt;&lt;/span&gt;&lt;span&gt;72&lt;/span&gt; &lt;br /&gt;&lt;span&gt;73&lt;/span&gt; }&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;span&gt;从中，我们可以看出:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;(01) 和&lt;span&gt;ArrayList&lt;/span&gt;继承于&lt;span&gt;AbstractList&lt;/span&gt;不同，&lt;span&gt;CopyOnWriteArrayList&lt;/span&gt;没有继承于&lt;span&gt;AbstractList&lt;/span&gt;，它仅仅只是实现了&lt;span&gt;List&lt;/span&gt;接口。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;(02) &lt;span&gt;ArrayList&lt;/span&gt;的&lt;span&gt;iterator()&lt;/span&gt;函数返回的&lt;span&gt;Iterator&lt;/span&gt;是在&lt;span&gt;AbstractList&lt;/span&gt;中实现的；而&lt;span&gt;CopyOnWriteArrayList&lt;/span&gt;是自己实现&lt;span&gt;Iterator&lt;/span&gt;。&lt;/span&gt;&lt;br /&gt;&lt;span&gt;(03) &lt;span&gt;ArrayList&lt;/span&gt;的&lt;span&gt;Iterator&lt;/span&gt;实现类中调用&lt;span&gt;next()&lt;/span&gt;时，会&amp;ldquo;调用checkForComodification()比较&amp;lsquo;expectedModCount&amp;rsquo;和&amp;lsquo;modCount&amp;rsquo;的大小&amp;rdquo;；但是，&lt;span&gt;CopyOnWriteArrayList&lt;/span&gt;的Iterator实现类中，没有所谓的checkForComodification()，更不会抛出ConcurrentModificationException异常！&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;更多内容&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a class=&quot;titlelink&quot; href=&quot;http://www.cnblogs.com/skywang12345/p/3323085.html&quot;&gt;&lt;span&gt;Java 集合系列目录&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a class=&quot;titlelink&quot; href=&quot;http://www.cnblogs.com/skywang12345/p/3308498.html&quot;&gt;&lt;span&gt;Java 集合系列01之 总体框架&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a class=&quot;titlelink&quot; href=&quot;http://www.cnblogs.com/skywang12345/p/3308556.html&quot;&gt;&lt;span&gt;Java 集合系列03之 ArrayList详细介绍(源码解析)和使用示例&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a class=&quot;titlelink&quot; href=&quot;http://www.cnblogs.com/skywang12345/p/3308900.html&quot;&gt;&lt;span&gt;Java 集合系列08之 List总结(LinkedList, ArrayList等使用场景和性能分析)&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a class=&quot;titlelink&quot; href=&quot;http://www.cnblogs.com/skywang12345/p/3311275.html&quot;&gt;&lt;span&gt;Java 集合系列18之 Iterator和Enumeration比较&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3308762&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/skywang12345/p/3308762.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/skywang12345/p/3308762.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-16T01:12:00+00:00</dc:date>
	<dc:creator>跨到对岸去</dc:creator>
</item>
<item rdf:about="http://www.ifanr.com/?p=347626&amp;utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=">
	<title>爱范儿＊Beats of Bits: 华数彩虹 BOX 体验：可圈可点的盒子，电视电商的野心</title>
	<link>http://www.ifanr.com/347626?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=</link>
	<content:encoded>&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347632&quot; rel=&quot;attachment wp-att-347632&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347632&quot; alt=&quot;IMG_9303-2-9&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/IMG_9303-2-9.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9 月 9 日，阿里巴巴联手华数传媒发布第一代搭载阿里云OS 操作系统的盒子产品“彩虹 BOX”，除了涵盖了市面上的互联网电视的点播、游戏和应用等功能，彩虹 BOX 还主打“电视购物”功能（通过“聚划算”的应用实现），在电视上完成了产品支付环节。现在，我们就根据拿到的彩虹 BOX 进行简单的上手体验。&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;more-347626&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;外观&lt;/h3&gt;
&lt;p&gt;彩虹 BOX 盒子外壳采用的是塑料材质，顶部与底面经过明显的磨砂处理，四周非常光滑。盒子刚好能握于手掌之中，比 Apple TV 稍大，但是重量却比 Apple TV 轻质不少，并不感觉沉重。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347634&quot; rel=&quot;attachment wp-att-347634&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347634&quot; alt=&quot;IMG_9299-2-8&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/IMG_9299-2-8.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;盒子背部有 AV 接口、以太网接口、HDMI 接口以及电源接口。遥控器也是同样材质，按键较多，除了一般盒子遥控器的电源键、Home 键、菜单键、方向键、返回键之外，还有快进/退，音量加减两排按钮，设计上比较繁复。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347642&quot; rel=&quot;attachment wp-att-347642&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347642&quot; alt=&quot;IMG_9289-3-7&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/IMG_9289-3-7.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（上为 Apple TV，下为华数彩虹 BOX）&lt;/p&gt;
&lt;h3&gt;使用体验&lt;/h3&gt;
&lt;p&gt;设置/接入：彩虹 BOX 的设置方式如其他的电视盒子无异，使用 HDMI 线连接盒子和电视机，插上电源即可。首次连接时，需要搜索并输入 Wi-Fi 密码。红外遥控器的反应与一般的电视遥控器类似，会略有延迟。除了遥控器之外，可以通过下载阿里云 TV 助手（目前只有 Android 版本），用智能手机控制电视。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347636&quot; rel=&quot;attachment wp-att-347636&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347636&quot; alt=&quot;IMG_9270-3-1&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/IMG_9270-3-1.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UI 界面如图所示，画面简洁，配色和谐自然，传统的电视机顶盒简陋的 UI 对比漂亮许多，左边竖行是不同的类别内容的放置：推荐内容、点播，电视回访、应用、搜索、通知和设置。&lt;/p&gt;
&lt;p&gt;主界面是用大小不同的方形组合的矩阵，打开主界面时，首屏推荐的电影内容会自动轮换播放，例如图片中所示的《乔布斯》预告片。主界面的矩阵组合当中除了影视类内容，还有比较抢眼的是首屏的“聚划算”应用模块，后面还有连接支付宝使用的“水电煤”缴费应用。屏幕右上角显示的是当前的日期、时间和 Wi-Fi 连接情况。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;内容&lt;/strong&gt;：彩虹 BOX 的主要内容提供方是华数传媒和 PopCap 等，视频资源也比较丰富。点击影视内容即可看到简单的介绍页面，用户可对内容进行“收藏”管理。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347638&quot; rel=&quot;attachment wp-att-347638&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347638&quot; alt=&quot;IMG_9277-2-3&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/IMG_9277-2-3.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;电影方面，华数与索尼、华纳、环球等电影公司合作设置电影专区，今年早写时候上映的电影能找到不少，例如《星际迷航》、《被解救的姜戈》、《盲探》等。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347654&quot; rel=&quot;attachment wp-att-347654&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347654&quot; alt=&quot;IMG_9346-2-7&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/IMG_9346-2-7.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;电视剧方面，以国内为主、部分的热门台湾剧以及 KBS 的韩剧的资源也有所涉及（至于我最关心的美剧和英剧，则不见影踪）。至于视频资源，无论是资讯、综艺还是体育类，较多是从各大电视台的日常节目中截取（但对于垂直类节目有较高要求的足球篮球铁杆球粉丝们，节目的数量和齐全度恐怕不一定能满足需求）。另外，关于电视内容的回放，电视台只覆盖了各省的卫视以及央视等频道，覆盖面有限（我经常收看的香港无线电视台，凤凰卫视等也没有在列）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347656&quot; rel=&quot;attachment wp-att-347656&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347656&quot; alt=&quot;IMG_9355-2-8&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/IMG_9355-2-8.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而无论是电视剧、电影还是视频资源，彩虹 BOX 都能够在首页和影视分类的页面中进行搜索，支持 T9、拼音和笔画三种输入方式，与小米盒子的搜索方式和输入方式一致。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347658&quot; rel=&quot;attachment wp-att-347658&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347658&quot; alt=&quot;IMG_9363-3-9&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/IMG_9363-3-9.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;流畅度：&lt;/strong&gt;彩虹 BOX 的视频加载反应较快，在 10M 的宽带情况下，高清视频从下载到播放时间约为 5 秒，快进后加载播放时间约为 5 秒。同样网络情况下，直接在视频提供商播放视频加在的时间约为 4 秒。视频播放之后基本无卡顿现象，视频观看体验流畅，没有长久等待的不适感。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;无线控制&lt;/strong&gt;：阿里盒子的使用过程中，除了设置 Wi-Fi 密码之外，还有后续的“支付”、“搜索”等功能对输入的要求较高。这些操作如果只通过遥控器进行，将会非常让人痛苦（例如我的不少密码都是 16 位以上，纯粹用遥控器点击电视界面的键盘进行操作输入完成，需要 2-3 分钟）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347650&quot; rel=&quot;attachment wp-att-347650&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347650&quot; alt=&quot;screenshot&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/screenshot.jpg&quot; width=&quot;600&quot; height=&quot;533&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而“阿里 TV 助手”则是彩虹 BOX 给出的无线控制解决方案。比较实用的两点，一是可以通过“触控”手机屏幕来控制电视屏，而是无线输入，让整体操作顺畅了很多。毕竟&lt;/p&gt;
&lt;p&gt;另外，跟小米盒子的“米联”功能类似，彩虹 BOX 也有无线投射功能。我们用了一台小米 2 进行测试。在同一 Wi-Fi 情况下，图片投射的时间约为 3 秒，切换图片延时较久，在 20-30 秒不等，而且多次切换图片后投射的功能容易失效。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347640&quot; rel=&quot;attachment wp-att-347640&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347640&quot; alt=&quot;IMG_9284-3-6&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/IMG_9284-3-6.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;音乐/视频方面，一段 5 分钟的 MP3 音乐文件加载时间在 8 秒左右。快进/快退延时也在 10 秒以上。一段 30 秒的 1080p 视频加载的时间是 20 秒左右。无线投射的反应较为迟缓，失效的情况在体验途中也发生了好几次。&lt;/p&gt;
&lt;h3&gt;电视电商的尝试：便捷的支付，适合冲动型消费&lt;/h3&gt;
&lt;p&gt;彩虹 BOX 就界面到资源的丰富程度，基本能够满足一家人日常收看需要：操作尚算简单，视频资源（电视+电影）数量丰富。&lt;/p&gt;
&lt;p&gt;但其实彩虹BOX 的野心绝对不停留在做互联网电视的体验，而在“电视电商”。我们从“聚划算”应用开始讲起。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347660&quot; rel=&quot;attachment wp-att-347660&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347660&quot; alt=&quot;IMG_9334-2-1&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/IMG_9334-2-1.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个盒子整合阿里巴巴支付宝的就是 2 个应用：聚划算和水电煤。聚划算算是网站折扣内容精选于电视屏幕上，用户只需要点击遥控器，登陆淘宝的个人账号，即可通过支付宝的进行购买和支付。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347662&quot; rel=&quot;attachment wp-att-347662&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347662&quot; alt=&quot;IMG_9336-2-2&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/IMG_9336-2-2.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;只需要点击遥控上的 OK 键，就会弹框要求登陆淘宝账号，登陆之后，用户会看到商品的详细信息，选择好地址之后，淘宝账号绑定的手机就会收到一条购物的确认短信（内附验证码），回复验证码，用户之前绑定的“快捷支付”的借记卡就会自动扣费。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ifanr.com/?attachment_id=347666&quot; rel=&quot;attachment wp-att-347666&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-347666&quot; alt=&quot;IMG_9340-2-4&quot; src=&quot;http://cdn.ifanr.cn/wp-content/uploads/2013/09/IMG_9340-2-4.jpg&quot; width=&quot;600&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;也就是说，使用彩虹 BOX 的“聚划算”只通过电视和手机便完成了整个购物过程的闭环（甚至不需要繁复地输入支付宝密码），的确非常快捷方便。整个购物过程不到 2 分钟，对于“聚划算”这种以折扣大量优惠为主推内容应用，如此便捷的扣费方式，对这种冲动型消费十分有利。&lt;/p&gt;
&lt;p&gt;整体而言，华数与阿里巴巴合作的推出的彩虹 BOX 盒子从实用性而言没有硬伤，内容也能满足家庭基本的观看需求。而“电视电商”则让人有很大的想象空间。尽管我们现在看到的也还只是一个“聚划算”和“水电煤”等支付的尝试，若一旦与支付宝更深度整合，为电视的内容、应用甚至是商品付费的整个生态圈子才算是打通了任督二脉。&lt;/p&gt;
    &lt;div id=&quot;ifanr_profile&quot;&gt;
        &lt;div&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://www.ifanr.com/author/cuiqiwen&quot;&gt;&lt;img class=&quot;gravatar&quot; src=&quot;http://www.gravatar.com/avatar/681b3fa5535cda4846df43b42c2888c7.png&quot; width=&quot;50&quot; height=&quot;50&quot; /&gt;&lt;/a&gt;
            &lt;div&gt;
                &lt;div&gt;
                    &lt;div&gt;&lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.ifanr.com/author/cuiqiwen&quot;&gt;崔绮雯&lt;/a&gt;&lt;/strong&gt;&lt;/div&gt;
                    &lt;div&gt;保持对世界的好奇心&lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;div&gt;
                                                                            &lt;a target=&quot;_blank&quot; href=&quot;mailto:amanda@ifanr.com&quot;&gt;邮箱&lt;/a&gt;

                            
                                                                            &lt;a target=&quot;_blank&quot; href=&quot;http://weibo.com/cbbb&quot;&gt;新浪微博&lt;/a&gt;

                            
                            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;p&gt;#欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。&lt;/p&gt;&lt;img src=&quot;http://ifanr.feedsportal.com/c/33866/f/642084/s/347626/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/144540365956/u/362/f/642084/c/33866/s/347626/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/144540365956/u/362/f/642084/c/33866/s/347626/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/144540365956/u/362/f/642084/c/33866/s/347626/a2t.img&quot; border=&quot;0&quot; /&gt;&lt;p&gt;
&lt;a href=&quot;http://www.ifanr.com&quot;&gt;爱范儿 · Beats of Bits&lt;/a&gt; |
&lt;a href=&quot;http://www.ifanr.com/347626&quot;&gt;原文链接&lt;/a&gt; ·
&lt;a href=&quot;http://www.ifanr.com/347626#comments&quot;&gt;查看评论&lt;/a&gt; ·
&lt;a href=&quot;http://www.weibo.com/ifanr&quot;&gt;新浪微博&lt;/a&gt; ·
&lt;a href=&quot;http://www.ifanr.com/weixin&quot;&gt;微信订阅&lt;/a&gt; ·
&lt;a href=&quot;http://bbs.ifanr.com/&quot;&gt;加入爱范社区！&lt;/a&gt; 
&lt;/p&gt;

&lt;br /&gt;
&lt;div&gt;
&lt;/div&gt;</content:encoded>
	<dc:date>2013-09-16T01:00:50+00:00</dc:date>
</item>
<item rdf:about="http://www.cnblogs.com/artech/p/attribute-routing-01.html">
	<title>博客园_首页: ASP.NET Web API 2.0新特性：Attribute Routing[上篇] - Artech</title>
	<link>http://www.cnblogs.com/artech/p/attribute-routing-01.html</link>
	<content:encoded>&lt;p&gt;对于一个针对ASP.NET Web API的调用请求来说，请求的URL和对应的HTTP方法的组合最终决定了目标HttpController的类型和定义其中的目标Action方法。两者之间的映射是通过URL路由来完成的，ASP.NET Web API路由系统提供了一种便捷的方式使我们可以在统一的地方注册适用于所有HttpController的路由。&lt;/p&gt;  &lt;p&gt;如果我们能够直接针对目标Action方法进行路由注册，那么我们就能够对路由规则进行细粒度的控制。从设计角度来讲，Web API采用REST架构风格，其URL更多是对目标资源的反映，定义在同一个HttpController中的众多Action方法体现在对一组相关资源的操作。目标资源往往具有一定地层次结构，RESTful的URL应该尽可能地反映这种层次目标资源的这种层次结构，能否针对具体的Action方法进行路由映射往往决定了我们能否设计出真正具有REST风格的URL。为此，ASP.NET Web API 2.0对现有路由系统进行了扩展，提供了一种基于特性的路由是我们可以直接将路由直接注册到具体的Action方法上。[本文已经同步到《&lt;a href=&quot;http://www.cnblogs.com/artech/p/how-asp-net-web-api-works.html&quot;&gt;How ASP.NET Web API Works?&lt;/a&gt;》]&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;目录&lt;/p&gt;    &lt;p&gt;&lt;font color=&quot;#ff0000&quot;&gt;HttpRouteInfoProvider特性        &lt;br /&gt;开启针对特性的路由         &lt;br /&gt;基本路由注册         &lt;br /&gt;让URL模板能够尽可能反映资源的层次结构&lt;/font&gt;       &lt;br /&gt;为路由变量设置约束       &lt;br /&gt;通配符路由变量       &lt;br /&gt;缺省路由变量       &lt;br /&gt;设置URL前缀       &lt;br /&gt;指定路由名称       &lt;br /&gt;生成HttpRoute在路由表中的顺序&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;strong&gt;HttpRouteInfoProvider特性&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;我们将应用到目标Action方法上直接进行路由注册的特性称为HttpRouteInfoProvider特性，因为它实现了System.Web.Http.Routing.IHttpRouteInfoProvider接口。我们在上面已经提到过了，这种基于特性的路由注册方式仅仅是对ASP.NET Web API现有路由系统的扩展，应用到目标方法上用于路由注册的特性最终会被转换成相应的HttpRoute对象。顾名思义，HttpRouteInfoProvider特性旨在提供最终创建这个HttpRoute对象的相关信息。&lt;/p&gt;  &lt;p&gt;HttpRouteInfoProvider提供的路由信息集中体现在IHttpRouteInfoProvider接口的几个属性。如下面的代码片断所示，IHttpRouteInfoProvider定义了 三个只读属性，其核心自然是通过属性RouteTemplate表示的URL模板。它的属性RouteName表示最终创建的HttpRoute对象的名称，另一个属性RouteOrder则决定了该HttpRoute对象在路由表中的位置，这个位置最终决定了其被选择的优先级。&lt;/p&gt;  &lt;div id=&quot;codeSnippetWrapper&quot;&gt;   &lt;div id=&quot;codeSnippet&quot;&gt;     &lt;span id=&quot;lnum1&quot;&gt;   1:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt; IHttpRouteInfoProvider&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum2&quot;&gt;   2:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum3&quot;&gt;   3:&lt;/span&gt;     &lt;span&gt;string&lt;/span&gt;     RouteName { get; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum4&quot;&gt;   4:&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;        RouteOrder { get; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum5&quot;&gt;   5:&lt;/span&gt;     &lt;span&gt;string&lt;/span&gt;     RouteTemplate { get; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum6&quot;&gt;   6:&lt;/span&gt; }&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;读者朋友们可能对IHttpRouteInfoProvider接口不太熟悉，但是对实现它的两个特性应该已经很熟悉了，它们分别是AcceptVerbsAttribute和HttpVerbAttribute。在前面介绍“Action的选择”中我们将这两个特性视为用于选择目标Action方法所支持的HTTP方法的ActionHttpMethodProvider特性来介绍的，其实它们除了实现IActionHttpMethodProvider接口之外，还实现了接口IHttpRouteInfoProvider。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;AcceptVerbsAttribute&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;如下所示的AcceptVerbsAttribute的完整定义，当我们将它应用到目标Action方法上的时候，除了以构造函数参数的形式指定所支持的HTTP方法列表（以字符串的形式）之外，还可以指定RouteName、RouteOrder和RouteTemplate属性值以注册一个针对目标方法的路由。&lt;/p&gt;&lt;div id=&quot;codeSnippetWrapper&quot;&gt;  &lt;div id=&quot;codeSnippet&quot;&gt;    &lt;span id=&quot;lnum1&quot;&gt;   1:&lt;/span&gt; [AttributeUsage(AttributeTargets.Method, AllowMultiple=&lt;span&gt;true&lt;/span&gt;, Inherited=&lt;span&gt;true&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum2&quot;&gt;   2:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; AcceptVerbsAttribute : Attribute, IActionHttpMethodProvider, IHttpRouteInfoProvider&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum3&quot;&gt;   3:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum4&quot;&gt;   4:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; AcceptVerbsAttribute(&lt;span&gt;params&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;[] methods); &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum5&quot;&gt;   5:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum6&quot;&gt;   6:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; Collection&amp;lt;HttpMethod&amp;gt;      HttpMethods { get; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum7&quot;&gt;   7:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;                      RouteName { get; set; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum8&quot;&gt;   8:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;                         RouteOrder { get; set; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum9&quot;&gt;   9:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;                      RouteTemplate { get; set; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum10&quot;&gt;  10:&lt;/span&gt; }&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;对于如上所示的AcceptVerbsAttribute的定义，有一个细节我们只得注意：应用在该类型的AttributeUsageAttribute特性将AllowMultiple属性设置为True，意味着&lt;span&gt;多个AcceptVerbsAttribute特性可以同时应用到同一个Action方法上&lt;/span&gt;。对于路由映射来说就意味着我们可以为同一个Action方法注册多个路由，这使我们可以采用不同的URL来访问同一个Action方法。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;HttpVerbAttribute&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;AcceptVerbsAttribute和&lt;a name=&quot;OLE_LINK2&quot;&gt;&lt;/a&gt;&lt;a name=&quot;OLE_LINK1&quot;&gt;&lt;/a&gt;HttpVerbAttribute的不同之处在于前者可以通过字符串的形式指定多个支持的HTTP方法，而后者仅仅针对某个具体的HTTP方法。如下所示的是HttpVerbAttribute的完整定义，我们从中可以看出表示URL模板的只读属性RouteTemplate需要在构造函数中指定，而另外两个属性RouteName和RouteOrder则是可读可写的。&lt;/p&gt;&lt;div id=&quot;codeSnippetWrapper&quot;&gt;  &lt;div id=&quot;codeSnippet&quot;&gt;    &lt;span id=&quot;lnum1&quot;&gt;   1:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HttpVerbAttribute : Attribute, IActionHttpMethodProvider, IHttpRouteInfoProvider&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum2&quot;&gt;   2:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum3&quot;&gt;   3:&lt;/span&gt;     &lt;span&gt;protected&lt;/span&gt; HttpVerbAttribute(HttpMethod httpMethod);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum4&quot;&gt;   4:&lt;/span&gt;     &lt;span&gt;protected&lt;/span&gt; HttpVerbAttribute(HttpMethod httpMethod, &lt;span&gt;string&lt;/span&gt; routeTemplate); &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum5&quot;&gt;   5:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum6&quot;&gt;   6:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; Collection&amp;lt;HttpMethod&amp;gt;     HttpMethods { get; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum7&quot;&gt;   7:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;                     RouteName { get; set; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum8&quot;&gt;   8:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;                        RouteOrder { get; set; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum9&quot;&gt;   9:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;                     RouteTemplate { get; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum10&quot;&gt;  10:&lt;/span&gt; }&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;针对7种常用的HTTP方法，ASP.NET Web API定义了7个继承自HttpVerbAttribute的类型，它们分别是具有如下定义的HttpGetAttribute、HttpPostAttribute、HttpPutAttribute、HttpDeleteAttribute、HttpPatchAttribute、HttpHeadAttribute和HttpOptionsAttribute。我们可以看到这7个具体的HttpVerbAttribute均定义了两个构造函数重载，如果需要使用它们来注册路由，需要在构造函数中指定相应URL模板。&lt;/p&gt;&lt;div id=&quot;codeSnippetWrapper&quot;&gt;  &lt;div id=&quot;codeSnippet&quot;&gt;    &lt;span id=&quot;lnum1&quot;&gt;   1:&lt;/span&gt; [AttributeUsage(AttributeTargets.Method, AllowMultiple=&lt;span&gt;true&lt;/span&gt;, Inherited=&lt;span&gt;true&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum2&quot;&gt;   2:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HttpGetAttribute : HttpVerbAttribute&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum3&quot;&gt;   3:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum4&quot;&gt;   4:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpGetAttribute();&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum5&quot;&gt;   5:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpGetAttribute(&lt;span&gt;string&lt;/span&gt; routeTemplate);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum6&quot;&gt;   6:&lt;/span&gt; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum7&quot;&gt;   7:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum8&quot;&gt;   8:&lt;/span&gt; [AttributeUsage(AttributeTargets.Method, AllowMultiple=&lt;span&gt;true&lt;/span&gt;, Inherited=&lt;span&gt;true&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum9&quot;&gt;   9:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HttpPostAttribute : HttpVerbAttribute&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum10&quot;&gt;  10:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum11&quot;&gt;  11:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpPostAttribute();&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum12&quot;&gt;  12:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpPostAttribute(&lt;span&gt;string&lt;/span&gt; routeTemplate);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum13&quot;&gt;  13:&lt;/span&gt; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum14&quot;&gt;  14:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum15&quot;&gt;  15:&lt;/span&gt; [AttributeUsage(AttributeTargets.Method, AllowMultiple=&lt;span&gt;true&lt;/span&gt;, Inherited=&lt;span&gt;true&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum16&quot;&gt;  16:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HttpPutAttribute : HttpVerbAttribute&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum17&quot;&gt;  17:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum18&quot;&gt;  18:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpPutAttribute();&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum19&quot;&gt;  19:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpPutAttribute(&lt;span&gt;string&lt;/span&gt; routeTemplate);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum20&quot;&gt;  20:&lt;/span&gt; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum21&quot;&gt;  21:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum22&quot;&gt;  22:&lt;/span&gt; [AttributeUsage(AttributeTargets.Method, AllowMultiple=&lt;span&gt;true&lt;/span&gt;, Inherited=&lt;span&gt;true&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum23&quot;&gt;  23:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HttpDeleteAttribute : HttpVerbAttribute&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum24&quot;&gt;  24:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum25&quot;&gt;  25:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpDeleteAttribute();&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum26&quot;&gt;  26:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpDeleteAttribute(&lt;span&gt;string&lt;/span&gt; routeTemplate);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum27&quot;&gt;  27:&lt;/span&gt; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum28&quot;&gt;  28:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum29&quot;&gt;  29:&lt;/span&gt; [AttributeUsage(AttributeTargets.Method, AllowMultiple=&lt;span&gt;true&lt;/span&gt;, Inherited=&lt;span&gt;true&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum30&quot;&gt;  30:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HttpPatchAttribute : HttpVerbAttribute&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum31&quot;&gt;  31:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum32&quot;&gt;  32:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpPatchAttribute();&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum33&quot;&gt;  33:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpPatchAttribute(&lt;span&gt;string&lt;/span&gt; routeTemplate);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum34&quot;&gt;  34:&lt;/span&gt; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum35&quot;&gt;  35:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum36&quot;&gt;  36:&lt;/span&gt; [AttributeUsage(AttributeTargets.Method, AllowMultiple=&lt;span&gt;true&lt;/span&gt;, Inherited=&lt;span&gt;true&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum37&quot;&gt;  37:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HttpHeadAttribute : HttpVerbAttribute&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum38&quot;&gt;  38:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum39&quot;&gt;  39:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpHeadAttribute();&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum40&quot;&gt;  40:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpHeadAttribute(&lt;span&gt;string&lt;/span&gt; routeTemplate);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum41&quot;&gt;  41:&lt;/span&gt; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum42&quot;&gt;  42:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum43&quot;&gt;  43:&lt;/span&gt; [AttributeUsage(AttributeTargets.Method, AllowMultiple=&lt;span&gt;true&lt;/span&gt;, Inherited=&lt;span&gt;true&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum44&quot;&gt;  44:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HttpOptionsAttribute : HttpVerbAttribute&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum45&quot;&gt;  45:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum46&quot;&gt;  46:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpOptionsAttribute();&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum47&quot;&gt;  47:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HttpOptionsAttribute(&lt;span&gt;string&lt;/span&gt; routeTemplate);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum48&quot;&gt;  48:&lt;/span&gt; }&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;在完成了用于进行路由注册的两个HttpRouteInfoProvider特性（AcceptVerbsAttribute和HttpVerbAttribute）之后，我们以实例演示的形式介绍如何利用它们进行针对目标Action方法的路由映射。简单起见，我们只选择使用针对单一HTTP方法的HttpVerbAttribute特性来注册我们需要的路由。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;开启针对特性的路由&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;相对于针对特定的路由（Attribute-based Routing），我们将传统的路由称为基于约定的路由（Convention-based Routing）。在默认的情况下针对特定的路由机制是关闭的，我们需要调用HttpConfiguration具有如下定义的扩展方法&lt;a name=&quot;OLE_LINK90&quot;&gt;&lt;/a&gt;&lt;a name=&quot;OLE_LINK89&quot;&gt;&lt;/a&gt;MapHttpAttributeRoutes打开这个开关。&lt;/p&gt;&lt;div id=&quot;codeSnippetWrapper&quot;&gt;  &lt;div id=&quot;codeSnippet&quot;&gt;    &lt;span id=&quot;lnum1&quot;&gt;   1:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HttpConfigurationExtensions&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum2&quot;&gt;   2:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum3&quot;&gt;   3:&lt;/span&gt;     &lt;span&gt;//其他成员&lt;/span&gt;&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum4&quot;&gt;   4:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; MapHttpAttributeRoutes(&lt;span&gt;this&lt;/span&gt; HttpConfiguration configuration);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum5&quot;&gt;   5:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; MapHttpAttributeRoutes(&lt;span&gt;this&lt;/span&gt; HttpConfiguration configuration, HttpRouteBuilder routeBuilder);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum6&quot;&gt;   6:&lt;/span&gt; }&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;如上面的代码片断所示，这个扩展方法具有两个重载，其中一个方法接受一个类型为HttpRouteBuilder的参数。顾名思义，HttpRouteBuilder的作用在于根据应用的HttpRouteInfoProvider特性创建对应的HttpRoute。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;基本路由注册&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;假设有一家专门负责销售影碟的网店，我们为它开发了一套Web API来提供影片的信息，同时供后台应用进行影片资源的维护。简单起见，我们只定义了如下一个表示影片的类型Movie，它仅仅封装了一部电影包含片名、类型、主演、导演、发行日期、对白语言和故事摘要在内的基本信息，属性ID作为它的唯一标识。&lt;/p&gt;&lt;div id=&quot;codeSnippetWrapper&quot;&gt;  &lt;div id=&quot;codeSnippet&quot;&gt;    &lt;span id=&quot;lnum1&quot;&gt;   1:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Movie&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum2&quot;&gt;   2:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum3&quot;&gt;   3:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; Guid                 Id { get; set; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum4&quot;&gt;   4:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;               Name { get; set; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum5&quot;&gt;   5:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; IEnumerable&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt;  Genres { get; set; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum6&quot;&gt;   6:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; IEnumerable&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt;  Starring { get; set; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum7&quot;&gt;   7:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;               Director { get; set; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum8&quot;&gt;   8:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; DateTime             ReleaseDate { get; set; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum9&quot;&gt;   9:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;               Language {get; set;}&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum10&quot;&gt;  10:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;               Story { get; set; }&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum11&quot;&gt;  11:&lt;/span&gt; }&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;我们将用于操作影片资源的基本操作定义在如下一个名为MoviesController的HttpController中，5个基本的Action方法上均应用了针对某个HTTP方法的HttpVerbAttribute特性并指定了相应的URL模板。用于根据ID获取对应影片信息的Action方法GetMovieById采用的URL模板为“&lt;span&gt;api/movies/{id}&lt;/span&gt;”，另一个Action方法GetMovieByStarring返回由指定的某个演员主演的影片列表，它采用的URL模板为“&lt;span&gt;api/movies/starring/{starring}&lt;/span&gt;”。这两个Action方法均仅仅提供针对HTTP-GET请求的唯一支持，URL模板中定义的路由变量（“{id}”和“{starring}”）均映射到目标方法的同名参数上。&lt;/p&gt;&lt;div id=&quot;codeSnippetWrapper&quot;&gt;  &lt;div id=&quot;codeSnippet&quot;&gt;    &lt;span id=&quot;lnum1&quot;&gt;   1:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; MoviesController: ApiController&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum2&quot;&gt;   2:&lt;/span&gt; {    &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum3&quot;&gt;   3:&lt;/span&gt;     [HttpGet(&lt;span&gt;&amp;quot;api/movies/{id}&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum4&quot;&gt;   4:&lt;/span&gt;      &lt;span&gt;public&lt;/span&gt; Movie GetMovieById(Guid id);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum5&quot;&gt;   5:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum6&quot;&gt;   6:&lt;/span&gt;     [HttpGet(&lt;span&gt;&amp;quot;api/movies/starring/{starring}&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum7&quot;&gt;   7:&lt;/span&gt;      &lt;span&gt;public&lt;/span&gt; IEnumerable&amp;lt;Movie&amp;gt; GetMovieByStarring(&lt;span&gt;string&lt;/span&gt; starring);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum8&quot;&gt;   8:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum9&quot;&gt;   9:&lt;/span&gt;     [HttpPost(&lt;span&gt;&amp;quot;api/movies&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum10&quot;&gt;  10:&lt;/span&gt;      &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Add(Movie movie);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum11&quot;&gt;  11:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum12&quot;&gt;  12:&lt;/span&gt;     [HttpPut(&lt;span&gt;&amp;quot;api/movies&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum13&quot;&gt;  13:&lt;/span&gt;      &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Update(Movie movie);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum14&quot;&gt;  14:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum15&quot;&gt;  15:&lt;/span&gt;     [HttpDelete(&lt;span&gt;&amp;quot;api/movies/{id}&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum16&quot;&gt;  16:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Delete(&lt;span&gt;string&lt;/span&gt; id);&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum17&quot;&gt;  17:&lt;/span&gt; }&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;scid:8747F07C-CDE8-481f-B0DF-C6CFD074BF67:670d8af1-db1a-4510-8616-49b98467f636&quot; class=&quot;wlWriterEditableSmartContent&quot;&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/19327/201309/16085811-03c5bf24cb4643518a254f6da6a77010.png&quot; title=&quot;&quot; rel=&quot;thumbnail&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://images.cnitblog.com/blog/19327/201309/16085813-d0ef47e256f64639b89c45ae29c9eec5.png&quot; width=&quot;291&quot; height=&quot;335&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;其他三个Action方法Add、Update和Delete分别进行添加、修改和删除操作，我们分别在它们上面应用了HttpPostAttribute、HttpPutAttribute和HttpDeleteAttribute来控制它们支持的HTTP方法和指定URL模板。&lt;/p&gt;&lt;p&gt;因为用于注册路由的HttpRouteInfoProvider特性直接应用到目标Action方法上，当ASP.NET Web API根据它们生成相应HttpRoute的时候可以解析出目标HttpController和Action的名称，所以我们使用HttpRouteInfoProvider特性进行路由注册的时候&lt;span&gt;无需指定对应的路由变量（“{controller}”和“{action}”）&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;针对定义在MoviesController中支持HTTP-GET请求的两个Action方法GetMovieById和GetMovieByStarring，我们可以直接通过浏览器访问匹配的URL来获取相应的影片信息。如右图所示，我们通过地址“&lt;span&gt;/api/movies/b4e0bc49-568d-402b-acf0-37b65008723f&lt;/span&gt;”获取ID为“b4e0bc49-568d-402b-acf0-37b65008723f”的 影片。通过地址“&lt;a name=&quot;OLE_LINK4&quot;&gt;&lt;/a&gt;&lt;a name=&quot;OLE_LINK3&quot;&gt;&lt;/a&gt;&lt;span&gt;/api/movies/starring/pacino&lt;/span&gt;”得到的是由Pacino主要的影片列表。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;让URL模板能够尽可能反映资源的层次结构&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我们说Web API操作的目标资源具有的层次化结构往往不是指的资源本身具有的物理结构，而只要体现在资源针对不同的调用请求而具有的&lt;span&gt;逻辑结构&lt;/span&gt;。就我们的例子来说，目标资源就是一组影片列表而已，其数据本身并不具有复杂的物理结构，其层次化的逻辑结构体现在针对不同条件组合的查询。我们需要针对资源的逻辑结构设计对应的URL，比如：&lt;/p&gt;&lt;ul&gt;  &lt;li&gt;获取由Pacino主演的剧情片：/api/movies/starring/pacino/drama &lt;/li&gt;  &lt;li&gt;获取由Cameron导演的爱情片：/api/movies/director/cameron/romance &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;针对如上这两种具体的需求，我们可以按照在MoviesController中添加如下两个Action方法。方法GetMovieByStarringAndGenre采用的URL模板分别为“&lt;span&gt;api/movies/starring/{starring}/{genre}&lt;/span&gt;”而方法GetMovieByDirectorAndGenre 采用的URL为“&lt;span&gt;api/movies/director/{director}/{genre}&lt;/span&gt;”。&lt;/p&gt;&lt;div id=&quot;codeSnippetWrapper&quot;&gt;  &lt;div id=&quot;codeSnippet&quot;&gt;    &lt;span id=&quot;lnum1&quot;&gt;   1:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; MoviesController : ApiController&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum2&quot;&gt;   2:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum3&quot;&gt;   3:&lt;/span&gt;     &lt;span&gt;//其他成员&lt;/span&gt;&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum4&quot;&gt;   4:&lt;/span&gt;     [HttpGet(&lt;span&gt;&amp;quot;api/movies/starring/{starring}/{genre}&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum5&quot;&gt;   5:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; IEnumerable&amp;lt;Movie&amp;gt; GetMovieByStarringAndGenre(&lt;span&gt;string&lt;/span&gt; starring, &lt;span&gt;string&lt;/span&gt; genre)；&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum6&quot;&gt;   6:&lt;/span&gt;&amp;#160; &lt;!--CRLF--&gt;    &lt;span id=&quot;lnum7&quot;&gt;   7:&lt;/span&gt;     [HttpGet(&lt;span&gt;&amp;quot;api/movies/director/{director}/{genre}&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum8&quot;&gt;   8:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; IEnumerable&amp;lt;Movie&amp;gt; GetMovieByDirectorAndGenre(&lt;span&gt;string&lt;/span&gt; director, &lt;span&gt;string&lt;/span&gt; genre)；&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum9&quot;&gt;   9:&lt;/span&gt; }&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;scid:8747F07C-CDE8-481f-B0DF-C6CFD074BF67:5cf61f07-c9fb-49b9-b443-adea3ae625ea&quot; class=&quot;wlWriterEditableSmartContent&quot;&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/19327/201309/16085814-4fb1b8ee37424206a4c10dd14510591c.png&quot; title=&quot;&quot; rel=&quot;thumbnail&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://images.cnitblog.com/blog/19327/201309/16085815-eefda71acca9405495825331828b2759.png&quot; width=&quot;335&quot; height=&quot;214&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;针对注册在这两个Action方法上的路由，我们可以采用匹配的URL获取相应的影片列表。如右图6-2所示，我们直接利用浏览器发送请求来调用上面定义的两个Action方法。我们采用地址“&lt;span&gt;/api/movies/starring/pacino/crime&lt;/span&gt;”获取由Pacino主演的犯罪类型的影片列表，而另一个地址“&lt;span&gt;/api/movies/director/brest/drama&lt;/span&gt;”则用于获取由Brest导演的剧情片列表。&lt;/p&gt;&lt;p&gt;通过上面的介绍我们知道两种类型的HttpRouteInfoProvider特性（AcceptVerbsAttribute和HttpVerbAttribute）均具有这样的特性：多个同一类型的特性可以同时应用到相同的Action方法上。如果我们按照如下的方式将针对不同条件组合（主演、导演和类型）的查询均定义在同一个FindMovies方法上，然后通过应用多个HttpGetAttribute特性注册多个采用不同URL模板的路由，那么是否也能解决上面这个问题呢？&lt;/p&gt;&lt;div id=&quot;codeSnippetWrapper&quot;&gt;  &lt;div id=&quot;codeSnippet&quot;&gt;    &lt;span id=&quot;lnum1&quot;&gt;   1:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; MoviesController : ApiController&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum2&quot;&gt;   2:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum3&quot;&gt;   3:&lt;/span&gt;     &lt;span&gt;//其他成员&lt;/span&gt;&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum4&quot;&gt;   4:&lt;/span&gt;     [HttpGet(&lt;span&gt;&amp;quot;api/movies/starring/{starring}&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum5&quot;&gt;   5:&lt;/span&gt;     [HttpGet(&lt;span&gt;&amp;quot;api/movies/starring/{starring}/{genre}&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum6&quot;&gt;   6:&lt;/span&gt;     [HttpGet(&lt;span&gt;&amp;quot;api/movies/director/{director}/{genre}&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum7&quot;&gt;   7:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; IEnumerable&amp;lt;Movie&amp;gt; FindMovies(&lt;span&gt;string&lt;/span&gt; starring, &lt;span&gt;string&lt;/span&gt; director, &lt;span&gt;string&lt;/span&gt; genre)；&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum8&quot;&gt;   8:&lt;/span&gt; }&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;scid:8747F07C-CDE8-481f-B0DF-C6CFD074BF67:2b592961-76e4-41e4-8dba-dc34fff4a297&quot; class=&quot;wlWriterEditableSmartContent&quot;&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/19327/201309/16085816-953ba532e0e945cc98b78f82ad7b57ce.png&quot; title=&quot;&quot; rel=&quot;thumbnail&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://images.cnitblog.com/blog/19327/201309/16085816-3d033cae878c4ce684ac7578f26e5f38.png&quot; width=&quot;335&quot; height=&quot;233&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;实际上这个Action方法FindMovies是没有办法按照应用在它上面的HttpGetAttribute特性指定的URL模板进行调用的。如左图所示，我们在浏览器中采用模式匹配的三个URL来调用Web API，但无一例外都得到一个状态为“&lt;span&gt;404， Not Found&lt;/span&gt;”的响应，并提示根据请求的URL无法找在目标HttpController中找到一个匹配的Action。&lt;/p&gt;&lt;p&gt;既然我们我们已经明确将相应的路由通过HttpGetAttribute特性注册到Action方法FindMovies上了，但是为何ASP.NET Web API却说根据请求URL（该URL与注册路由的URL模式相匹配）在MoviesController中找不到匹配的Action呢？其实《&lt;a href=&quot;http://www.cnblogs.com/artech/p/asp-net-web-api-action-seclection-03.html&quot;&gt;ASP.NET Web API是如何根据请求选择Action的？&lt;/a&gt;》已经回答了这个问题。&lt;/p&gt;&lt;p&gt;在《&lt;a href=&quot;http://www.cnblogs.com/artech/p/asp-net-web-api-action-seclection-03.html&quot;&gt;ASP.NET Web API是如何根据请求选择Action的？&lt;/a&gt;》一文中，我们介绍了ASP.NET Web API针对请求选择目标Action会经历4轮筛选，其中第3轮筛选出的候选Action必须满足这样的条件：Action方法中定义的由URL提供的非缺省参数必须存在于当前请求的URL中。对于我们这个例子来说，三个请求采用的URL都不能完整地提供定义在FindMovies方法上的所有三个参数（starring、director和genre）。&lt;/p&gt;&lt;p&gt;那么既然“&lt;span&gt;非缺省参数&lt;/span&gt;”才需要由请求的URL来提供，那么如果我们将参数定义成缺省参数是否可以解决这个问题呢？为此我们按照如下的方式将&lt;a name=&quot;OLE_LINK8&quot;&gt;&lt;/a&gt;&lt;a name=&quot;OLE_LINK7&quot;&gt;&lt;/a&gt;FindMovies方法的三个参数均定义成默认值为空字符串的可缺省参数。&lt;/p&gt;&lt;div id=&quot;codeSnippetWrapper&quot;&gt;  &lt;div id=&quot;codeSnippet&quot;&gt;    &lt;span id=&quot;lnum1&quot;&gt;   1:&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; MoviesController : ApiController&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum2&quot;&gt;   2:&lt;/span&gt; {&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum3&quot;&gt;   3:&lt;/span&gt;     &lt;span&gt;//其他成员&lt;/span&gt;&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum4&quot;&gt;   4:&lt;/span&gt;     [HttpGet(&lt;span&gt;&amp;quot;api/movies/starring/{starring}&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum5&quot;&gt;   5:&lt;/span&gt;     [HttpGet(&lt;span&gt;&amp;quot;api/movies/starring/{starring}/{genre}&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum6&quot;&gt;   6:&lt;/span&gt;     [HttpGet(&lt;span&gt;&amp;quot;api/movies/director/{director}/{genre}&amp;quot;&lt;/span&gt;)]&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum7&quot;&gt;   7:&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; IEnumerable&amp;lt;Movie&amp;gt; FindMovies(&lt;span&gt;string&lt;/span&gt; starring = &lt;span&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span&gt;string&lt;/span&gt; director = &lt;span&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span&gt;string&lt;/span&gt; genre = &lt;span&gt;&amp;quot;&amp;quot;&lt;/span&gt;)；&lt;!--CRLF--&gt;    &lt;span id=&quot;lnum8&quot;&gt;   8:&lt;/span&gt; }&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;scid:8747F07C-CDE8-481f-B0DF-C6CFD074BF67:249e6686-ed28-4f38-8b65-9a5215327885&quot; class=&quot;wlWriterEditableSmartContent&quot;&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/19327/201309/16085817-6eb2ff382d0a4b5281079ade513f14ae.png&quot; title=&quot;&quot; rel=&quot;thumbnail&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://images.cnitblog.com/blog/19327/201309/16085817-0c73004744334f0eb035e220013789e8.png&quot; width=&quot;335&quot; height=&quot;233&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;我们再次利用浏览器采用相同的URL来调用定义在MoviesController中的这个Action方法FindMovies，会得到如右图所示的输出结果，可见将Action方法的参数定义成可缺省的参数可以帮助ASP.NET Web API找到对应我们期望的目标参数，我们在项目中也可以利用这样的变成技巧。&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3323592&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/artech/p/attribute-routing-01.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/artech/p/attribute-routing-01.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-16T00:58:00+00:00</dc:date>
	<dc:creator>Artech</dc:creator>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252831.htm">
	<title>cnBeta.COM: [图]艺术家用Bowers&amp;Wilkins扬声器打造的《40声部赞美诗》</title>
	<link>http://www.cnbeta.com/articles/252831.htm</link>
	<content:encoded>&lt;p&gt;大多数&quot;声音艺术&quot;总给人冷冰冰的感觉，虽然音质表现不错、又有技术感，但是&quot;艺术&quot;总得有超脱于技术层面之上的意义才是。&lt;strong&gt;但在上周二出席了艺术家珍妮特·卡迪夫(Janet Cardiff)于修道院艺术博物馆举办的《40声部赞美诗》开幕会之后，记者才真真感觉到了&quot;美不胜收&quot;的声音。&lt;/strong&gt;Janet Cardiff充分利用了Fuentidueña小教堂的位置，用40组Bowers &amp;#38; Wilkins的DM303扬声器(已停产)打造出了震撼人心的声音效果。&lt;br /&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3145543a/sc/38/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252831.htm&amp;t=%5B%E5%9B%BE%5D%E8%89%BA%E6%9C%AF%E5%AE%B6%E7%94%A8Bowers%26Wilkins%E6%89%AC%E5%A3%B0%E5%99%A8%E6%89%93%E9%80%A0%E7%9A%84%E3%80%8A40%E5%A3%B0%E9%83%A8%E8%B5%9E%E7%BE%8E%E8%AF%97%E3%80%8B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252831.htm&amp;t=%5B%E5%9B%BE%5D%E8%89%BA%E6%9C%AF%E5%AE%B6%E7%94%A8Bowers%26Wilkins%E6%89%AC%E5%A3%B0%E5%99%A8%E6%89%93%E9%80%A0%E7%9A%84%E3%80%8A40%E5%A3%B0%E9%83%A8%E8%B5%9E%E7%BE%8E%E8%AF%97%E3%80%8B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252831.htm&amp;t=%5B%E5%9B%BE%5D%E8%89%BA%E6%9C%AF%E5%AE%B6%E7%94%A8Bowers%26Wilkins%E6%89%AC%E5%A3%B0%E5%99%A8%E6%89%93%E9%80%A0%E7%9A%84%E3%80%8A40%E5%A3%B0%E9%83%A8%E8%B5%9E%E7%BE%8E%E8%AF%97%E3%80%8B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252831.htm&amp;t=%5B%E5%9B%BE%5D%E8%89%BA%E6%9C%AF%E5%AE%B6%E7%94%A8Bowers%26Wilkins%E6%89%AC%E5%A3%B0%E5%99%A8%E6%89%93%E9%80%A0%E7%9A%84%E3%80%8A40%E5%A3%B0%E9%83%A8%E8%B5%9E%E7%BE%8E%E8%AF%97%E3%80%8B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252831.htm&amp;t=%5B%E5%9B%BE%5D%E8%89%BA%E6%9C%AF%E5%AE%B6%E7%94%A8Bowers%26Wilkins%E6%89%AC%E5%A3%B0%E5%99%A8%E6%89%93%E9%80%A0%E7%9A%84%E3%80%8A40%E5%A3%B0%E9%83%A8%E8%B5%9E%E7%BE%8E%E8%AF%97%E3%80%8B&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/174726977967/u/47/f/624776/c/34306/s/3145543a/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/174726977967/u/47/f/624776/c/34306/s/3145543a/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/174726977967/u/47/f/624776/c/34306/s/3145543a/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T00:56:46+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252830.htm">
	<title>cnBeta.COM: 德媒体称美国NSA试图刺探国际支付信息</title>
	<link>http://www.cnbeta.com/articles/252830.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;德国《明镜周刊》报道称，美国国家安全局(NSA)对于由VISA等公司处理的国际支付流程非常关注。该机构甚至建立了自己的金融数据库，用于追踪资金流动。&lt;/strong&gt;《明镜周刊》获得的文件显示，NSA广泛关注各类国际支付、银行和信用卡交易。由爱德华·斯诺登(Edward Snowden)提供的这些信息显示，这一间谍活动由名为“追踪资金(FTM)”的NSA分支机构进行。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31455435/sc/3/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252830.htm&amp;t=%E5%BE%B7%E5%AA%92%E4%BD%93%E7%A7%B0%E7%BE%8E%E5%9B%BDNSA%E8%AF%95%E5%9B%BE%E5%88%BA%E6%8E%A2%E5%9B%BD%E9%99%85%E6%94%AF%E4%BB%98%E4%BF%A1%E6%81%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252830.htm&amp;t=%E5%BE%B7%E5%AA%92%E4%BD%93%E7%A7%B0%E7%BE%8E%E5%9B%BDNSA%E8%AF%95%E5%9B%BE%E5%88%BA%E6%8E%A2%E5%9B%BD%E9%99%85%E6%94%AF%E4%BB%98%E4%BF%A1%E6%81%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252830.htm&amp;t=%E5%BE%B7%E5%AA%92%E4%BD%93%E7%A7%B0%E7%BE%8E%E5%9B%BDNSA%E8%AF%95%E5%9B%BE%E5%88%BA%E6%8E%A2%E5%9B%BD%E9%99%85%E6%94%AF%E4%BB%98%E4%BF%A1%E6%81%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252830.htm&amp;t=%E5%BE%B7%E5%AA%92%E4%BD%93%E7%A7%B0%E7%BE%8E%E5%9B%BDNSA%E8%AF%95%E5%9B%BE%E5%88%BA%E6%8E%A2%E5%9B%BD%E9%99%85%E6%94%AF%E4%BB%98%E4%BF%A1%E6%81%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252830.htm&amp;t=%E5%BE%B7%E5%AA%92%E4%BD%93%E7%A7%B0%E7%BE%8E%E5%9B%BDNSA%E8%AF%95%E5%9B%BE%E5%88%BA%E6%8E%A2%E5%9B%BD%E9%99%85%E6%94%AF%E4%BB%98%E4%BF%A1%E6%81%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/174726977966/u/47/f/624776/c/34306/s/31455435/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/174726977966/u/47/f/624776/c/34306/s/31455435/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/174726977966/u/47/f/624776/c/34306/s/31455435/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T00:56:29+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252829.htm">
	<title>cnBeta.COM: [视频]索尼Xperia Z1拍照专项测评 对比三星Galaxy S4</title>
	<link>http://www.cnbeta.com/articles/252829.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;感谢&lt;a href=&quot;http://weibo.com/benlu2002&quot; target=&quot;_blank&quot;&gt;那岩@科技美学&lt;/a&gt;的投递&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;索尼Xperia Z1具备2070万像素和G镜头，其拍照能力令人期待，今天我们为大家带来Z1的拍照对比测试，对比机型为目前市面最热销的三星Galaxy S4。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31451919/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252829.htm&amp;t=%5B%E8%A7%86%E9%A2%91%5D%E7%B4%A2%E5%B0%BCXperia+Z1%E6%8B%8D%E7%85%A7%E4%B8%93%E9%A1%B9%E6%B5%8B%E8%AF%84+%E5%AF%B9%E6%AF%94%E4%B8%89%E6%98%9FGalaxy+S4&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252829.htm&amp;t=%5B%E8%A7%86%E9%A2%91%5D%E7%B4%A2%E5%B0%BCXperia+Z1%E6%8B%8D%E7%85%A7%E4%B8%93%E9%A1%B9%E6%B5%8B%E8%AF%84+%E5%AF%B9%E6%AF%94%E4%B8%89%E6%98%9FGalaxy+S4&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252829.htm&amp;t=%5B%E8%A7%86%E9%A2%91%5D%E7%B4%A2%E5%B0%BCXperia+Z1%E6%8B%8D%E7%85%A7%E4%B8%93%E9%A1%B9%E6%B5%8B%E8%AF%84+%E5%AF%B9%E6%AF%94%E4%B8%89%E6%98%9FGalaxy+S4&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252829.htm&amp;t=%5B%E8%A7%86%E9%A2%91%5D%E7%B4%A2%E5%B0%BCXperia+Z1%E6%8B%8D%E7%85%A7%E4%B8%93%E9%A1%B9%E6%B5%8B%E8%AF%84+%E5%AF%B9%E6%AF%94%E4%B8%89%E6%98%9FGalaxy+S4&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252829.htm&amp;t=%5B%E8%A7%86%E9%A2%91%5D%E7%B4%A2%E5%B0%BCXperia+Z1%E6%8B%8D%E7%85%A7%E4%B8%93%E9%A1%B9%E6%B5%8B%E8%AF%84+%E5%AF%B9%E6%AF%94%E4%B8%89%E6%98%9FGalaxy+S4&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953800164/u/47/f/624776/c/34306/s/31451919/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953800164/u/47/f/624776/c/34306/s/31451919/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953800164/u/47/f/624776/c/34306/s/31451919/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T00:25:21+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252828.htm">
	<title>cnBeta.COM: 5寸大屏之争 黑莓Z30对比索尼Xperia Z1</title>
	<link>http://www.cnbeta.com/articles/252828.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;感谢&lt;a href=&quot;http://www.hibbers.com/&quot; target=&quot;_blank&quot;&gt;hibbers&lt;/a&gt;的投递&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;国外知名站点crackberry今日公布了黑莓Z30与与索尼 One sony 系列旗舰机Xperia Z1的对比图片，两款设备都配备了一块5英寸的显示屏幕，得益于黑莓10 系统的优质特性，屏幕同样大小的情况下黑莓Z30 可显示内容多于Xperia Z1，这也使得视觉感受上Z30的屏幕比Xperia Z1更大。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31451917/sc/17/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252828.htm&amp;t=5%E5%AF%B8%E5%A4%A7%E5%B1%8F%E4%B9%8B%E4%BA%89+%E9%BB%91%E8%8E%93Z30%E5%AF%B9%E6%AF%94%E7%B4%A2%E5%B0%BCXperia+Z1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252828.htm&amp;t=5%E5%AF%B8%E5%A4%A7%E5%B1%8F%E4%B9%8B%E4%BA%89+%E9%BB%91%E8%8E%93Z30%E5%AF%B9%E6%AF%94%E7%B4%A2%E5%B0%BCXperia+Z1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252828.htm&amp;t=5%E5%AF%B8%E5%A4%A7%E5%B1%8F%E4%B9%8B%E4%BA%89+%E9%BB%91%E8%8E%93Z30%E5%AF%B9%E6%AF%94%E7%B4%A2%E5%B0%BCXperia+Z1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252828.htm&amp;t=5%E5%AF%B8%E5%A4%A7%E5%B1%8F%E4%B9%8B%E4%BA%89+%E9%BB%91%E8%8E%93Z30%E5%AF%B9%E6%AF%94%E7%B4%A2%E5%B0%BCXperia+Z1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252828.htm&amp;t=5%E5%AF%B8%E5%A4%A7%E5%B1%8F%E4%B9%8B%E4%BA%89+%E9%BB%91%E8%8E%93Z30%E5%AF%B9%E6%AF%94%E7%B4%A2%E5%B0%BCXperia+Z1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953800163/u/47/f/624776/c/34306/s/31451917/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953800163/u/47/f/624776/c/34306/s/31451917/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953800163/u/47/f/624776/c/34306/s/31451917/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T00:24:51+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252827.htm">
	<title>cnBeta.COM: [多图]移动版HTC One Max真机曝光 支持指纹识别</title>
	<link>http://www.cnbeta.com/articles/252827.htm</link>
	<content:encoded>&lt;p&gt;HTC One Max最近的曝光率颇高，不仅爆料大神evleaks泄露了该机的LOGO效果图片，而且更有HTC One Max行货的移动定制版HTC 8088在网络上浮出水面。与此前传闻的一样，该机配备有指纹识别功能，并采用了超窄边框设计。&lt;strong&gt;这次曝光的HTC One Max由于手机型号为HTC 8088，所以可以确定为该机的移动版，但在触控屏右上角并没有出现过去曝光的G3标志，所以有可能是移动版本的工程样机。&lt;/strong&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31451916/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252827.htm&amp;t=%5B%E5%A4%9A%E5%9B%BE%5D%E7%A7%BB%E5%8A%A8%E7%89%88HTC+One+Max%E7%9C%9F%E6%9C%BA%E6%9B%9D%E5%85%89+%E6%94%AF%E6%8C%81%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252827.htm&amp;t=%5B%E5%A4%9A%E5%9B%BE%5D%E7%A7%BB%E5%8A%A8%E7%89%88HTC+One+Max%E7%9C%9F%E6%9C%BA%E6%9B%9D%E5%85%89+%E6%94%AF%E6%8C%81%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252827.htm&amp;t=%5B%E5%A4%9A%E5%9B%BE%5D%E7%A7%BB%E5%8A%A8%E7%89%88HTC+One+Max%E7%9C%9F%E6%9C%BA%E6%9B%9D%E5%85%89+%E6%94%AF%E6%8C%81%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252827.htm&amp;t=%5B%E5%A4%9A%E5%9B%BE%5D%E7%A7%BB%E5%8A%A8%E7%89%88HTC+One+Max%E7%9C%9F%E6%9C%BA%E6%9B%9D%E5%85%89+%E6%94%AF%E6%8C%81%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252827.htm&amp;t=%5B%E5%A4%9A%E5%9B%BE%5D%E7%A7%BB%E5%8A%A8%E7%89%88HTC+One+Max%E7%9C%9F%E6%9C%BA%E6%9B%9D%E5%85%89+%E6%94%AF%E6%8C%81%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953800162/u/47/f/624776/c/34306/s/31451916/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953800162/u/47/f/624776/c/34306/s/31451916/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953800162/u/47/f/624776/c/34306/s/31451916/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T00:24:24+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252826.htm">
	<title>cnBeta.COM: 科学家研制新型薄膜 使物体在红外线下隐形</title>
	<link>http://www.cnbeta.com/articles/252826.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;阿诺德-斯瓦辛格的影迷们一定会对科幻电影《铁血战士》记忆犹新，剧中神秘的外星人使用独特涂层可使自己隐形，逐个猎杀敢死队成员。目前，美国科学家最新研制一种薄膜材料，在红外光谱下实现隐形效果。&lt;/strong&gt;美国加利福尼亚州大学化学工程和材料科学系副教授阿龙-格罗德特斯凯(Alon Gorodetsky)带领一支研究小组，研制一种薄膜材料，可以响应外部信号，改变颜色和反射率。伴随着薄膜的出现，物体能够在红外线下隐形消失。该项研究发表在《高级材料》杂志上。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31448d1a/sc/11/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252826.htm&amp;t=%E7%A7%91%E5%AD%A6%E5%AE%B6%E7%A0%94%E5%88%B6%E6%96%B0%E5%9E%8B%E8%96%84%E8%86%9C+%E4%BD%BF%E7%89%A9%E4%BD%93%E5%9C%A8%E7%BA%A2%E5%A4%96%E7%BA%BF%E4%B8%8B%E9%9A%90%E5%BD%A2&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252826.htm&amp;t=%E7%A7%91%E5%AD%A6%E5%AE%B6%E7%A0%94%E5%88%B6%E6%96%B0%E5%9E%8B%E8%96%84%E8%86%9C+%E4%BD%BF%E7%89%A9%E4%BD%93%E5%9C%A8%E7%BA%A2%E5%A4%96%E7%BA%BF%E4%B8%8B%E9%9A%90%E5%BD%A2&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252826.htm&amp;t=%E7%A7%91%E5%AD%A6%E5%AE%B6%E7%A0%94%E5%88%B6%E6%96%B0%E5%9E%8B%E8%96%84%E8%86%9C+%E4%BD%BF%E7%89%A9%E4%BD%93%E5%9C%A8%E7%BA%A2%E5%A4%96%E7%BA%BF%E4%B8%8B%E9%9A%90%E5%BD%A2&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252826.htm&amp;t=%E7%A7%91%E5%AD%A6%E5%AE%B6%E7%A0%94%E5%88%B6%E6%96%B0%E5%9E%8B%E8%96%84%E8%86%9C+%E4%BD%BF%E7%89%A9%E4%BD%93%E5%9C%A8%E7%BA%A2%E5%A4%96%E7%BA%BF%E4%B8%8B%E9%9A%90%E5%BD%A2&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252826.htm&amp;t=%E7%A7%91%E5%AD%A6%E5%AE%B6%E7%A0%94%E5%88%B6%E6%96%B0%E5%9E%8B%E8%96%84%E8%86%9C+%E4%BD%BF%E7%89%A9%E4%BD%93%E5%9C%A8%E7%BA%A2%E5%A4%96%E7%BA%BF%E4%B8%8B%E9%9A%90%E5%BD%A2&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953799770/u/47/f/624776/c/34306/s/31448d1a/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953799770/u/47/f/624776/c/34306/s/31448d1a/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953799770/u/47/f/624776/c/34306/s/31448d1a/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T00:21:54+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252825.htm">
	<title>cnBeta.COM: 刘慈欣：科幻不应把科学技术妖魔化</title>
	<link>http://www.cnbeta.com/articles/252825.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;刘慈欣是当代中国最红的科幻作家，也是以写“硬科幻”著称的作家，在他看来，科幻最本质、最核心的东西就是与科学技术有关的创意。&lt;/strong&gt;令他担忧的是，现在的科幻写作与他所认为的科幻精神——天真的思维方式、大无畏的童心、开拓进取的精神、对科学的积极态度渐行渐远，而是在向把科学技术妖魔化、把未来黑暗化的方向发展。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31448d19/sc/38/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252825.htm&amp;t=%E5%88%98%E6%85%88%E6%AC%A3%EF%BC%9A%E7%A7%91%E5%B9%BB%E4%B8%8D%E5%BA%94%E6%8A%8A%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E5%A6%96%E9%AD%94%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252825.htm&amp;t=%E5%88%98%E6%85%88%E6%AC%A3%EF%BC%9A%E7%A7%91%E5%B9%BB%E4%B8%8D%E5%BA%94%E6%8A%8A%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E5%A6%96%E9%AD%94%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252825.htm&amp;t=%E5%88%98%E6%85%88%E6%AC%A3%EF%BC%9A%E7%A7%91%E5%B9%BB%E4%B8%8D%E5%BA%94%E6%8A%8A%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E5%A6%96%E9%AD%94%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252825.htm&amp;t=%E5%88%98%E6%85%88%E6%AC%A3%EF%BC%9A%E7%A7%91%E5%B9%BB%E4%B8%8D%E5%BA%94%E6%8A%8A%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E5%A6%96%E9%AD%94%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252825.htm&amp;t=%E5%88%98%E6%85%88%E6%AC%A3%EF%BC%9A%E7%A7%91%E5%B9%BB%E4%B8%8D%E5%BA%94%E6%8A%8A%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E5%A6%96%E9%AD%94%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953799769/u/47/f/624776/c/34306/s/31448d19/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953799769/u/47/f/624776/c/34306/s/31448d19/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953799769/u/47/f/624776/c/34306/s/31448d19/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T00:19:07+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252824.htm">
	<title>cnBeta.COM: 索尼外挂镜头相机接受预定 售价1699元起</title>
	<link>http://www.cnbeta.com/articles/252824.htm</link>
	<content:encoded>&lt;p&gt;索尼镜头相机QX100和QX10相信是不少人期待的对象，而它们的行货价格自然也是备受关注。&lt;strong&gt;日前，在微博上已经爆出了这两款镜头相机开启预售的消息，而销售价格则分别为人民币3499元和1699元，相比港行版本要稍微贵一些，预计在十月中旬正式发售。&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31448d18/sc/17/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252824.htm&amp;t=%E7%B4%A2%E5%B0%BC%E5%A4%96%E6%8C%82%E9%95%9C%E5%A4%B4%E7%9B%B8%E6%9C%BA%E6%8E%A5%E5%8F%97%E9%A2%84%E5%AE%9A+%E5%94%AE%E4%BB%B71699%E5%85%83%E8%B5%B7&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252824.htm&amp;t=%E7%B4%A2%E5%B0%BC%E5%A4%96%E6%8C%82%E9%95%9C%E5%A4%B4%E7%9B%B8%E6%9C%BA%E6%8E%A5%E5%8F%97%E9%A2%84%E5%AE%9A+%E5%94%AE%E4%BB%B71699%E5%85%83%E8%B5%B7&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252824.htm&amp;t=%E7%B4%A2%E5%B0%BC%E5%A4%96%E6%8C%82%E9%95%9C%E5%A4%B4%E7%9B%B8%E6%9C%BA%E6%8E%A5%E5%8F%97%E9%A2%84%E5%AE%9A+%E5%94%AE%E4%BB%B71699%E5%85%83%E8%B5%B7&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252824.htm&amp;t=%E7%B4%A2%E5%B0%BC%E5%A4%96%E6%8C%82%E9%95%9C%E5%A4%B4%E7%9B%B8%E6%9C%BA%E6%8E%A5%E5%8F%97%E9%A2%84%E5%AE%9A+%E5%94%AE%E4%BB%B71699%E5%85%83%E8%B5%B7&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252824.htm&amp;t=%E7%B4%A2%E5%B0%BC%E5%A4%96%E6%8C%82%E9%95%9C%E5%A4%B4%E7%9B%B8%E6%9C%BA%E6%8E%A5%E5%8F%97%E9%A2%84%E5%AE%9A+%E5%94%AE%E4%BB%B71699%E5%85%83%E8%B5%B7&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953799768/u/47/f/624776/c/34306/s/31448d18/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953799768/u/47/f/624776/c/34306/s/31448d18/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953799768/u/47/f/624776/c/34306/s/31448d18/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T00:16:38+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252823.htm">
	<title>cnBeta.COM: 国行双卡版Note 3曝光 搭载高通800处理器</title>
	<link>http://www.cnbeta.com/articles/252823.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;考虑到双卡双待的中国特色，因此三星推出双卡版Galaxy Note 3也符合预期，而这款机型即将以SM-N9002的型号在中国市场上市。&lt;/strong&gt;从曝光的双卡版Galaxy Note 3的跑分截图来看，这款机型将也将搭载高通Snapdragon 800四核处理器，每颗处理核心将采用Krait 400架构，主频高达2.3GHz，图形处理器方面将使用Adreno 330 GPU。虽然31276分的安兔兔跑分成绩要比普通版Galaxy Note 3略低一些，但是由于双卡版的固件还未最终定案，因此现在从跑分成绩来比较性能还有些为时尚早。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31448d16/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252823.htm&amp;t=%E5%9B%BD%E8%A1%8C%E5%8F%8C%E5%8D%A1%E7%89%88Note+3%E6%9B%9D%E5%85%89+%E6%90%AD%E8%BD%BD%E9%AB%98%E9%80%9A800%E5%A4%84%E7%90%86%E5%99%A8&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252823.htm&amp;t=%E5%9B%BD%E8%A1%8C%E5%8F%8C%E5%8D%A1%E7%89%88Note+3%E6%9B%9D%E5%85%89+%E6%90%AD%E8%BD%BD%E9%AB%98%E9%80%9A800%E5%A4%84%E7%90%86%E5%99%A8&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252823.htm&amp;t=%E5%9B%BD%E8%A1%8C%E5%8F%8C%E5%8D%A1%E7%89%88Note+3%E6%9B%9D%E5%85%89+%E6%90%AD%E8%BD%BD%E9%AB%98%E9%80%9A800%E5%A4%84%E7%90%86%E5%99%A8&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252823.htm&amp;t=%E5%9B%BD%E8%A1%8C%E5%8F%8C%E5%8D%A1%E7%89%88Note+3%E6%9B%9D%E5%85%89+%E6%90%AD%E8%BD%BD%E9%AB%98%E9%80%9A800%E5%A4%84%E7%90%86%E5%99%A8&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252823.htm&amp;t=%E5%9B%BD%E8%A1%8C%E5%8F%8C%E5%8D%A1%E7%89%88Note+3%E6%9B%9D%E5%85%89+%E6%90%AD%E8%BD%BD%E9%AB%98%E9%80%9A800%E5%A4%84%E7%90%86%E5%99%A8&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953799767/u/47/f/624776/c/34306/s/31448d16/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953799767/u/47/f/624776/c/34306/s/31448d16/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953799767/u/47/f/624776/c/34306/s/31448d16/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T00:15:49+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252822.htm">
	<title>cnBeta.COM: 微软试图解决Outlook.com遇到的IMAP支持问题</title>
	<link>http://www.cnbeta.com/articles/252822.htm</link>
	<content:encoded>&lt;p&gt; &lt;strong&gt;微软终于在几天前为Outlook.com带来了人们期待已久的IMAP邮件协议支持，但对某些用户来说，新功能的bug显然还有些恼人，并且已经在官方的Office博客上贴出了他们遇到的问题。&lt;/strong&gt;大多数用户抱怨到，他们无法用基于IMAP的邮件客户端连接至Outlook.com，比如Mac Mail和Linux版本的Thunderbird。&lt;br /&gt; &lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31448d14/sc/28/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252822.htm&amp;t=%E5%BE%AE%E8%BD%AF%E8%AF%95%E5%9B%BE%E8%A7%A3%E5%86%B3Outlook.com%E9%81%87%E5%88%B0%E7%9A%84IMAP%E6%94%AF%E6%8C%81%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252822.htm&amp;t=%E5%BE%AE%E8%BD%AF%E8%AF%95%E5%9B%BE%E8%A7%A3%E5%86%B3Outlook.com%E9%81%87%E5%88%B0%E7%9A%84IMAP%E6%94%AF%E6%8C%81%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252822.htm&amp;t=%E5%BE%AE%E8%BD%AF%E8%AF%95%E5%9B%BE%E8%A7%A3%E5%86%B3Outlook.com%E9%81%87%E5%88%B0%E7%9A%84IMAP%E6%94%AF%E6%8C%81%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252822.htm&amp;t=%E5%BE%AE%E8%BD%AF%E8%AF%95%E5%9B%BE%E8%A7%A3%E5%86%B3Outlook.com%E9%81%87%E5%88%B0%E7%9A%84IMAP%E6%94%AF%E6%8C%81%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252822.htm&amp;t=%E5%BE%AE%E8%BD%AF%E8%AF%95%E5%9B%BE%E8%A7%A3%E5%86%B3Outlook.com%E9%81%87%E5%88%B0%E7%9A%84IMAP%E6%94%AF%E6%8C%81%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953799766/u/47/f/624776/c/34306/s/31448d14/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953799766/u/47/f/624776/c/34306/s/31448d14/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953799766/u/47/f/624776/c/34306/s/31448d14/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T00:14:43+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252821.htm">
	<title>cnBeta.COM: HTC One新固件将修复弱光拍摄光线问题</title>
	<link>http://www.cnbeta.com/articles/252821.htm</link>
	<content:encoded>&lt;p&gt;HTC One自发布以来，其搭载的UltraPixels超像素摄像头就一直是最大的卖点之一。&lt;strong&gt;不过现在不少用户受到这款摄像头在弱光环境下拍摄出现问题所困扰。日前HTC官方终于承认问题的存在，并且承若在未来的软件版本—也就是Android 4.3中做出解决。&lt;/strong&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31448d12/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252821.htm&amp;t=HTC+One%E6%96%B0%E5%9B%BA%E4%BB%B6%E5%B0%86%E4%BF%AE%E5%A4%8D%E5%BC%B1%E5%85%89%E6%8B%8D%E6%91%84%E5%85%89%E7%BA%BF%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252821.htm&amp;t=HTC+One%E6%96%B0%E5%9B%BA%E4%BB%B6%E5%B0%86%E4%BF%AE%E5%A4%8D%E5%BC%B1%E5%85%89%E6%8B%8D%E6%91%84%E5%85%89%E7%BA%BF%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252821.htm&amp;t=HTC+One%E6%96%B0%E5%9B%BA%E4%BB%B6%E5%B0%86%E4%BF%AE%E5%A4%8D%E5%BC%B1%E5%85%89%E6%8B%8D%E6%91%84%E5%85%89%E7%BA%BF%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252821.htm&amp;t=HTC+One%E6%96%B0%E5%9B%BA%E4%BB%B6%E5%B0%86%E4%BF%AE%E5%A4%8D%E5%BC%B1%E5%85%89%E6%8B%8D%E6%91%84%E5%85%89%E7%BA%BF%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252821.htm&amp;t=HTC+One%E6%96%B0%E5%9B%BA%E4%BB%B6%E5%B0%86%E4%BF%AE%E5%A4%8D%E5%BC%B1%E5%85%89%E6%8B%8D%E6%91%84%E5%85%89%E7%BA%BF%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173953799765/u/47/f/624776/c/34306/s/31448d12/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173953799765/u/47/f/624776/c/34306/s/31448d12/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173953799765/u/47/f/624776/c/34306/s/31448d12/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-16T00:14:01+00:00</dc:date>
</item>
<item rdf:about="http://www.cnblogs.com/baihmpgy/p/3323565.html">
	<title>博客园_首页: 架构讨论：关于“弦哥”对“粗”与“插”的架构总结及我的“插件化”观 - 道法自然</title>
	<link>http://www.cnblogs.com/baihmpgy/p/3323565.html</link>
	<content:encoded>&lt;p class=&quot;First&quot;&gt;1 引言&lt;/p&gt;&lt;p&gt;去年6月，&amp;ldquo;弦哥&amp;rdquo;在博客园搞了一个架构分享评奖讨论&amp;mdash;&amp;mdash;《&lt;a href=&quot;http://www.cnblogs.com/legendxian/archive/2012/06/18/2553111.html&quot;&gt;.Net项目分层与文件夹结构大全(最佳架子奖,吐槽奖,阴沟翻船奖揭晓)&lt;/a&gt;》，并在评奖完了之后，发表了一个总结&amp;mdash;&amp;mdash;《&lt;a href=&quot;http://www.cnblogs.com/legendxian/archive/2012/06/20/2554740.html&quot;&gt;弦哥杯.Net搭架子大赛总结&lt;/a&gt;》，弦哥之后还发表了另一篇文章&amp;mdash;&amp;mdash;《&lt;a href=&quot;http://www.cnblogs.com/legendxian/archive/2013/08/13/3255002.html&quot;&gt;对面向接口编程、按分层建项目的反思和新的分层结构思路&lt;/a&gt;》。这几篇文章我个人觉得非常的有益，也很有意思。软件架构已经发展多年了，多层软件设计一直是主流，在一个解决方案中搞几十个甚至上百个的项目也不是少数，特别是企业级应用，弦哥的文章给了大家关于架构的分享与交流。在我说的第二篇文章，&amp;ldquo;弦哥&amp;rdquo;语言风格堪称&amp;ldquo;很黄很暴力&amp;rdquo;，幽默犀利，甚至讽刺起人来都不带脏，显得特有文化，由此也可以看出技术男都很有才且很多是&amp;ldquo;闷骚型&amp;rdquo;的，我没有多少文化，不过，我也觉得我也是有点&amp;ldquo;闷骚&amp;rdquo;的。对于&amp;ldquo;总结&amp;rdquo;这篇文章，我老是忍不住要去对个位，好像&amp;ldquo;弦哥&amp;rdquo;的&amp;ldquo;粗&amp;rdquo;与&amp;ldquo;插&amp;rdquo;、&amp;ldquo;道&amp;rdquo;总和我本人&amp;mdash;&amp;mdash;&amp;ldquo;道法自然&amp;rdquo;所推崇的&amp;ldquo;插件化&amp;rdquo;开发方法有所关联。不过，我这里不想去反驳弦哥在这片文章的描述，主要是我实在干不过弦哥，哈哈。在这里，我想接着弦哥提出的很好的话题进行延展，谈一谈弦哥的总结及其结论依据和我的观点。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;First&quot;&gt;2 弦哥语录及其点评的获奖架子&lt;/p&gt;&lt;p&gt;=================以下言论抄自弦哥，产权属于弦哥本人======================&lt;/p&gt;&lt;p&gt;（1）最佳架子奖：&amp;nbsp; 圣殿骑士！！！&lt;/p&gt;&lt;p&gt;评选理由：&lt;/p&gt;&lt;p&gt;老油条了，没啥好说的....分层的描述很准确。&lt;/p&gt;&lt;p&gt;特别是WebModel(ViewModel)的理解和描述很到位，避免了搞ViewModel的设计过渡之嫌，如果你有设计ViewModel的话....&lt;/p&gt;&lt;p&gt;可惜缺乏对数据访问层的描述，不知道会不会阴沟里翻船...&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/47784/2012061815375564.jpg&quot; alt=&quot;&quot; width=&quot;290&quot; height=&quot;480&quot; /&gt;&lt;/p&gt;&lt;p&gt;（2）阴沟翻船奖 Artech&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnblogs.com/cnblogs_com/artech/158198/o_Layers.png&quot; alt=&quot;&quot; width=&quot;453&quot; height=&quot;620&quot; /&gt;&lt;/p&gt;&lt;p&gt;弦哥点评：Artech算是园子里的大佬，貌似还出了书，不过发的这个架子有点出乎我意料，存在有一些值得商榷的问题： &lt;br /&gt;1.从架子中的命名和大体结构明显看出是走的DDD,在DDD中数据访问的具体实现(就是夹子里的DataAccess)应该是放在基础设施层（就是夹子里的Infrastructure），而Artech却貌似只把Infrastructure作为了&quot;非功能性需求&quot;的Framework去用。并把Infrastructure叫&amp;ldquo;非业务模块&amp;rdquo;，显得有些外行....     &lt;br /&gt;2.Products.BusinessComponent业务逻辑层 直接引用了Products.DataAccess，这也是个严重的问题，如果DataAccess是没有接口的，那么业务逻辑层依赖数据访问层，在DDD和马丁大叔的企业架构设计中，是一个反模式！！！，如果DataAccess里有接口，那么，DataAccess的接口应该是放在业务逻辑层的，然后通过依赖反转去用，而DataAccess的具体实现是放在Infrastructure里的。     &lt;br /&gt;3.如果没有用WCF，那么我认可可以省略掉DTO，但架子里上的WCF,还把DTO和PO合二为一，这个我非常不赞同。     &lt;br /&gt;4.Products层和Products.BusinessComponent层边界不清晰，按Artech描述 ，两个层里都可以放业务逻辑，但描述的模棱两块。而且基本可以看出Products.BusinessEntity又还是失血模型，这个设计完全让人摸不着头脑。Products层我猜是有点DDD中Application层的意思，但Artech明显做的不对。     &lt;br /&gt;总之我感觉这个架子，装的成分比较大，思路十分不清晰，命名很不规范，有失水准。&lt;/p&gt;&lt;p&gt;=================以上言论抄自弦哥，产权属于弦哥本人======================&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;弦哥的评奖结果，我个人很认可，这两位技术大佬大家都很熟悉，要是不知道这两位老大，我觉得都不好意思在博客园里面混了。他们的架构都是典型的分层体系结构，他们的架构代表了博客园技术界的顶尖水平（没见老赵的分享，我觉得很是遗憾，老赵也是顶尖的技术闷骚男了）。从名字看，这两个架子好像都是电子商务相关的项目，一个是&amp;ldquo;HP&amp;rdquo;商店，另一个是Video商店，看来&amp;ldquo;电商&amp;rdquo;这么火爆是很有道理的。我想这样的项目也必然是一个团队来开发的，不同的人负责不同的功能模块。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;后面，弦哥也写了一篇总结，这篇总结很好看，&amp;ldquo;很黄很暴力&amp;rdquo;，弦哥的文化水平之高与之闷骚可见一斑。下面我抄一些弦哥的原话。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;=================以下言论抄自弦哥，产权属于弦哥本人======================&lt;/p&gt;&lt;p&gt;&amp;hellip;&amp;hellip;&lt;/p&gt;&lt;p&gt;复杂的东西是没有人会喜欢的，这也是理，但不能一概而论 。就像&amp;ldquo;大道至简&amp;rdquo;，也有很多人爱BB，而且BB的很爽，四字一出道袍都TM飘起来了...我们拿国学和西学的对比来说明这个问题：&lt;/p&gt;&lt;p&gt;&amp;hellip;&amp;hellip;&lt;/p&gt;&lt;p&gt;有时候太简单意味着太粗，看上去很好，但很多复杂场景你根本没考虑，全在理想状态下活着。细节决定成败，细节很繁琐很讨厌，但你无法屏蔽，你也无法给别人屏蔽....还真TM当自己是道长咋地～？&lt;/p&gt;&lt;p&gt;&amp;hellip;&amp;hellip;&lt;/p&gt;&lt;p&gt;&amp;ldquo;粗&amp;rdquo;和&amp;ldquo;插&amp;rdquo;都是男人喜欢的两个字眼，但真的万金油吗？近些年基于SOA的粗粒度服务思想和面向构件、插件的开发平台在大厂商的摇旗呐喊中大行其道。国内有些农民科学家见状也按耐不住，纷纷山寨，甚至披上国学的外衣装神弄鬼。简单的&amp;ldquo;插&amp;rdquo;不是不好，但要看情况，比如娇小的日本妞，基本问题不大，但电信、银行、医疗这些大行业系统就如俄罗斯姑娘，你那玩意儿就是牙签搅水桶，能好使吗？&lt;/p&gt;&lt;p&gt;=================以上言论抄自弦哥，产权属于弦哥本人======================&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;弦哥原文更精彩，一定要拜读！！！在这里，咱们先来看看两位大佬的架构。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;First&quot;&gt;3 从分层引出我推崇的&amp;rdquo;插件化架构观&amp;ldquo;&lt;/p&gt;&lt;p&gt;博客园这两位技术大佬圣殿骑士与Artech采用的分层有点类似，甚至构建了一些接口，用于层间解耦。在这种分层架构下，假设我们要实现3个功能，那么这三个功能的实现会在上面的不同项目中由不同的代码来提供。正如我在《&lt;a href=&quot;http://www.cnblogs.com/baihmpgy/archive/2013/09/06/3305215.html&quot;&gt;白话插件框架原理&lt;/a&gt;》描述的一样，这三个功能至少横跨了表示层、业务层、数据层等层次，这些层次都由不同的项目来实现。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/06123154-64f7e065f07748e68b8f870d632254f7.png&quot;&gt;&lt;img title=&quot;6&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/06123154-e1957487ddc040bd89de0a92c71c9e08.png&quot; alt=&quot;6&quot; width=&quot;443&quot; height=&quot;295&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;下面看看PetShop的Product功能的实现，Petshop的架构如下图所示，由很多项目组成，各个层次使用至少一个项目来组织代码。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/06123155-e3c800490cd64880a063e2b57694cb58.png&quot;&gt;&lt;img title=&quot;7&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/06123155-ee98364aacc344cfb3643a5755c5e1d5.png&quot; alt=&quot;7&quot; width=&quot;277&quot; height=&quot;364&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;其中Product功能在Web、BLL、DALFactory、OracleDAL等项目中含有各个层次实现的代码。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/06123156-5006d132f8b647c4bb4d3defb5ddb8a3.png&quot;&gt;&lt;img title=&quot;8&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/06123157-1fee5e6fb8a7421a99f29fd5cdf95730.png&quot; alt=&quot;8&quot; width=&quot;530&quot; height=&quot;304&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这种基于分层的架构设计，已经是架构的一大进步，但是会有什么问题呢？我们设想一下，假设这样的项目是由多个人来开发的那么：&lt;/p&gt;&lt;p&gt;（1）团队里面所有的人，都要下载到这样的代码，你开发一个功能的时候，需要先学习，然后根据架构师知道，跨越不同的项目添加这个功能需要的界面、业务逻辑、数据访问等代码，当然，还有相应的接口；&lt;/p&gt;&lt;p&gt;（2）团队不同成员开发完成后，都需要提交相应的代码，然后大家一起将所作的功能集成起来，这个集成可能会从头做最后；&lt;/p&gt;&lt;p&gt;（3）实现一个简单的功能，也必须遵循这样的架构，从界面、业务逻辑、数据访问等，甚至接口 + 实现层次，没有伸缩性；&lt;/p&gt;&lt;p&gt;（4）不同成员的代码可能交织在一起，出了问题甚至还不知道到底是谁干的；&lt;/p&gt;&lt;p&gt;（5）有一部分层次，可能存在每一个人都会修改同一个文件的代码，比如主界面，这时候代码的集成、版本控制、合并就更加麻烦了；&lt;/p&gt;&lt;p&gt;（6）如果让一个新人来开发功能，你有没有觉得入门很难，感觉整个解决方案很复杂？&lt;/p&gt;&lt;p&gt;（7）后期维护呢，你怎么知道层间这些代码的依赖关系，你更改了会影响到其它功能，其它层次吗？&lt;/p&gt;&lt;p&gt;（8）当我们只需要开发一个功能的时候，为什么需要下载所有的代码？为什么每个人都有所有代码的访问权限？&lt;/p&gt;&lt;p&gt;（9）如果一个功能在每一个层间，考虑了解耦，还大量使用了接口，这对调试、代码定位，不更麻烦了吗？（这点，弦哥在后面的一片文章也描述到了：《&lt;a href=&quot;http://www.cnblogs.com/legendxian/archive/2013/08/13/3255002.html&quot;&gt;对面向接口编程、按分层建项目的反思和新的分层结构思路&lt;/a&gt;》）。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;以上这些问题，估计弦哥也发现了，他在后面也特意发表了这篇文章《&lt;a href=&quot;http://www.cnblogs.com/legendxian/archive/2013/08/13/3255002.html&quot;&gt;对面向接口编程、按分层建项目的反思和新的分层结构思路&lt;/a&gt;》，我对里面所描述的思路非常的赞同。弦哥考虑以后一个模块就一个文件夹，里面包含这个模块所有的东西（FYI：我所提倡的插件化其实与之非常吻合，：），如果你用OSGi.NET插件框架开发MVC应用，那将与以下的解决方案几乎类似了，甚至更简洁），另外，也不整那么多的接口，因为没有意义。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/105634/201308/13142626-e4af7606ccaf4d788a41aa1a6ea37f64.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;弦哥对自己新架构的评价如下：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&amp;ldquo;整个视野非常干净，你可以集中精力干你自己的事了！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;接下来我们看看新框架整体的结构，只有三个项目！！！&amp;rdquo;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;好了，下面我想来谈谈我的&amp;ldquo;插件化架构观&amp;ldquo;。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;上面我已经提到了分层及其存在的一些问题，这样的问题随着项目越发复杂，其问题就越发明显。我本人从2006年开始就在思索，对于一个稍微大点、负责的项目，该如何更好的把一帮人协作起来，让他们来一起又快又简单的实现一个项目。2006年我们有一个项目，9个人来参与，需要干1年，从需求分析到功能实现、测试与维护，把这么多人组织起来用这么长的时间，有什么好方法？如果用传统的分层，那就需要把所有人的工作都混在一起，我非常厌倦这种不同的人将代码写在一块，需要不停整合不停交付，不停交付，不停测试，对我来说，一想到后面这种协作方式，我烦透了！&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;我觉得更好的方法是，每一个人都可以只关注直接的功能实现，每一个人都可以独立的来进行开发，每一个人可以采用更合适的架构，每一个人都可以保持简单！！也就是说，如果有一套方法，使得每一个人可以直接切入到自己需要实现的需求，那么这可能是最简单省事的，他不用关心界面、不用关心其他人开发方式、不用关心通用功能、不用管集成、不用遵循一堆接口，在我的功能里面，怎么简单就怎么来，N层？不，如果简单的话，我用一层就实现，不行就两层、三层，什么面向接口、什么IoC，通通说不，因为没有必要，在这个功能实现里面，不需要考虑太多扩展，不需要考虑太多复用，一切按照需要的来做，不用遵守一堆的约束。总而言之，我对现有的方式已经烦透了，因为我特别懒，我就想简单快速的实现，然后能快快的涨工资，快快的拿到项目奖金！！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;下面，我们来看一下，如果使用插件化以后，假设还是实现3个功能，那么此时，整个系统就变成由一对插件组成的应用了。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/06123157-c2d9a0bd831b45949996795477f34279.png&quot;&gt;&lt;img title=&quot;9&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/06123157-d4b0eeac47594c13bfe71ee56037f1c9.png&quot; alt=&quot;9&quot; width=&quot;418&quot; height=&quot;332&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;每一个插件均独立实现，它在自己的插件项目里面实现了界面、业务逻辑和数据访问，在开发测试过程中，只需要自己的项目。可以根据需要来进行分层，视角就非常的清晰了。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/06123158-a17721ec143b4f70a06e4584badaf6b8.png&quot;&gt;&lt;img title=&quot;10&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/06123159-48d8d39150774e15a4229e037d2811dc.png&quot; alt=&quot;10&quot; width=&quot;500&quot; height=&quot;304&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;如果组织得更好，不同的插件可以放到不同的解决方案中，比如如下解决方案是由程序猿A开发的功能。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/06123203-5ce598902ee443029330dd220e132dfa.png&quot;&gt;&lt;img title=&quot;14&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/06123205-f6d3a37558de4b5887edcf83b3be9a5a.png&quot; alt=&quot;14&quot; width=&quot;562&quot; height=&quot;362&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;如下解决方案是由程序猿B开发的功能。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/06123207-1dc4883a9ddf40a1b8048d07123bf6a6.png&quot;&gt;&lt;img title=&quot;16&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/06123210-28ef315a684844a69691cfda081e01c8.png&quot; alt=&quot;16&quot; width=&quot;576&quot; height=&quot;371&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这两个程序猿开发完成后，可以直接组装在一起就变成如下的软件了。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/06123200-9c727597bb2a4c04ab9184389e32cfed.png&quot;&gt;&lt;img title=&quot;11&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/06123201-fad054426ce34f3f8ecbdd34087c69f0.png&quot; alt=&quot;11&quot; width=&quot;454&quot; height=&quot;304&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;First&quot;&gt;4 插件化与分层的简单对比&lt;/p&gt;&lt;p&gt;从上面的文字，估计你已经能够知道二者的区别了，我这里简单用功能A、B、C的实现来说说二者区别：&lt;/p&gt;&lt;p&gt;（1）在分层，一个功能，比如功能A，在实现中，需要同时跨越多个项目；在插件化，一个功能在一个插件项目中实现，一个插件项目里面直接包含了相关的所有代码；&lt;/p&gt;&lt;p&gt;（2）在分层，所有人都需要下载到复杂的代码；在插件化，每一个人只需要下载自己实现的那一部分代码，非常的简单与清晰；&lt;/p&gt;&lt;p&gt;（3）在分层，大家的代码都放在一起，需要不停的集成；在插件化，每一个人的代码都与另一个人的代码互相隔离，互不相干；&lt;/p&gt;&lt;p&gt;（4）在分层，每次发布都需要进行合并集成，可能需要更改代码；在插件化，集成几乎可以在几秒内完成，大家独立开发、测试、发布，只需要将每一个人发布的项目拷贝到插件目录就集成好了；&lt;/p&gt;&lt;p&gt;（5）在分层，每一个人都需要遵循层次划分方法，不管功能简单与复杂，都需要整那么多的层次；在插件化，每一个功能可以按照复杂度来处理，什么N层、面向接口、IoC，我们可以说不，可以用1层、2层或者3层。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;从这些文字你可以看出了，插件化拥有很强的吸引力，但是，为什么我们很难在实际项目中来使用插件化呢？下面，我想针对这个问题做个描述&amp;mdash;&amp;mdash;那就是关于插件化的误区。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;First&quot;&gt;5 插件化误用及我认为理想的插件化框架&lt;/p&gt;&lt;p&gt;使我们开发协作过程保持简单是我不停的思索更好方法来协作开发的原因。插件化（或者模块化）的架构是目前最好的选择了。不过，一开始，我是自己根据自己的理论来设计插件框架的，当自己设计插件框架的时候，我总是逃脱不了传统的插件化方法，那就是整个插件接口，插件实现就必须使用这个接口，如果有什么很多功能是，甚至这个接口需要不停改变，这是插件也需要不停的适应。这种拥有过多约束的插件化框架在一定程度改善了分层架构的缺陷，但是却带来了下面的问题：（1）接口的定义影响系统的适应性；（2）插件框架带来了额外的约束，使得其他人在开发时需要不停与插件框架API打交道。这让其他人痛苦不堪。我想，关于插件化的方法，很多人也估计有碰到这样的问题，并且深有同感。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;那么，有什么更好的方法可以既改善分层的缺陷，又能避免上述&amp;rdquo;插件化&amp;ldquo;问题吗？我的观点是，插件化思想是很好的架构，如果你使用插件化并碰到上述的两个问题，那么一定是误用了插件化了。下面我来介绍一下插件化的误用及我的插件化架构思想。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;纵观目前国内外，好像在.NET界还很少有成熟的插件框架解决方案（当然，我们的OSGi.NET插件框架除外，这框架是完全免费开放的，商用也不限制，只是苦于我们现在需要挣钱，暂时无法完全开源，请谅解，：），需要的同学可以从 &lt;a href=&quot;http://www.iopenworks.com/&quot;&gt;http://www.iopenworks.com/&lt;/a&gt; 这个网站下载）。很多人也特别痛恨各类框架，这些框架并没有很好的解决我们面临的问题，却带来更多的约束、学习成本和维护成本。这让我们对框架有很多负面的想法，特别当我们只是一个小程序员时，我们更关注的是如何快速来实现功能，我们可能理解不了框架设计者和架构师的所谓框架。传统的插件框架都基本摆脱不了以下的&amp;rdquo;行规&amp;ldquo;，因为很多书本和理论也是这么写的，这些&amp;rdquo;行规&amp;ldquo;突出了：&lt;/p&gt;&lt;p&gt;（1）插件框架是高深的技术，比如&amp;rdquo;热插拔&amp;ldquo;，这种观点强调的是技术本身，这项技术有多么先进，有多么强的可扩展性等；&lt;/p&gt;&lt;p&gt;（2）插件框架基本都与一些界面绑定起来，要使用插件框架就需要学习如何使用界面，要接受这套界面风格样式，当然这也为插件框架的复杂性带来了影响，使设计插件框架时需要来考虑各种各样的界面；&lt;/p&gt;&lt;p&gt;（3）插件框架本身实现了一堆功能，通过API说明书，来学会使用它们，并进行调用；&lt;/p&gt;&lt;p&gt;（4）插件框架在开发维护过程中，由于带来了很强的侵略性，使我们的插件需要严重依赖于框架本身，这既带来了复杂性，也随着插件框架的不稳定性带来更多负面的影响；&lt;/p&gt;&lt;p&gt;（5）插件框架设计的合理与否，关系到其他人是否可以接受并使用。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;现在，我们再来看看那弦哥提出的&amp;rdquo;粗&amp;ldquo;与&amp;rdquo;插&amp;ldquo;的观点，可能也是由这些问题引起的，我们再来回顾一下弦哥精彩言论。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;=================以下言论抄自弦哥，产权属于弦哥本人======================&lt;/p&gt;&lt;p&gt;&amp;ldquo;粗&amp;rdquo;和&amp;ldquo;插&amp;rdquo;都是男人喜欢的两个字眼，但真的万金油吗？近些年基于SOA的粗粒度服务思想和面向构件、插件的开发平台在大厂商的摇旗呐喊中大行其道。国内有些农民科学家见状也按耐不住，纷纷山寨，甚至披上国学的外衣装神弄鬼。简单的&amp;ldquo;插&amp;rdquo;不是不好，但要看情况，比如娇小的日本妞，基本问题不大，但电信、银行、医疗这些大行业系统就如俄罗斯姑娘，你那玩意儿就是牙签搅水桶，能好使吗？&lt;/p&gt;&lt;p&gt;=================以上言论抄自弦哥，产权属于弦哥本人======================&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;起初我很难理解为什么弦哥会觉得电信、医疗等大行业系统，采用插件化无法满足，并觉得&amp;rdquo;插&amp;ldquo;太细了，这些&amp;rdquo;大姑娘&amp;ldquo;没有办法被很好的满足。因为，从我的角度，插件化（或者模块化）最初就是在复杂领域中应用的，你看主流的IDE（Eclipse使用OSGi插件化规范构建、Visual Studio使用MAF/MEF框架构建、SharpDevelop使用SD内核、MonoDevelop使用Mono.Addins插件内核）等很多复杂软件，基本都是使用插件化构建的，我真不认为插件化无法满足这些行业&amp;rdquo;大姑娘&amp;ldquo;。看来，阻碍我们接受插件化架构方法，是因为传统的&amp;rdquo;行规&amp;ldquo;引起的，我们学习到的&amp;rdquo;插件化&amp;ldquo;太过于强调技术本身，并且设计的初衷可能是为了追求&amp;rdquo;热插拔很酷&amp;ldquo;这一说，从而让弦哥和咱们这样的码农的厌烦。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;那么，谈到这，我不得不描述一下我的插件化观。&lt;/p&gt;&lt;p&gt;（1）插件化不是复杂高深的技术，不是为了强调技术先进性，要解决的是如何实现隔离的模块化开发，使每一个人都独立、简单、并行；&lt;/p&gt;&lt;p&gt;（2）插件化必须要保持简单，我们只是想获取到模块化的优势，不是为了整个什么高深的技术，因此，需要很快的就学会如何来开发；&lt;/p&gt;&lt;p&gt;（3）插件化必须没有侵入性，开发插件时，我们不需要与插件框架打交道，不需要了解插件框架的技术原理和细节，不需要掌握插件框架API，我们可以使用传统的开发方式来快快的开发一个插件，实现我们的功能；&lt;/p&gt;&lt;p&gt;（4）插件框架不应该与界面绑定一起，也就是说，插件框架内核必须保持简单，只需要提供插件的隔离与组装、插件通讯和扩展，不应该附带实现一个界面。插件框架附带界面实现，是传统的方法，但是这也给我们带来了强制的约束，是我们在开发设计中都必须遵循，很烦；&lt;/p&gt;&lt;p&gt;（5）插件框架可以适用任何应用，这样，我们可以在所有的应用类型中使用统一的规范，减少成本。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;如果用简单的一句话，我想说的是&lt;span&gt;&lt;strong&gt;理想的插件化框架应该使我们少加班多挣钱&lt;/strong&gt;&lt;/span&gt;，稍微技术一点的说法应该是：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;插件框架只是实现了我们要的模块化思想，解决了分层架构下的团队协作缺陷，使每一个功能的实现更加的独立，但不要附带任何约束。凡是过多约束的插件框架都不会被我们这帮懒惰的程序猿接受。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;本文就到此结束了，希望大家能够热烈的参与架构讨论，分享自己的架构心得、对插件化架构的考虑，后面可以请弦哥再用很犀利的语言为我们评奖，当然，我也建议弦哥再举办一次这样的大赛。这样在博客园Dudu的带领下，我们可以早日有一个更加优越的方法，使得我们能够成为真正的IT白领，能够真正进入&amp;rdquo;嫁人就嫁程序猿&amp;ldquo;的理想社会，实现&amp;rdquo;程序猿崛起&amp;ldquo;！：）&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/292351/201302/02195352-4962a2264f344b36af162d54db6a6db3.jpg&quot; alt=&quot;&quot; width=&quot;507&quot; height=&quot;687&quot; /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;附：插件化应用系统分享。&lt;/p&gt;&lt;p&gt;我们来看一下一个插件化应用系统，这是一个大型公建能耗采集分析平台。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/16080226-16c6a4e1c2f04f76ad35f129ea1c0e60.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/16080227-cea855e0b8654f559fe07f65a67eeed4.png&quot; alt=&quot;image&quot; width=&quot;509&quot; height=&quot;242&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;系统架构如下所示，这是一个分布式系统。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/16080227-fa3b1fd811d14ceb876f6975cd91d775.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/16080228-cd357deafa114b0e8baf74ad3f45bedd.png&quot; alt=&quot;image&quot; width=&quot;502&quot; height=&quot;355&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Web分析平台项目结构如下所示，共16个插件，9个是新定义，其余为复用，另外新定义的数据模型插件在其它程序中共享。这里有7个应用插件，每一个插件都独立实现一部分功能，由不同的开发人员来独立实现，开发中不需要关心界面、数据库访问、权限等通用功能，这些由历史项目积累下来，直接重用。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/16080231-55c1606676454f9a927858b067bea182.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/16080233-056bc1efb47e4ce68cee04fc2060d2fc.png&quot; alt=&quot;image&quot; width=&quot;521&quot; height=&quot;319&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/16080234-c2fb0cb488be4698910c2fc4e7aef216.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/16080237-172772d8b2014a59ac306fbea7bc780f.png&quot; alt=&quot;image&quot; width=&quot;576&quot; height=&quot;376&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;GPRS通讯服务器项目如下所示，12个插件，2个是新定义，其余为复用；数据模型等插件与Web平台共享。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/16080239-2d66e3a1b30a472abeb34ee6f48515ac.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/16080239-cc1e9c6a923a4d1fb3f3cc8bf1481ad2.png&quot; alt=&quot;image&quot; width=&quot;412&quot; height=&quot;332&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/16080241-9bad825be8f34c408cfd592ae0580f9d.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/16080243-66f93b03f17549b9bfdaa5195179904d.png&quot; alt=&quot;image&quot; width=&quot;571&quot; height=&quot;372&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;配置管理工具项目如下所示。11个插件，2个是新定义，其余为复用；数据模型等插件与Web平台共享。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/16080244-4405cd2861264f8daaf4af1ccce0d594.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/16080244-64c2689a59d7421a9c9479176dcc78aa.png&quot; alt=&quot;image&quot; width=&quot;458&quot; height=&quot;364&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/16080246-a627c5ae13004a1ab8d0a7c350c1b882.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/16080249-d939948fdf6f47fe9eff97d8b4f8c5d1.png&quot; alt=&quot;image&quot; width=&quot;574&quot; height=&quot;374&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;数据上报与接收系统项目如下所示。5个插件，1个是新定义，其余为复用；数据模型等插件与Web平台共享。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/16080251-e507f1bb828447ff81f6b5fe16e9fefd.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/16080253-f0b56314dc45473482b7d5877dc2d385.png&quot; alt=&quot;image&quot; width=&quot;572&quot; height=&quot;374&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;系统使用插件仓库来实现插件发布、管理、复用、组装、升级。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/16080254-865d42adb5ba42698e0d8f61acf55f1f.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/16080255-da01f6be1eb246a5b52aa3e2987c5c54.png&quot; alt=&quot;image&quot; width=&quot;515&quot; height=&quot;270&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;开发过程中，实现了&amp;ldquo;DevOps&amp;rdquo;。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/16080257-cd12fe13f12842e485d8d04ecb0571dd.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/16080258-c1899ee089954c57ada57a2540d66a9d.png&quot; alt=&quot;image&quot; width=&quot;503&quot; height=&quot;256&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;集成测试部署时，只需要简单通过下载安装或者直接下载升级即可。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/06123221-a6abd2fd3d9f46ee8f48dec3b894499d.png&quot;&gt;&lt;img title=&quot;23&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/06123221-81b670c978144c9e8ef075910c56ddc3.png&quot; alt=&quot;23&quot; width=&quot;452&quot; height=&quot;303&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;下载安装组装后，就是如下的效果了，它很快就实现两个开发人员功能的集成了。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://images.cnitblog.com/blog/21322/201309/06123200-9c727597bb2a4c04ab9184389e32cfed.png&quot;&gt;&lt;img title=&quot;11&quot; src=&quot;http://images.cnitblog.com/blog/21322/201309/06123201-fad054426ce34f3f8ecbdd34087c69f0.png&quot; alt=&quot;11&quot; width=&quot;478&quot; height=&quot;320&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;应用插件化开发成果如下：&lt;/p&gt;&lt;p&gt;&amp;bull;通过大量复用减少开发成本超过50%&lt;/p&gt;&lt;p&gt;&amp;bull;由4个程序构成，由5个人开发，历时1.5个月，已完成工作量超过70%&lt;/p&gt;&lt;p&gt;&amp;bull;系统间有大量可复用插件&lt;/p&gt;&lt;p&gt;&amp;bull;稳定集成与发布&lt;/p&gt;&lt;p&gt;&amp;bull;开发习惯一致，井井有条&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3323565&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/baihmpgy/p/3323565.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/baihmpgy/p/3323565.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-16T00:02:00+00:00</dc:date>
	<dc:creator>道法自然</dc:creator>
</item>
<item rdf:about="http://www.cnblogs.com/cmt/p/3323563.html">
	<title>博客园_首页: 上周热点回顾（9.9-9.15） - 博客园团队</title>
	<link>http://www.cnblogs.com/cmt/p/3323563.html</link>
	<content:encoded>&lt;p&gt;热点随笔：&lt;/p&gt;&lt;p&gt; &amp;middot; &lt;a href=&quot;http://www.cnblogs.com/xcj26/archive/2013/09/09/3305789.html&quot; target=&quot;_blank&quot;&gt;怎样玩转千万级别的数据&lt;/a&gt;（&lt;a href=&quot;http://www.cnblogs.com/xcj26/&quot; target=&quot;_blank&quot;&gt;Sam Xiao&lt;/a&gt;）&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://www.cnblogs.com/zuoxiaolong/archive/2013/09/11/life6.html&quot; target=&quot;_blank&quot;&gt;勤快的程序猿都没啥前途的，赶紧改掉你的坏毛病吧！&lt;/a&gt;（&lt;a href=&quot;http://www.cnblogs.com/zuoxiaolong/&quot; target=&quot;_blank&quot;&gt;左潇龙&lt;/a&gt;）&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://www.cnblogs.com/bfchuan/archive/2013/09/09/3309748.html&quot; target=&quot;_blank&quot;&gt;(原)马路中间站着程序员&lt;/a&gt;（&lt;a href=&quot;http://www.cnblogs.com/bfchuan/&quot; target=&quot;_blank&quot;&gt;桀骜天涯&lt;/a&gt;）&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://www.cnblogs.com/wxydigua/archive/2013/09/11/3314274.html&quot; target=&quot;_blank&quot;&gt;100个直接可以拿来用的JavaScript实用功能代码片段&lt;/a&gt;（&lt;a href=&quot;http://www.cnblogs.com/wxydigua/&quot; target=&quot;_blank&quot;&gt;远方的远方~&lt;/a&gt;）&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://www.cnblogs.com/heyuquan/archive/2013/09/10/webForms-vs-mvc.html&quot; target=&quot;_blank&quot;&gt;[译]WebForms vs. MVC&lt;/a&gt;（&lt;a href=&quot;http://www.cnblogs.com/heyuquan/&quot; target=&quot;_blank&quot;&gt;滴答的雨（何雨泉）&lt;/a&gt;）&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://www.cnblogs.com/zuoxiaolong/archive/2013/09/13/life7.html&quot; target=&quot;_blank&quot;&gt;用脑子写程序，鄙人就是这样完成一个需求的，您呢？&lt;/a&gt;（&lt;a href=&quot;http://www.cnblogs.com/zuoxiaolong/&quot; target=&quot;_blank&quot;&gt;左潇龙&lt;/a&gt;）&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://www.cnblogs.com/WeiGe/archive/2013/09/09/3310397.html&quot; target=&quot;_blank&quot;&gt;说说C#之父&amp;mdash;&amp;mdash;安德斯&amp;middot;海尔斯伯格&lt;/a&gt;（&lt;a href=&quot;http://www.cnblogs.com/WeiGe/&quot; target=&quot;_blank&quot;&gt;书洞里的猫&lt;/a&gt;）&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://www.cnblogs.com/01codeworld/archive/2013/09/13/3318431.html&quot; target=&quot;_blank&quot;&gt;写给那些对破解有偏执的人&lt;/a&gt;（&lt;a href=&quot;http://www.cnblogs.com/01codeworld/&quot; target=&quot;_blank&quot;&gt;Zengg&lt;/a&gt;）&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://www.cnblogs.com/jasondan/archive/2013/09/13/3319853.html&quot; target=&quot;_blank&quot;&gt;今天把骗子耍了一把&lt;/a&gt;（&lt;a href=&quot;http://www.cnblogs.com/jasondan/&quot; target=&quot;_blank&quot;&gt;翟士丹 Stan Zhai&lt;/a&gt;）&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://www.cnblogs.com/01codeworld/archive/2013/09/12/3316288.html&quot; target=&quot;_blank&quot;&gt;.NET P****** CMS 逆向工程&lt;/a&gt;（&lt;a href=&quot;http://www.cnblogs.com/01codeworld/&quot; target=&quot;_blank&quot;&gt;Zengg&lt;/a&gt;）&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://www.cnblogs.com/WeiGe/archive/2013/09/11/3315807.html&quot; target=&quot;_blank&quot;&gt;那些年我们追过的C#奇葩关键字&amp;mdash;&amp;mdash;忐忑&lt;/a&gt;（&lt;a href=&quot;http://www.cnblogs.com/WeiGe/&quot; target=&quot;_blank&quot;&gt;书洞里的猫&lt;/a&gt;）&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://www.cnblogs.com/xqin/archive/2013/09/09/3309115.html&quot; target=&quot;_blank&quot;&gt;我的权限系统设计实现MVC4 + WebAPI + EasyUI + Knockout（四）授权代码维护&lt;/a&gt;（&lt;a href=&quot;http://www.cnblogs.com/xqin/&quot; target=&quot;_blank&quot;&gt;萧秦&lt;/a&gt;）&lt;br /&gt;        &lt;/p&gt;&lt;p&gt;热点新闻：&lt;/p&gt;&lt;p&gt;        &amp;middot; &lt;a href=&quot;http://news.cnblogs.com/n/188049/&quot; target=&quot;_blank&quot;&gt;从事色情业的富士康女工：后悔没能早些做这个兼职&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://news.cnblogs.com/n/187774/&quot; target=&quot;_blank&quot;&gt;苹果发布会总结：iPhone 5C 售价不忍直视&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://news.cnblogs.com/n/187611/&quot; target=&quot;_blank&quot;&gt;传小米秘密自研操作系统mios 将应用于小米4&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://news.cnblogs.com/n/187854/&quot; target=&quot;_blank&quot;&gt;苹果中国官网惊现雷人翻译&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://news.cnblogs.com/n/187674/&quot; target=&quot;_blank&quot;&gt;一位苹果死忠的&amp;ldquo;叛逃&amp;rdquo;心声：安卓已不再是那个安卓&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://news.cnblogs.com/n/187736/&quot; target=&quot;_blank&quot;&gt;周鸿祎：以色列军队是世界上最好的孵化器&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://news.cnblogs.com/n/187892/&quot; target=&quot;_blank&quot;&gt;不良编程文化&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://news.cnblogs.com/n/187545/&quot; target=&quot;_blank&quot;&gt;诺基亚 Lumia 1520 真机照全面曝光&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://news.cnblogs.com/n/187941/&quot; target=&quot;_blank&quot;&gt;9月Tiobe全球编程语言排行榜：Transact-SQL打入前十&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://news.cnblogs.com/n/188027/&quot; target=&quot;_blank&quot;&gt;互联网大佬字迹大曝光!&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://news.cnblogs.com/n/188014/&quot; target=&quot;_blank&quot;&gt;10分钟尝试10种编程语言&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://news.cnblogs.com/n/187770/&quot; target=&quot;_blank&quot;&gt;小米手机3登上新闻联播：全球最快手机&lt;/a&gt;&lt;br /&gt;        &lt;/p&gt;&lt;p&gt;知识库热点文章：&lt;/p&gt;&lt;p&gt;            &amp;middot; &lt;a href=&quot;http://kb.cnblogs.com/page/187767/&quot; target=&quot;_blank&quot;&gt;Reddit月浏览量从百万扩容到十亿的陷阱和教训&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://kb.cnblogs.com/page/169917/&quot; target=&quot;_blank&quot;&gt;浅谈编程解决实际问题的常见思想&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://kb.cnblogs.com/page/188170/&quot; target=&quot;_blank&quot;&gt;四层和七层负载均衡的区别&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://kb.cnblogs.com/page/188091/&quot; target=&quot;_blank&quot;&gt;Windows Azure 底层架构&lt;/a&gt;&lt;br /&gt;        &amp;middot; &lt;a href=&quot;http://kb.cnblogs.com/page/188200/&quot; target=&quot;_blank&quot;&gt;SQL Azure存储架构设计&lt;/a&gt;&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3323563&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/cmt/p/3323563.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/cmt/p/3323563.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-15T23:57:00+00:00</dc:date>
	<dc:creator>博客园团队</dc:creator>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252820.htm">
	<title>cnBeta.COM: [图]7大终成泡影的“雾件”设备</title>
	<link>http://www.cnbeta.com/articles/252820.htm</link>
	<content:encoded>&lt;p&gt;最令人失望的设备无非就是那些宣传力度很大，但最终死在沙滩上的设备。这类设备有个术语，叫“雾件”。&lt;strong&gt;80年代的游戏机无线手柄、内置投影仪的手机等雾件无一不受到大肆宣传，但最终仍没有走到消费者手中。一起去看一下还有哪些类似雾件与你擦肩而过吧。&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31447748/sc/38/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252820.htm&amp;t=%5B%E5%9B%BE%5D7%E5%A4%A7%E7%BB%88%E6%88%90%E6%B3%A1%E5%BD%B1%E7%9A%84%E2%80%9C%E9%9B%BE%E4%BB%B6%E2%80%9D%E8%AE%BE%E5%A4%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252820.htm&amp;t=%5B%E5%9B%BE%5D7%E5%A4%A7%E7%BB%88%E6%88%90%E6%B3%A1%E5%BD%B1%E7%9A%84%E2%80%9C%E9%9B%BE%E4%BB%B6%E2%80%9D%E8%AE%BE%E5%A4%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252820.htm&amp;t=%5B%E5%9B%BE%5D7%E5%A4%A7%E7%BB%88%E6%88%90%E6%B3%A1%E5%BD%B1%E7%9A%84%E2%80%9C%E9%9B%BE%E4%BB%B6%E2%80%9D%E8%AE%BE%E5%A4%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252820.htm&amp;t=%5B%E5%9B%BE%5D7%E5%A4%A7%E7%BB%88%E6%88%90%E6%B3%A1%E5%BD%B1%E7%9A%84%E2%80%9C%E9%9B%BE%E4%BB%B6%E2%80%9D%E8%AE%BE%E5%A4%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252820.htm&amp;t=%5B%E5%9B%BE%5D7%E5%A4%A7%E7%BB%88%E6%88%90%E6%B3%A1%E5%BD%B1%E7%9A%84%E2%80%9C%E9%9B%BE%E4%BB%B6%E2%80%9D%E8%AE%BE%E5%A4%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608969417/u/47/f/624776/c/34306/s/31447748/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608969417/u/47/f/624776/c/34306/s/31447748/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608969417/u/47/f/624776/c/34306/s/31447748/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T23:53:00+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252819.htm">
	<title>cnBeta.COM: 华为赞助新西兰足球队签约3年</title>
	<link>http://www.cnbeta.com/articles/252819.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;&lt;span&gt;﻿&lt;/span&gt;4个月前，华为创始人任正非曾在新西兰惠灵顿（新西兰首都）接受媒体采访；最近，华为与惠灵顿Phoenix足球队签约3年，成为赞助商。&lt;/strong&gt;Phoenix足球队是新西兰唯一的职业足球队，在华为之前索尼是球队的赞助商。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/314452e6/sc/11/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252819.htm&amp;t=%E5%8D%8E%E4%B8%BA%E8%B5%9E%E5%8A%A9%E6%96%B0%E8%A5%BF%E5%85%B0%E8%B6%B3%E7%90%83%E9%98%9F%E7%AD%BE%E7%BA%A63%E5%B9%B4&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252819.htm&amp;t=%E5%8D%8E%E4%B8%BA%E8%B5%9E%E5%8A%A9%E6%96%B0%E8%A5%BF%E5%85%B0%E8%B6%B3%E7%90%83%E9%98%9F%E7%AD%BE%E7%BA%A63%E5%B9%B4&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252819.htm&amp;t=%E5%8D%8E%E4%B8%BA%E8%B5%9E%E5%8A%A9%E6%96%B0%E8%A5%BF%E5%85%B0%E8%B6%B3%E7%90%83%E9%98%9F%E7%AD%BE%E7%BA%A63%E5%B9%B4&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252819.htm&amp;t=%E5%8D%8E%E4%B8%BA%E8%B5%9E%E5%8A%A9%E6%96%B0%E8%A5%BF%E5%85%B0%E8%B6%B3%E7%90%83%E9%98%9F%E7%AD%BE%E7%BA%A63%E5%B9%B4&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252819.htm&amp;t=%E5%8D%8E%E4%B8%BA%E8%B5%9E%E5%8A%A9%E6%96%B0%E8%A5%BF%E5%85%B0%E8%B6%B3%E7%90%83%E9%98%9F%E7%AD%BE%E7%BA%A63%E5%B9%B4&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608952737/u/47/f/624776/c/34306/s/314452e6/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608952737/u/47/f/624776/c/34306/s/314452e6/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608952737/u/47/f/624776/c/34306/s/314452e6/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T23:46:30+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252818.htm">
	<title>cnBeta.COM: [组图]科技大佬们的偶像</title>
	<link>http://www.cnbeta.com/articles/252818.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;人活一世，难免路遇荆棘身陷低谷，每每畏惧迷茫之际，偶像总是以一种无形的强大力量支撑着自己，激励着自己。在科技界，这些世人心中尊为偶像的大佬们同样也有自己的偶像。到底是谁造就了他们，指引着他们一步步走向辉煌？&lt;/strong&gt;1.乔布斯虽然为人傲慢，但是对被誉为‘经营之圣'的索尼创始人盛田昭夫却恭敬有加。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/314452e5/sc/38/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252818.htm&amp;t=%5B%E7%BB%84%E5%9B%BE%5D%E7%A7%91%E6%8A%80%E5%A4%A7%E4%BD%AC%E4%BB%AC%E7%9A%84%E5%81%B6%E5%83%8F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252818.htm&amp;t=%5B%E7%BB%84%E5%9B%BE%5D%E7%A7%91%E6%8A%80%E5%A4%A7%E4%BD%AC%E4%BB%AC%E7%9A%84%E5%81%B6%E5%83%8F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252818.htm&amp;t=%5B%E7%BB%84%E5%9B%BE%5D%E7%A7%91%E6%8A%80%E5%A4%A7%E4%BD%AC%E4%BB%AC%E7%9A%84%E5%81%B6%E5%83%8F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252818.htm&amp;t=%5B%E7%BB%84%E5%9B%BE%5D%E7%A7%91%E6%8A%80%E5%A4%A7%E4%BD%AC%E4%BB%AC%E7%9A%84%E5%81%B6%E5%83%8F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252818.htm&amp;t=%5B%E7%BB%84%E5%9B%BE%5D%E7%A7%91%E6%8A%80%E5%A4%A7%E4%BD%AC%E4%BB%AC%E7%9A%84%E5%81%B6%E5%83%8F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608952736/u/47/f/624776/c/34306/s/314452e5/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608952736/u/47/f/624776/c/34306/s/314452e5/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608952736/u/47/f/624776/c/34306/s/314452e5/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T23:46:05+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252817.htm">
	<title>cnBeta.COM: 指纹传感器难产致5S缺货 5C 24小时预订100万台</title>
	<link>http://www.cnbeta.com/articles/252817.htm</link>
	<content:encoded>&lt;p&gt;据科技信息网站BGR报道，越来越多的市场迹象表明，苹果想要在下周推出最新的iPhone 5S手机，面临着不小的难题。&lt;strong&gt;此前有传 闻称，iPhone 5S中采用的指纹识别传感器，始终面临良品率不高的问题。知名市场研究公司Jefferies &amp;#38; Co. 分析师皮特-弥赛克（Peter Misek）近期发布研究报告，下调了iPhone 5S出货预期，并指出生产受阻是当前困扰苹果的主要问题之一。&lt;/strong&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/314452e4/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252817.htm&amp;t=%E6%8C%87%E7%BA%B9%E4%BC%A0%E6%84%9F%E5%99%A8%E9%9A%BE%E4%BA%A7%E8%87%B45S%E7%BC%BA%E8%B4%A7+5C+24%E5%B0%8F%E6%97%B6%E9%A2%84%E8%AE%A2100%E4%B8%87%E5%8F%B0&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252817.htm&amp;t=%E6%8C%87%E7%BA%B9%E4%BC%A0%E6%84%9F%E5%99%A8%E9%9A%BE%E4%BA%A7%E8%87%B45S%E7%BC%BA%E8%B4%A7+5C+24%E5%B0%8F%E6%97%B6%E9%A2%84%E8%AE%A2100%E4%B8%87%E5%8F%B0&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252817.htm&amp;t=%E6%8C%87%E7%BA%B9%E4%BC%A0%E6%84%9F%E5%99%A8%E9%9A%BE%E4%BA%A7%E8%87%B45S%E7%BC%BA%E8%B4%A7+5C+24%E5%B0%8F%E6%97%B6%E9%A2%84%E8%AE%A2100%E4%B8%87%E5%8F%B0&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252817.htm&amp;t=%E6%8C%87%E7%BA%B9%E4%BC%A0%E6%84%9F%E5%99%A8%E9%9A%BE%E4%BA%A7%E8%87%B45S%E7%BC%BA%E8%B4%A7+5C+24%E5%B0%8F%E6%97%B6%E9%A2%84%E8%AE%A2100%E4%B8%87%E5%8F%B0&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252817.htm&amp;t=%E6%8C%87%E7%BA%B9%E4%BC%A0%E6%84%9F%E5%99%A8%E9%9A%BE%E4%BA%A7%E8%87%B45S%E7%BC%BA%E8%B4%A7+5C+24%E5%B0%8F%E6%97%B6%E9%A2%84%E8%AE%A2100%E4%B8%87%E5%8F%B0&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608952735/u/47/f/624776/c/34306/s/314452e4/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608952735/u/47/f/624776/c/34306/s/314452e4/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608952735/u/47/f/624776/c/34306/s/314452e4/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T23:45:26+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252816.htm">
	<title>cnBeta.COM: 外媒评Xbox One边玩游戏边用平板功能：没用！</title>
	<link>http://www.cnbeta.com/articles/252816.htm</link>
	<content:encoded>&lt;p&gt;之前一段时间，似乎所有媒体的注意力都集中在IFA柏林国际电子消费品展览会及三星和索尼的两场发布会上了。各大媒体的头条都是在报道三星Galaxy Note 3、Galaxy Gear、Xperia Z1或IFA上的各种新品。&lt;strong&gt;不过在游戏领域，似乎同样有应当受到关注的新闻，比如最近微软就对外详细透露的下一代Xbox One的SmartGlass功能究竟能够为用户带来何种的体验。&lt;/strong&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/314452e3/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252816.htm&amp;t=%E5%A4%96%E5%AA%92%E8%AF%84Xbox+One%E8%BE%B9%E7%8E%A9%E6%B8%B8%E6%88%8F%E8%BE%B9%E7%94%A8%E5%B9%B3%E6%9D%BF%E5%8A%9F%E8%83%BD%EF%BC%9A%E6%B2%A1%E7%94%A8%EF%BC%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252816.htm&amp;t=%E5%A4%96%E5%AA%92%E8%AF%84Xbox+One%E8%BE%B9%E7%8E%A9%E6%B8%B8%E6%88%8F%E8%BE%B9%E7%94%A8%E5%B9%B3%E6%9D%BF%E5%8A%9F%E8%83%BD%EF%BC%9A%E6%B2%A1%E7%94%A8%EF%BC%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252816.htm&amp;t=%E5%A4%96%E5%AA%92%E8%AF%84Xbox+One%E8%BE%B9%E7%8E%A9%E6%B8%B8%E6%88%8F%E8%BE%B9%E7%94%A8%E5%B9%B3%E6%9D%BF%E5%8A%9F%E8%83%BD%EF%BC%9A%E6%B2%A1%E7%94%A8%EF%BC%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252816.htm&amp;t=%E5%A4%96%E5%AA%92%E8%AF%84Xbox+One%E8%BE%B9%E7%8E%A9%E6%B8%B8%E6%88%8F%E8%BE%B9%E7%94%A8%E5%B9%B3%E6%9D%BF%E5%8A%9F%E8%83%BD%EF%BC%9A%E6%B2%A1%E7%94%A8%EF%BC%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252816.htm&amp;t=%E5%A4%96%E5%AA%92%E8%AF%84Xbox+One%E8%BE%B9%E7%8E%A9%E6%B8%B8%E6%88%8F%E8%BE%B9%E7%94%A8%E5%B9%B3%E6%9D%BF%E5%8A%9F%E8%83%BD%EF%BC%9A%E6%B2%A1%E7%94%A8%EF%BC%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608952734/u/47/f/624776/c/34306/s/314452e3/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608952734/u/47/f/624776/c/34306/s/314452e3/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608952734/u/47/f/624776/c/34306/s/314452e3/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T23:43:54+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252815.htm">
	<title>cnBeta.COM: 谷歌眼镜新应用：看球赛时可实时获取现场数据</title>
	<link>http://www.cnbeta.com/articles/252815.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;如果你热爱体育，喜欢到现场去看各种球赛，那么这款名叫Blue的谷歌眼镜应用绝对会让你爱上它。&lt;/strong&gt;Blue不仅可以根据你当前所处的地理位置筛选附近的体育场馆中有哪些比赛，同时还可以对比赛中的一些实时数据进行监控并向并不在场内的用户进行推送。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/314452e2/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252815.htm&amp;t=%E8%B0%B7%E6%AD%8C%E7%9C%BC%E9%95%9C%E6%96%B0%E5%BA%94%E7%94%A8%EF%BC%9A%E7%9C%8B%E7%90%83%E8%B5%9B%E6%97%B6%E5%8F%AF%E5%AE%9E%E6%97%B6%E8%8E%B7%E5%8F%96%E7%8E%B0%E5%9C%BA%E6%95%B0%E6%8D%AE&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252815.htm&amp;t=%E8%B0%B7%E6%AD%8C%E7%9C%BC%E9%95%9C%E6%96%B0%E5%BA%94%E7%94%A8%EF%BC%9A%E7%9C%8B%E7%90%83%E8%B5%9B%E6%97%B6%E5%8F%AF%E5%AE%9E%E6%97%B6%E8%8E%B7%E5%8F%96%E7%8E%B0%E5%9C%BA%E6%95%B0%E6%8D%AE&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252815.htm&amp;t=%E8%B0%B7%E6%AD%8C%E7%9C%BC%E9%95%9C%E6%96%B0%E5%BA%94%E7%94%A8%EF%BC%9A%E7%9C%8B%E7%90%83%E8%B5%9B%E6%97%B6%E5%8F%AF%E5%AE%9E%E6%97%B6%E8%8E%B7%E5%8F%96%E7%8E%B0%E5%9C%BA%E6%95%B0%E6%8D%AE&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252815.htm&amp;t=%E8%B0%B7%E6%AD%8C%E7%9C%BC%E9%95%9C%E6%96%B0%E5%BA%94%E7%94%A8%EF%BC%9A%E7%9C%8B%E7%90%83%E8%B5%9B%E6%97%B6%E5%8F%AF%E5%AE%9E%E6%97%B6%E8%8E%B7%E5%8F%96%E7%8E%B0%E5%9C%BA%E6%95%B0%E6%8D%AE&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252815.htm&amp;t=%E8%B0%B7%E6%AD%8C%E7%9C%BC%E9%95%9C%E6%96%B0%E5%BA%94%E7%94%A8%EF%BC%9A%E7%9C%8B%E7%90%83%E8%B5%9B%E6%97%B6%E5%8F%AF%E5%AE%9E%E6%97%B6%E8%8E%B7%E5%8F%96%E7%8E%B0%E5%9C%BA%E6%95%B0%E6%8D%AE&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608952733/u/47/f/624776/c/34306/s/314452e2/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608952733/u/47/f/624776/c/34306/s/314452e2/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608952733/u/47/f/624776/c/34306/s/314452e2/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T23:43:08+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252814.htm">
	<title>cnBeta.COM: Omate TrueSmart智能手表曝光 售价约1070元</title>
	<link>http://www.cnbeta.com/articles/252814.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;近日，Omate展示了旗下TrueSmart智能手表的最终稿，其中包括一系列的产品图片以及产品展示视频。早在上个月，这款手表已经在众筹平台Kickstarter筹集到了目标资金，但现在依然有不少投资者继续捐助资金。&lt;/strong&gt;最终版的TrueSmart智能手表配备了一块蓝宝石水晶防划玻璃，这个配置与iPhone 5后置摄像头上的配置类似，而其它智能手表，三星Galaxy Gear则采用的是康宁大猩猩玻璃；在配置方面，TrueSmart智能手表采用双核处理器，搭载Android 4.2.2果冻豆系统，配备有1.5英寸屏幕，分辨率为240x240；机身侧面摄像头为500万像素。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/314452e0/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252814.htm&amp;t=Omate+TrueSmart%E6%99%BA%E8%83%BD%E6%89%8B%E8%A1%A8%E6%9B%9D%E5%85%89+%E5%94%AE%E4%BB%B7%E7%BA%A61070%E5%85%83&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252814.htm&amp;t=Omate+TrueSmart%E6%99%BA%E8%83%BD%E6%89%8B%E8%A1%A8%E6%9B%9D%E5%85%89+%E5%94%AE%E4%BB%B7%E7%BA%A61070%E5%85%83&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252814.htm&amp;t=Omate+TrueSmart%E6%99%BA%E8%83%BD%E6%89%8B%E8%A1%A8%E6%9B%9D%E5%85%89+%E5%94%AE%E4%BB%B7%E7%BA%A61070%E5%85%83&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252814.htm&amp;t=Omate+TrueSmart%E6%99%BA%E8%83%BD%E6%89%8B%E8%A1%A8%E6%9B%9D%E5%85%89+%E5%94%AE%E4%BB%B7%E7%BA%A61070%E5%85%83&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252814.htm&amp;t=Omate+TrueSmart%E6%99%BA%E8%83%BD%E6%89%8B%E8%A1%A8%E6%9B%9D%E5%85%89+%E5%94%AE%E4%BB%B7%E7%BA%A61070%E5%85%83&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608952732/u/47/f/624776/c/34306/s/314452e0/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608952732/u/47/f/624776/c/34306/s/314452e0/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608952732/u/47/f/624776/c/34306/s/314452e0/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T23:42:07+00:00</dc:date>
</item>
<item rdf:about="http://www.cnblogs.com/trytocatch/p/boundlesscyclicbarrier.html">
	<title>博客园_首页: 非阻塞同步算法实战（二）－BoundlessCyclicBarrier - trytocatch</title>
	<link>http://www.cnblogs.com/trytocatch/p/boundlesscyclicbarrier.html</link>
	<content:encoded>&lt;p&gt;&lt;span&gt;本人是本文的作者，首发于ifeve（&lt;a href=&quot;http://ifeve.com/boundlesscyclicbarrier/&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;非阻塞同步算法实战（二）－BoundlessCyclicBarrier&lt;/span&gt;&lt;/a&gt;）&lt;/span&gt;&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;相比上一 篇而言，本文不需要太多的准备知识，但技巧性更强一些。因为分析、设计的过程比较复杂繁琐，也限于篇幅，所以，主要展示如何解决这些需求，和讲解代码。另外，所讲的内容也是后一篇实战中需要用到的一个工具类。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;需求介绍&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我需要编写一个同步工具，它需要提供这样几个方法：await、pass、cancel。某个线程调用await时，会被阻塞；当调用pass方法时，之前因为await而阻塞的线程将全部被解除阻塞，之后调用await的线程继续被阻塞，直到下一次调用pass。&lt;/p&gt;&lt;p&gt;该工具同时还维护一个版本号，await方法可以带一个目标版本号，如果当前的版本号比目标版本号新或相同，则直接通过，否则，阻塞本线程，直到到达或超过目标版本。调用pass的时候，更新版本号。&lt;/p&gt;&lt;p&gt;如果停止了版本更新，可使用cancel方法来解除所有因await而阻塞的线程，包括指定版本号的。此方法用于避免无谓地等待。若await发生在cancel之后，则仍将被阻塞。&lt;/p&gt;&lt;p&gt;因为CountDownLatch不允许重复使用，CyclicBarrier只支持固定个数的线程，并且都没有维护一个版本号，所以没有已有的类能实现上面的需求，需要自己实现。&lt;span id=&quot;more-5977&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;问题分析&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;简单分析可知，应该维护一个队列，来保存当前被阻塞的线程，用于在pass时对它们一一解除阻塞，pass时应该使用一个新的队列，否则不方便正确处理pass前和pass后调用await的线程。&lt;/p&gt;&lt;p&gt;至此，问题的关键就明了了：如何将队列的替换和版本号的更新这两个操作做成原子的。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;以前在《JAVA并发编程实践》曾看到过这样一个小技巧，如果要原子地更新两个变量，那么可以创建一个新的类将它们封装起来，将这两个变量当定义成类成员变量，更新时，用CAS更新这个类的引用即可。&lt;/p&gt;&lt;p&gt;因为较为复杂，下面先给出完整的代码，再讲解其中的关键。&lt;/p&gt;&lt;p&gt;注意：上面所说pass，在代码中的具体实现为nextCycle，有两个版本，一个自动维护版本号，一个由调用者维护版本号。&lt;/p&gt;&lt;div&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;&lt;br /&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; trytocatch@163.com&lt;br /&gt; * @time 2013-1-31&lt;br /&gt; &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;br /&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; BoundlessCyclicBarrier {&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; AtomicReference&amp;lt;VersionQueue&amp;gt;&lt;span&gt; waitQueueRef;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; BoundlessCyclicBarrier() {&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;(0&lt;span&gt;);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; BoundlessCyclicBarrier(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; startVersion) {&lt;br /&gt;        waitQueueRef &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; AtomicReference&amp;lt;VersionQueue&amp;gt;(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; VersionQueue(startVersion));&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; awaitWithAssignedVersion(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; myVersion)&lt;br /&gt;            &lt;/span&gt;&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; InterruptedException {&lt;br /&gt;        awaitImpl(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;, myVersion, 0&lt;span&gt;);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;&lt;br /&gt;     *&lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; myVersion&lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; nanosTimeout&lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; if timeout, or be canceled and doesn't reach myVersion, returns false&lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@throws&lt;/span&gt;&lt;span&gt; InterruptedException&lt;br /&gt;     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;br /&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; awaitWithAssignedVersion(&lt;span&gt;int&lt;/span&gt; myVersion, &lt;span&gt;long&lt;/span&gt; nanosTimeout) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; InterruptedException {&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; awaitImpl(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;, myVersion, nanosTimeout);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; await() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; InterruptedException {&lt;br /&gt;        awaitImpl(&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;, 0, 0&lt;span&gt;);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;&lt;br /&gt;     *&lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; nanosTimeout&lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; if and only if timeout, returns false&lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@throws&lt;/span&gt;&lt;span&gt; InterruptedException&lt;br /&gt;     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;br /&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; await(&lt;span&gt;long&lt;/span&gt;&lt;span&gt; nanosTimeout)&lt;br /&gt;            &lt;/span&gt;&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; InterruptedException {&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; awaitImpl(&lt;span&gt;false&lt;/span&gt;, 0&lt;span&gt;, nanosTimeout);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;&lt;br /&gt;     * pass and version++(some threads may not be unparked when awaitImpl is in process, but it's OK in this Barrier)&lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; old queue version&lt;br /&gt;     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;br /&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; nextCycle() {&lt;br /&gt;        VersionQueue oldQueue &lt;/span&gt;=&lt;span&gt; waitQueueRef.get();&lt;br /&gt;        VersionQueue newQueue &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; VersionQueue(oldQueue.version + 1&lt;span&gt;);&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(;;){&lt;br /&gt;            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (waitQueueRef.compareAndSet(oldQueue, newQueue)) {&lt;br /&gt;                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (Thread t : oldQueue.queue)&lt;br /&gt;                    LockSupport.unpark(t);&lt;br /&gt;                &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;            }&lt;br /&gt;            oldQueue &lt;/span&gt;=&lt;span&gt; waitQueueRef.get();&lt;br /&gt;            newQueue.version &lt;/span&gt;= oldQueue.version + 1&lt;span&gt;;&lt;br /&gt;        }&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; oldQueue.version;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;&lt;br /&gt;     * pass and assign the next cycle version(caller should make sure that the newAssignVersion is right)&lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; newAssignVersion&lt;br /&gt;     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;br /&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; nextCycle(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; newAssignVersion) {&lt;br /&gt;        VersionQueue oldQueue &lt;/span&gt;= waitQueueRef.getAndSet(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; VersionQueue(newAssignVersion));&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (Thread t : oldQueue.queue)&lt;br /&gt;            LockSupport.unpark(t);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;&lt;br /&gt;     * if version update has stopped, invoke this to awake all threads&lt;br /&gt;     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;br /&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; cancel(){&lt;br /&gt;        VersionQueue oldQueue &lt;/span&gt;=&lt;span&gt; waitQueueRef.get();&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (waitQueueRef.compareAndSet(oldQueue, &lt;span&gt;new&lt;/span&gt; VersionQueue(oldQueue.version, &lt;span&gt;true&lt;/span&gt;&lt;span&gt;))) {&lt;br /&gt;            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (Thread t : oldQueue.queue)&lt;br /&gt;                LockSupport.unpark(t);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getVersion() {&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; waitQueueRef.get().version;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; VersionQueue {&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;final&lt;/span&gt; &lt;span&gt;private&lt;/span&gt;&lt;span&gt; ConcurrentLinkedQueue queue;&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; version;&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;final&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isCancelQueue;&lt;br /&gt;&lt;br /&gt;        VersionQueue(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; curVersion){&lt;br /&gt;            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;(curVersion, &lt;span&gt;false&lt;/span&gt;&lt;span&gt;);&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        VersionQueue(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; curVersion, &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isCancelQueue) {&lt;br /&gt;            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.version =&lt;span&gt; curVersion;&lt;br /&gt;            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.isCancelQueue =&lt;span&gt; isCancelQueue;&lt;br /&gt;            queue &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ConcurrentLinkedQueue();&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;&lt;br /&gt;     *&lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; assignVersion is myVersion available&lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; myVersion wait for this version&lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; nanosTimeout wait time(nanosTimeout &amp;lt;=0 means that nanosTimeout is invalid) &lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; if timeout, or be canceled and doesn't reach myVersion, returns false &lt;br /&gt;     * &lt;/span&gt;&lt;span&gt;@throws&lt;/span&gt;&lt;span&gt; InterruptedException &lt;br /&gt;     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt; &lt;br /&gt;    &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; awaitImpl(&lt;span&gt;boolean&lt;/span&gt; assignVersion, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; myVersion, &lt;br /&gt;            &lt;/span&gt;&lt;span&gt;long&lt;/span&gt; nanosTimeout) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; InterruptedException { &lt;br /&gt;        &lt;/span&gt;&lt;span&gt;boolean&lt;/span&gt; timeOutEnable = nanosTimeout &amp;gt; 0&lt;span&gt;;&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;long&lt;/span&gt; lastTime =&lt;span&gt; System.nanoTime();&lt;br /&gt;        VersionQueue newQueue &lt;/span&gt;= waitQueueRef.get();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;br /&gt;        &lt;span&gt;if&lt;/span&gt; (assignVersion &amp;amp;&amp;amp; newQueue.version - myVersion &amp;gt;= 0&lt;span&gt;)&lt;br /&gt;            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;) {&lt;br /&gt;            VersionQueue submitQueue &lt;/span&gt;= newQueue;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;B&lt;/span&gt;&lt;br /&gt;            submitQueue.queue.add(Thread.currentThread());&lt;span&gt;//&lt;/span&gt;&lt;span&gt;C&lt;/span&gt;&lt;br /&gt;            &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;) {&lt;br /&gt;                newQueue &lt;/span&gt;= waitQueueRef.get();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;D&lt;/span&gt;&lt;br /&gt;                &lt;span&gt;if&lt;/span&gt; (newQueue != submitQueue){&lt;span&gt;//&lt;/span&gt;&lt;span&gt;E： it's a new cycle&lt;/span&gt;&lt;br /&gt;                    &lt;span&gt;if&lt;/span&gt;(assignVersion == &lt;span&gt;false&lt;/span&gt;&lt;span&gt;)&lt;br /&gt;                        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;                    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(newQueue.version - myVersion &amp;gt;= 0&lt;span&gt;)&lt;br /&gt;                        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;                    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (newQueue.isCancelQueue)&lt;span&gt;//&lt;/span&gt;&lt;span&gt;F： be canceled&lt;/span&gt;&lt;br /&gt;                        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;                    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;just like invoking awaitImpl again&lt;/span&gt;&lt;br /&gt;                        &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;                }&lt;br /&gt;                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (timeOutEnable) {&lt;br /&gt;                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (nanosTimeout &amp;lt;= 0&lt;span&gt;)&lt;br /&gt;                        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;                    LockSupport.parkNanos(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;, nanosTimeout);&lt;br /&gt;                    &lt;/span&gt;&lt;span&gt;long&lt;/span&gt; now =&lt;span&gt; System.nanoTime();&lt;br /&gt;                    nanosTimeout &lt;/span&gt;-= now -&lt;span&gt; lastTime;&lt;br /&gt;                    lastTime &lt;/span&gt;=&lt;span&gt; now;&lt;br /&gt;                } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;&lt;br /&gt;                    LockSupport.park(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);&lt;br /&gt;                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (Thread.interrupted())&lt;br /&gt;                    &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; InterruptedException();&lt;br /&gt;            }&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;}&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;代码分析&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;先分析一下awaitImpl方法，A和D是该方法的关键点，决定着它属于哪一个批次，对应哪一个版本。这里有个小细节，在nexeCycle,cancel解除阻塞时，该线程可能并不在队列中，因为插入队列发生在C处，这在A和D之后（虽然看起来C在D之前，但D取到的queue要在下一次循环时才被当作submitQueue），所以，在E处再进行了一次判断，开始解除阻塞时，旧队列肯定被新队列所替换，newQueue != submitQueue一定为真，就会不调用park进行阻塞了，也就不需要解除阻塞，所以即使解除阻塞时，该线程不在队列中也是没问题的。&lt;/p&gt;&lt;p&gt;再看E处，当进入一个新的cycle时(当前队列与提交的队列不同)，a)如果没指定版本，或者到达或超过了指定版本，则返回true；b)如果当前调用了cancel，则当前队列的isCancelQueue将为true，则不继续傻等，返回false；c)或者还未到达指定版本，break，插入到当前队列中，继续等待指定版本的到达。&lt;/p&gt;&lt;p&gt;如果没有进入E处的IF内，则当前线程会被阻塞，直到超时，然后返回false；或被中断，然后抛出InterruptedException；或被解除阻塞，重新进行E处的判定。&lt;/p&gt;&lt;p&gt;这里还有个小细节，既然cancel时，把当前的队列设置了isCancelQueue，那么之后指定版本的await会不会也直接返回了呢？其实不会的，因为它若要执行F处的判断，则先必需通过E处的判定，这意味着，当前队列已经不是提交时的那个设置了isCancelQueue的队列了。&lt;/p&gt;&lt;p&gt;代码中对于cancel的处理，其实并不保证cancel后，之前的await都会被解除阻塞并返回，如果cancel后，紧接着又调用了nextCycle，那么可能某线程感知不到cancel的调用，唤醒后又继续等待指定的版本。cancel的目的是在于不让线程傻等，既然恢复版本更新了，那就继续等待吧。&lt;/p&gt;&lt;p&gt;如果自己维护版本号，则应该保证递增。另外，版本号的设计，考虑到了int溢出的情况，版本的前后判断，我不是使用newVersion&amp;gt;=oldVersion，而是newVersion-oldVersion&amp;gt;=0，这样，版本号就相当于循环使用了，只要两个比较的版本号的差不超过int的最大值，那么都是正确的，int的最大值可是20多亿，几乎不可能出现跨度这么大的两个版本号的比较，所以，认为它是正确的。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;小结&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;本文讲到了一个非阻塞同步算法设计时的小技巧，如果多个变量之间要维护某种特定关系，那么可以将它们封装到一个类中，再用CAS更新这个类的引用，这样就达到了：要么都被更新，要么都没被更新，保持了多个变量之间的一致性。同时需要注意的是，每次更新都必需创建新的包装对象，假如有其它更好的办法，应该避免使用该方法。&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3323211&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/trytocatch/p/boundlesscyclicbarrier.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/trytocatch/p/boundlesscyclicbarrier.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-15T23:04:00+00:00</dc:date>
	<dc:creator>trytocatch</dc:creator>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252813.htm">
	<title>cnBeta.COM: 3D打印全球虚热 中国警惕山寨化</title>
	<link>http://www.cnbeta.com/articles/252813.htm</link>
	<content:encoded>&lt;p&gt;9月10日，全球3D打印巨头3D Systems（DDD：NYSE）宣布收购Sugar Lab。后者是洛杉矶的一家初创公司，专为客户个性化“打印”甜品——先按顾客的要求构建数学模型，然后据此打印出符合食品安全要求、口味各异的甜品。这是2011年6月美国总统奥巴马为重振美国制造业宣布向3D打印产业支出5亿美元从而引爆3D打印全球热潮以来，全球3D打印产业频繁并购的又一最新案例。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31445c49/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252813.htm&amp;t=3D%E6%89%93%E5%8D%B0%E5%85%A8%E7%90%83%E8%99%9A%E7%83%AD+%E4%B8%AD%E5%9B%BD%E8%AD%A6%E6%83%95%E5%B1%B1%E5%AF%A8%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252813.htm&amp;t=3D%E6%89%93%E5%8D%B0%E5%85%A8%E7%90%83%E8%99%9A%E7%83%AD+%E4%B8%AD%E5%9B%BD%E8%AD%A6%E6%83%95%E5%B1%B1%E5%AF%A8%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252813.htm&amp;t=3D%E6%89%93%E5%8D%B0%E5%85%A8%E7%90%83%E8%99%9A%E7%83%AD+%E4%B8%AD%E5%9B%BD%E8%AD%A6%E6%83%95%E5%B1%B1%E5%AF%A8%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252813.htm&amp;t=3D%E6%89%93%E5%8D%B0%E5%85%A8%E7%90%83%E8%99%9A%E7%83%AD+%E4%B8%AD%E5%9B%BD%E8%AD%A6%E6%83%95%E5%B1%B1%E5%AF%A8%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252813.htm&amp;t=3D%E6%89%93%E5%8D%B0%E5%85%A8%E7%90%83%E8%99%9A%E7%83%AD+%E4%B8%AD%E5%9B%BD%E8%AD%A6%E6%83%95%E5%B1%B1%E5%AF%A8%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609114457/u/47/f/624776/c/34306/s/31445c49/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609114457/u/47/f/624776/c/34306/s/31445c49/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609114457/u/47/f/624776/c/34306/s/31445c49/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:59:33+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252812.htm">
	<title>cnBeta.COM: 网拍私人飞机：淘宝VIP浮云</title>
	<link>http://www.cnbeta.com/articles/252812.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;“看！飞机来了。”9月12日，淘宝拍卖会上首现私人飞机，集中在数百万元到上千万元的小型机和直升机。&lt;/strong&gt;此次拍卖的私人飞机都由淘宝合作商家（航趣飞机网）从国外引进，成本涵盖了飞机本身的价格，从国外进口的运费，关税，增值税，仓储场地费和已经办理的各种证件，现货，等无形资产。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31445c47/sc/3/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252812.htm&amp;t=%E7%BD%91%E6%8B%8D%E7%A7%81%E4%BA%BA%E9%A3%9E%E6%9C%BA%EF%BC%9A%E6%B7%98%E5%AE%9DVIP%E6%B5%AE%E4%BA%91&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252812.htm&amp;t=%E7%BD%91%E6%8B%8D%E7%A7%81%E4%BA%BA%E9%A3%9E%E6%9C%BA%EF%BC%9A%E6%B7%98%E5%AE%9DVIP%E6%B5%AE%E4%BA%91&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252812.htm&amp;t=%E7%BD%91%E6%8B%8D%E7%A7%81%E4%BA%BA%E9%A3%9E%E6%9C%BA%EF%BC%9A%E6%B7%98%E5%AE%9DVIP%E6%B5%AE%E4%BA%91&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252812.htm&amp;t=%E7%BD%91%E6%8B%8D%E7%A7%81%E4%BA%BA%E9%A3%9E%E6%9C%BA%EF%BC%9A%E6%B7%98%E5%AE%9DVIP%E6%B5%AE%E4%BA%91&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252812.htm&amp;t=%E7%BD%91%E6%8B%8D%E7%A7%81%E4%BA%BA%E9%A3%9E%E6%9C%BA%EF%BC%9A%E6%B7%98%E5%AE%9DVIP%E6%B5%AE%E4%BA%91&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609114456/u/47/f/624776/c/34306/s/31445c47/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609114456/u/47/f/624776/c/34306/s/31445c47/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609114456/u/47/f/624776/c/34306/s/31445c47/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:58:35+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252811.htm">
	<title>cnBeta.COM: 神奇麦克风：通过手指秘密传递讯息</title>
	<link>http://www.cnbeta.com/articles/252811.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;迪斯尼研究人员已开发出一种麦克风，可允许使用者将录制好的语音消息，通过以手指与他人接触的方式进行传递。&lt;/strong&gt;该种麦克风能将语言信息转换成某种无法被听到的信息，并通过麦克风持有者的身体进行传播。当麦克风持有者的身体与他人接触时，信号可被传入到另一人身体中。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31445c45/sc/28/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252811.htm&amp;t=%E7%A5%9E%E5%A5%87%E9%BA%A6%E5%85%8B%E9%A3%8E%EF%BC%9A%E9%80%9A%E8%BF%87%E6%89%8B%E6%8C%87%E7%A7%98%E5%AF%86%E4%BC%A0%E9%80%92%E8%AE%AF%E6%81%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252811.htm&amp;t=%E7%A5%9E%E5%A5%87%E9%BA%A6%E5%85%8B%E9%A3%8E%EF%BC%9A%E9%80%9A%E8%BF%87%E6%89%8B%E6%8C%87%E7%A7%98%E5%AF%86%E4%BC%A0%E9%80%92%E8%AE%AF%E6%81%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252811.htm&amp;t=%E7%A5%9E%E5%A5%87%E9%BA%A6%E5%85%8B%E9%A3%8E%EF%BC%9A%E9%80%9A%E8%BF%87%E6%89%8B%E6%8C%87%E7%A7%98%E5%AF%86%E4%BC%A0%E9%80%92%E8%AE%AF%E6%81%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252811.htm&amp;t=%E7%A5%9E%E5%A5%87%E9%BA%A6%E5%85%8B%E9%A3%8E%EF%BC%9A%E9%80%9A%E8%BF%87%E6%89%8B%E6%8C%87%E7%A7%98%E5%AF%86%E4%BC%A0%E9%80%92%E8%AE%AF%E6%81%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252811.htm&amp;t=%E7%A5%9E%E5%A5%87%E9%BA%A6%E5%85%8B%E9%A3%8E%EF%BC%9A%E9%80%9A%E8%BF%87%E6%89%8B%E6%8C%87%E7%A7%98%E5%AF%86%E4%BC%A0%E9%80%92%E8%AE%AF%E6%81%AF&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609114455/u/47/f/624776/c/34306/s/31445c45/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609114455/u/47/f/624776/c/34306/s/31445c45/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609114455/u/47/f/624776/c/34306/s/31445c45/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:56:45+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252810.htm">
	<title>cnBeta.COM: 电子纹身可更加准确地测量身体的温度</title>
	<link>http://www.cnbeta.com/articles/252810.htm</link>
	<content:encoded>&lt;p&gt;据国外媒体报道，温度计似乎并不像电话一样需要重新发明。只要将温度计放在舌头下方，等待一分钟，你就知道体温了。&lt;strong&gt;但今天就有这样一款跨时代的温度计，可 以测量更准确的体表温度，可以告诉我们有关身体健康的更多信息。伊利诺伊大学研究员约翰·罗杰斯表示，“事实证明，通过测量皮肤温度，即使是十分之一度的 变化。在一定程度上，也对说明你的生理状态和健康状况十分有意义。”&lt;/strong&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31445c43/sc/38/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252810.htm&amp;t=%E7%94%B5%E5%AD%90%E7%BA%B9%E8%BA%AB%E5%8F%AF%E6%9B%B4%E5%8A%A0%E5%87%86%E7%A1%AE%E5%9C%B0%E6%B5%8B%E9%87%8F%E8%BA%AB%E4%BD%93%E7%9A%84%E6%B8%A9%E5%BA%A6&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252810.htm&amp;t=%E7%94%B5%E5%AD%90%E7%BA%B9%E8%BA%AB%E5%8F%AF%E6%9B%B4%E5%8A%A0%E5%87%86%E7%A1%AE%E5%9C%B0%E6%B5%8B%E9%87%8F%E8%BA%AB%E4%BD%93%E7%9A%84%E6%B8%A9%E5%BA%A6&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252810.htm&amp;t=%E7%94%B5%E5%AD%90%E7%BA%B9%E8%BA%AB%E5%8F%AF%E6%9B%B4%E5%8A%A0%E5%87%86%E7%A1%AE%E5%9C%B0%E6%B5%8B%E9%87%8F%E8%BA%AB%E4%BD%93%E7%9A%84%E6%B8%A9%E5%BA%A6&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252810.htm&amp;t=%E7%94%B5%E5%AD%90%E7%BA%B9%E8%BA%AB%E5%8F%AF%E6%9B%B4%E5%8A%A0%E5%87%86%E7%A1%AE%E5%9C%B0%E6%B5%8B%E9%87%8F%E8%BA%AB%E4%BD%93%E7%9A%84%E6%B8%A9%E5%BA%A6&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252810.htm&amp;t=%E7%94%B5%E5%AD%90%E7%BA%B9%E8%BA%AB%E5%8F%AF%E6%9B%B4%E5%8A%A0%E5%87%86%E7%A1%AE%E5%9C%B0%E6%B5%8B%E9%87%8F%E8%BA%AB%E4%BD%93%E7%9A%84%E6%B8%A9%E5%BA%A6&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609114454/u/47/f/624776/c/34306/s/31445c43/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609114454/u/47/f/624776/c/34306/s/31445c43/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609114454/u/47/f/624776/c/34306/s/31445c43/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:54:23+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252809.htm">
	<title>cnBeta.COM: 手机导航或将成北斗最大市场</title>
	<link>http://www.cnbeta.com/articles/252809.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;手机导航的飞速发展，引起了北斗产业链上企业的重视。江苏北斗卫星产业应用研究院总经理陈伏州说，未来手机导航或将成为北斗最大的市场。&lt;/strong&gt;导航是定位系统最重要的功能，目前市场上95%的导航终端仍然由GPS占据。陈伏州说，随着我国“卫星导航应用产业化”重大工程项目实施，消费市场的基数大增。未来几年，北斗导航产业将会有数千亿市场规模。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31445c40/sc/3/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252809.htm&amp;t=%E6%89%8B%E6%9C%BA%E5%AF%BC%E8%88%AA%E6%88%96%E5%B0%86%E6%88%90%E5%8C%97%E6%96%97%E6%9C%80%E5%A4%A7%E5%B8%82%E5%9C%BA&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252809.htm&amp;t=%E6%89%8B%E6%9C%BA%E5%AF%BC%E8%88%AA%E6%88%96%E5%B0%86%E6%88%90%E5%8C%97%E6%96%97%E6%9C%80%E5%A4%A7%E5%B8%82%E5%9C%BA&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252809.htm&amp;t=%E6%89%8B%E6%9C%BA%E5%AF%BC%E8%88%AA%E6%88%96%E5%B0%86%E6%88%90%E5%8C%97%E6%96%97%E6%9C%80%E5%A4%A7%E5%B8%82%E5%9C%BA&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252809.htm&amp;t=%E6%89%8B%E6%9C%BA%E5%AF%BC%E8%88%AA%E6%88%96%E5%B0%86%E6%88%90%E5%8C%97%E6%96%97%E6%9C%80%E5%A4%A7%E5%B8%82%E5%9C%BA&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252809.htm&amp;t=%E6%89%8B%E6%9C%BA%E5%AF%BC%E8%88%AA%E6%88%96%E5%B0%86%E6%88%90%E5%8C%97%E6%96%97%E6%9C%80%E5%A4%A7%E5%B8%82%E5%9C%BA&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609114453/u/47/f/624776/c/34306/s/31445c40/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609114453/u/47/f/624776/c/34306/s/31445c40/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609114453/u/47/f/624776/c/34306/s/31445c40/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:53:42+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252808.htm">
	<title>cnBeta.COM: M7协处理器：健康和健身应用开发者的福音</title>
	<link>http://www.cnbeta.com/articles/252808.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;科技博客Techcrunch周日撰文表示，iPhone 5S的发布也许没有任何惊喜。但是从工程技术角度来说，这是一次跨世代的升级。M7协处理器就是最好的代表，只是硬件给用户带来的体验相对软件带有滞后效应。以下为文章主要内容：&lt;/strong&gt;苹果发布iPhone 5S后，惊喜不多。不过M7协处理器算是其中一个亮点。而这一亮点需要被第三方开发者充分利用后，才能表现出它的优势。M7运动协处理器将跟踪运动和距离的功能集成到一块芯片，减小了电池的能耗，并且在开发上提供了新的可能。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31445c3e/sc/28/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252808.htm&amp;t=M7%E5%8D%8F%E5%A4%84%E7%90%86%E5%99%A8%EF%BC%9A%E5%81%A5%E5%BA%B7%E5%92%8C%E5%81%A5%E8%BA%AB%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E7%A6%8F%E9%9F%B3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252808.htm&amp;t=M7%E5%8D%8F%E5%A4%84%E7%90%86%E5%99%A8%EF%BC%9A%E5%81%A5%E5%BA%B7%E5%92%8C%E5%81%A5%E8%BA%AB%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E7%A6%8F%E9%9F%B3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252808.htm&amp;t=M7%E5%8D%8F%E5%A4%84%E7%90%86%E5%99%A8%EF%BC%9A%E5%81%A5%E5%BA%B7%E5%92%8C%E5%81%A5%E8%BA%AB%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E7%A6%8F%E9%9F%B3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252808.htm&amp;t=M7%E5%8D%8F%E5%A4%84%E7%90%86%E5%99%A8%EF%BC%9A%E5%81%A5%E5%BA%B7%E5%92%8C%E5%81%A5%E8%BA%AB%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E7%A6%8F%E9%9F%B3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252808.htm&amp;t=M7%E5%8D%8F%E5%A4%84%E7%90%86%E5%99%A8%EF%BC%9A%E5%81%A5%E5%BA%B7%E5%92%8C%E5%81%A5%E8%BA%AB%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E7%A6%8F%E9%9F%B3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609114452/u/47/f/624776/c/34306/s/31445c3e/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609114452/u/47/f/624776/c/34306/s/31445c3e/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609114452/u/47/f/624776/c/34306/s/31445c3e/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:53:04+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252807.htm">
	<title>cnBeta.COM: 佳能用35mm CMOS感光元件在低光环境中拍下 Full HD 萤火虫短片</title>
	<link>http://www.cnbeta.com/articles/252807.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;感谢&lt;a href=&quot;http://www.ming4.com/192.168.1.1/&quot; target=&quot;_blank&quot;&gt;192&lt;/a&gt;的投递&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;佳能在三月时推出了专用于极度低光环境内录影的 35mm 全画幅 CMOS 感光元件，而现在我们终于得以一窥其效果。和上次的拍星星不同，这一次佳能选择在日本石垣岛上记录下了一段森林中八重山姬（Yaeyama-hime）萤火虫飞舞的短片，整片以 Full HD 分辨率录制，拍摄时间为日落不久后 。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31445a88/sc/38/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252807.htm&amp;t=%E4%BD%B3%E8%83%BD%E7%94%A835mm+CMOS%E6%84%9F%E5%85%89%E5%85%83%E4%BB%B6%E5%9C%A8%E4%BD%8E%E5%85%89%E7%8E%AF%E5%A2%83%E4%B8%AD%E6%8B%8D%E4%B8%8B+Full+HD+%E8%90%A4%E7%81%AB%E8%99%AB%E7%9F%AD%E7%89%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252807.htm&amp;t=%E4%BD%B3%E8%83%BD%E7%94%A835mm+CMOS%E6%84%9F%E5%85%89%E5%85%83%E4%BB%B6%E5%9C%A8%E4%BD%8E%E5%85%89%E7%8E%AF%E5%A2%83%E4%B8%AD%E6%8B%8D%E4%B8%8B+Full+HD+%E8%90%A4%E7%81%AB%E8%99%AB%E7%9F%AD%E7%89%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252807.htm&amp;t=%E4%BD%B3%E8%83%BD%E7%94%A835mm+CMOS%E6%84%9F%E5%85%89%E5%85%83%E4%BB%B6%E5%9C%A8%E4%BD%8E%E5%85%89%E7%8E%AF%E5%A2%83%E4%B8%AD%E6%8B%8D%E4%B8%8B+Full+HD+%E8%90%A4%E7%81%AB%E8%99%AB%E7%9F%AD%E7%89%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252807.htm&amp;t=%E4%BD%B3%E8%83%BD%E7%94%A835mm+CMOS%E6%84%9F%E5%85%89%E5%85%83%E4%BB%B6%E5%9C%A8%E4%BD%8E%E5%85%89%E7%8E%AF%E5%A2%83%E4%B8%AD%E6%8B%8D%E4%B8%8B+Full+HD+%E8%90%A4%E7%81%AB%E8%99%AB%E7%9F%AD%E7%89%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252807.htm&amp;t=%E4%BD%B3%E8%83%BD%E7%94%A835mm+CMOS%E6%84%9F%E5%85%89%E5%85%83%E4%BB%B6%E5%9C%A8%E4%BD%8E%E5%85%89%E7%8E%AF%E5%A2%83%E4%B8%AD%E6%8B%8D%E4%B8%8B+Full+HD+%E8%90%A4%E7%81%AB%E8%99%AB%E7%9F%AD%E7%89%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609114253/u/47/f/624776/c/34306/s/31445a88/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609114253/u/47/f/624776/c/34306/s/31445a88/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609114253/u/47/f/624776/c/34306/s/31445a88/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:40:34+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252806.htm">
	<title>cnBeta.COM: 国外一少年打造出“骨骼”机械手套</title>
	<link>http://www.cnbeta.com/articles/252806.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;感谢&lt;a href=&quot;http://www.gadgetandgeek.com/super-exoskeleton-mechanical-glove/&quot; target=&quot;_blank&quot;&gt;gadgets&lt;/a&gt;的投递&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Charalampos Ioannou，一个生活在雅典的年仅17岁的高中生，是前往由谷歌与欧洲核子研究中心，乐高集体，美国国家地理以及科学美国合作主办的科学博览会中的15位国际竞争选手中的决赛选手之一，他设计的骨骼机械手套受到广泛的赞扬。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31445a87/sc/11/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252806.htm&amp;t=%E5%9B%BD%E5%A4%96%E4%B8%80%E5%B0%91%E5%B9%B4%E6%89%93%E9%80%A0%E5%87%BA%E2%80%9C%E9%AA%A8%E9%AA%BC%E2%80%9D%E6%9C%BA%E6%A2%B0%E6%89%8B%E5%A5%97&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252806.htm&amp;t=%E5%9B%BD%E5%A4%96%E4%B8%80%E5%B0%91%E5%B9%B4%E6%89%93%E9%80%A0%E5%87%BA%E2%80%9C%E9%AA%A8%E9%AA%BC%E2%80%9D%E6%9C%BA%E6%A2%B0%E6%89%8B%E5%A5%97&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252806.htm&amp;t=%E5%9B%BD%E5%A4%96%E4%B8%80%E5%B0%91%E5%B9%B4%E6%89%93%E9%80%A0%E5%87%BA%E2%80%9C%E9%AA%A8%E9%AA%BC%E2%80%9D%E6%9C%BA%E6%A2%B0%E6%89%8B%E5%A5%97&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252806.htm&amp;t=%E5%9B%BD%E5%A4%96%E4%B8%80%E5%B0%91%E5%B9%B4%E6%89%93%E9%80%A0%E5%87%BA%E2%80%9C%E9%AA%A8%E9%AA%BC%E2%80%9D%E6%9C%BA%E6%A2%B0%E6%89%8B%E5%A5%97&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252806.htm&amp;t=%E5%9B%BD%E5%A4%96%E4%B8%80%E5%B0%91%E5%B9%B4%E6%89%93%E9%80%A0%E5%87%BA%E2%80%9C%E9%AA%A8%E9%AA%BC%E2%80%9D%E6%9C%BA%E6%A2%B0%E6%89%8B%E5%A5%97&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609114252/u/47/f/624776/c/34306/s/31445a87/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609114252/u/47/f/624776/c/34306/s/31445a87/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609114252/u/47/f/624776/c/34306/s/31445a87/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:37:59+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252805.htm">
	<title>cnBeta.COM: Google 正在悄悄解决 Android 的碎片化</title>
	<link>http://www.cnbeta.com/articles/252805.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;为什么最近 Android 都没有大的版本更新？Ron Amadeo为您解答。&lt;/strong&gt;Android 4.3 已经推送到 Nexus 设备上一个月出头了，但是，就像以前的 Android 更新一样，新版本要推广到大众还需要很久很久。现在，只有6%多一点的 Android 使用者正在使用最新版。如果你有关注市面上各种不同的 Android 版本，你可能会注意到：没人在乎这个。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31445a86/sc/28/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252805.htm&amp;t=Google+%E6%AD%A3%E5%9C%A8%E6%82%84%E6%82%84%E8%A7%A3%E5%86%B3+Android+%E7%9A%84%E7%A2%8E%E7%89%87%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252805.htm&amp;t=Google+%E6%AD%A3%E5%9C%A8%E6%82%84%E6%82%84%E8%A7%A3%E5%86%B3+Android+%E7%9A%84%E7%A2%8E%E7%89%87%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252805.htm&amp;t=Google+%E6%AD%A3%E5%9C%A8%E6%82%84%E6%82%84%E8%A7%A3%E5%86%B3+Android+%E7%9A%84%E7%A2%8E%E7%89%87%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252805.htm&amp;t=Google+%E6%AD%A3%E5%9C%A8%E6%82%84%E6%82%84%E8%A7%A3%E5%86%B3+Android+%E7%9A%84%E7%A2%8E%E7%89%87%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252805.htm&amp;t=Google+%E6%AD%A3%E5%9C%A8%E6%82%84%E6%82%84%E8%A7%A3%E5%86%B3+Android+%E7%9A%84%E7%A2%8E%E7%89%87%E5%8C%96&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609114251/u/47/f/624776/c/34306/s/31445a86/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609114251/u/47/f/624776/c/34306/s/31445a86/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609114251/u/47/f/624776/c/34306/s/31445a86/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:37:23+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252804.htm">
	<title>cnBeta.COM: 中国电信推新版iPhone套餐撒手锏：家庭共享主副卡</title>
	<link>http://www.cnbeta.com/articles/252804.htm</link>
	<content:encoded>&lt;p&gt;在iPhone 5s/5c即将于9月20日发售之际，有业内人士透露，中国电信已为电信版iPhone 5s/5c准备了多个卖点，以便区别于其他制式，&lt;strong&gt;其中的一个重要卖点，就是新版iPhone合约套餐将支持主副卡业务，家庭成员可共享套餐资源。&lt;/strong&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31446b34/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252804.htm&amp;t=%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1%E6%8E%A8%E6%96%B0%E7%89%88iPhone%E5%A5%97%E9%A4%90%E6%92%92%E6%89%8B%E9%94%8F%EF%BC%9A%E5%AE%B6%E5%BA%AD%E5%85%B1%E4%BA%AB%E4%B8%BB%E5%89%AF%E5%8D%A1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252804.htm&amp;t=%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1%E6%8E%A8%E6%96%B0%E7%89%88iPhone%E5%A5%97%E9%A4%90%E6%92%92%E6%89%8B%E9%94%8F%EF%BC%9A%E5%AE%B6%E5%BA%AD%E5%85%B1%E4%BA%AB%E4%B8%BB%E5%89%AF%E5%8D%A1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252804.htm&amp;t=%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1%E6%8E%A8%E6%96%B0%E7%89%88iPhone%E5%A5%97%E9%A4%90%E6%92%92%E6%89%8B%E9%94%8F%EF%BC%9A%E5%AE%B6%E5%BA%AD%E5%85%B1%E4%BA%AB%E4%B8%BB%E5%89%AF%E5%8D%A1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252804.htm&amp;t=%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1%E6%8E%A8%E6%96%B0%E7%89%88iPhone%E5%A5%97%E9%A4%90%E6%92%92%E6%89%8B%E9%94%8F%EF%BC%9A%E5%AE%B6%E5%BA%AD%E5%85%B1%E4%BA%AB%E4%B8%BB%E5%89%AF%E5%8D%A1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252804.htm&amp;t=%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1%E6%8E%A8%E6%96%B0%E7%89%88iPhone%E5%A5%97%E9%A4%90%E6%92%92%E6%89%8B%E9%94%8F%EF%BC%9A%E5%AE%B6%E5%BA%AD%E5%85%B1%E4%BA%AB%E4%B8%BB%E5%89%AF%E5%8D%A1&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608967949/u/47/f/624776/c/34306/s/31446b34/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608967949/u/47/f/624776/c/34306/s/31446b34/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608967949/u/47/f/624776/c/34306/s/31446b34/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:34:56+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252803.htm">
	<title>cnBeta.COM: 北京联通iPhone5s套餐出炉:3年286元可零元购</title>
	<link>http://www.cnbeta.com/articles/252803.htm</link>
	<content:encoded>&lt;p&gt;继京东商城等渠道商曝光了联通版iPhone 5c合约计划后，北京联通iPhone 5s合约套餐也已出炉，&lt;strong&gt;用户最低选择386元套餐，并连续在网30个月，即可零元购得iPhone 5s，更为廉价的iPhone 5c连续在网3年选286元套餐也可零元购机。&lt;/strong&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31446b33/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252803.htm&amp;t=%E5%8C%97%E4%BA%AC%E8%81%94%E9%80%9AiPhone5s%E5%A5%97%E9%A4%90%E5%87%BA%E7%82%89%3A3%E5%B9%B4286%E5%85%83%E5%8F%AF%E9%9B%B6%E5%85%83%E8%B4%AD&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252803.htm&amp;t=%E5%8C%97%E4%BA%AC%E8%81%94%E9%80%9AiPhone5s%E5%A5%97%E9%A4%90%E5%87%BA%E7%82%89%3A3%E5%B9%B4286%E5%85%83%E5%8F%AF%E9%9B%B6%E5%85%83%E8%B4%AD&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252803.htm&amp;t=%E5%8C%97%E4%BA%AC%E8%81%94%E9%80%9AiPhone5s%E5%A5%97%E9%A4%90%E5%87%BA%E7%82%89%3A3%E5%B9%B4286%E5%85%83%E5%8F%AF%E9%9B%B6%E5%85%83%E8%B4%AD&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252803.htm&amp;t=%E5%8C%97%E4%BA%AC%E8%81%94%E9%80%9AiPhone5s%E5%A5%97%E9%A4%90%E5%87%BA%E7%82%89%3A3%E5%B9%B4286%E5%85%83%E5%8F%AF%E9%9B%B6%E5%85%83%E8%B4%AD&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252803.htm&amp;t=%E5%8C%97%E4%BA%AC%E8%81%94%E9%80%9AiPhone5s%E5%A5%97%E9%A4%90%E5%87%BA%E7%82%89%3A3%E5%B9%B4286%E5%85%83%E5%8F%AF%E9%9B%B6%E5%85%83%E8%B4%AD&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608967948/u/47/f/624776/c/34306/s/31446b33/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608967948/u/47/f/624776/c/34306/s/31446b33/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608967948/u/47/f/624776/c/34306/s/31446b33/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:33:02+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252802.htm">
	<title>cnBeta.COM: 云智能手机将对Android和iPhone生态构成威胁</title>
	<link>http://www.cnbeta.com/articles/252802.htm</link>
	<content:encoded>&lt;p&gt;2005年的时候，诺基亚还是全球最大的手机厂商，而且风头正劲。然而到了今天，它已经沦落到要分拆变卖的地步了。&lt;strong&gt;虽然照现在的情况来看，似乎没有哪家厂商能够取代三星和苹果在智能手机领域的领导地位，然而世事无常，谁也不敢保证它们是否会重演诺基亚的历史。&lt;/strong&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31446b31/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252802.htm&amp;t=%E4%BA%91%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%B0%86%E5%AF%B9Android%E5%92%8CiPhone%E7%94%9F%E6%80%81%E6%9E%84%E6%88%90%E5%A8%81%E8%83%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252802.htm&amp;t=%E4%BA%91%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%B0%86%E5%AF%B9Android%E5%92%8CiPhone%E7%94%9F%E6%80%81%E6%9E%84%E6%88%90%E5%A8%81%E8%83%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252802.htm&amp;t=%E4%BA%91%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%B0%86%E5%AF%B9Android%E5%92%8CiPhone%E7%94%9F%E6%80%81%E6%9E%84%E6%88%90%E5%A8%81%E8%83%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252802.htm&amp;t=%E4%BA%91%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%B0%86%E5%AF%B9Android%E5%92%8CiPhone%E7%94%9F%E6%80%81%E6%9E%84%E6%88%90%E5%A8%81%E8%83%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252802.htm&amp;t=%E4%BA%91%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%B0%86%E5%AF%B9Android%E5%92%8CiPhone%E7%94%9F%E6%80%81%E6%9E%84%E6%88%90%E5%A8%81%E8%83%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608967947/u/47/f/624776/c/34306/s/31446b31/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608967947/u/47/f/624776/c/34306/s/31446b31/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608967947/u/47/f/624776/c/34306/s/31446b31/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:29:16+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252801.htm">
	<title>cnBeta.COM: 沙特王子估Twitter明年初IPO 不会出售所持股份</title>
	<link>http://www.cnbeta.com/articles/252801.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;亿万富翁沙特王子阿尔瓦利德·本·塔拉尔(Alwaleed Bin Talal)预计Twitter将在今年末或2014年初进行IPO（首次公开募股），并表示不会抛售其所持有该公司的股份。&lt;/strong&gt;路透社报道，阿尔瓦利德王子在周日接受电话访问时表示，“很明显，从他们的发展步伐可以看出，他们愿意尽快进行IPO。我认为，将在今年或明年初进行。”阿 尔瓦利德王子是沙特已故国王法赫德的侄子，被誉为“沙特的比尔·盖茨”，拥有投资公司王国控股集团(Kingdom Holding Company)。他在2011年向这家社交媒体巨头投资了3亿美元。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31446b2f/sc/11/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252801.htm&amp;t=%E6%B2%99%E7%89%B9%E7%8E%8B%E5%AD%90%E4%BC%B0Twitter%E6%98%8E%E5%B9%B4%E5%88%9DIPO+%E4%B8%8D%E4%BC%9A%E5%87%BA%E5%94%AE%E6%89%80%E6%8C%81%E8%82%A1%E4%BB%BD&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252801.htm&amp;t=%E6%B2%99%E7%89%B9%E7%8E%8B%E5%AD%90%E4%BC%B0Twitter%E6%98%8E%E5%B9%B4%E5%88%9DIPO+%E4%B8%8D%E4%BC%9A%E5%87%BA%E5%94%AE%E6%89%80%E6%8C%81%E8%82%A1%E4%BB%BD&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252801.htm&amp;t=%E6%B2%99%E7%89%B9%E7%8E%8B%E5%AD%90%E4%BC%B0Twitter%E6%98%8E%E5%B9%B4%E5%88%9DIPO+%E4%B8%8D%E4%BC%9A%E5%87%BA%E5%94%AE%E6%89%80%E6%8C%81%E8%82%A1%E4%BB%BD&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252801.htm&amp;t=%E6%B2%99%E7%89%B9%E7%8E%8B%E5%AD%90%E4%BC%B0Twitter%E6%98%8E%E5%B9%B4%E5%88%9DIPO+%E4%B8%8D%E4%BC%9A%E5%87%BA%E5%94%AE%E6%89%80%E6%8C%81%E8%82%A1%E4%BB%BD&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252801.htm&amp;t=%E6%B2%99%E7%89%B9%E7%8E%8B%E5%AD%90%E4%BC%B0Twitter%E6%98%8E%E5%B9%B4%E5%88%9DIPO+%E4%B8%8D%E4%BC%9A%E5%87%BA%E5%94%AE%E6%89%80%E6%8C%81%E8%82%A1%E4%BB%BD&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608967946/u/47/f/624776/c/34306/s/31446b2f/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608967946/u/47/f/624776/c/34306/s/31446b2f/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608967946/u/47/f/624776/c/34306/s/31446b2f/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T22:28:27+00:00</dc:date>
</item>
<item rdf:about="http://www.codeproject.com/Articles/5851/Versioning-Controlled-Build">
	<title>CodeProject Last Articles: Versioning Controlled Build</title>
	<link>http://www.codeproject.com/Articles/5851/Versioning-Controlled-Build</link>
	<content:encoded>A Visual Studio add-in and command-line utility that automates versioning of .NET and VC++ projects</content:encoded>
	<dc:date>2013-09-15T22:19:00+00:00</dc:date>
</item>
<item rdf:about="http://www.codeproject.com/Articles/653608/Robot-Alarm-Clock">
	<title>CodeProject Last Articles: Robot Alarm Clock</title>
	<link>http://www.codeproject.com/Articles/653608/Robot-Alarm-Clock</link>
	<content:encoded>Bluetooth robotic alarm clock using C#</content:encoded>
	<dc:date>2013-09-15T21:50:00+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252800.htm">
	<title>cnBeta.COM: 酷科技：把手机传感器植入人体</title>
	<link>http://www.cnbeta.com/articles/252800.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;感谢&lt;a href=&quot;http://www.ming4.com/192.168.1.1/&quot; target=&quot;_blank&quot;&gt;192&lt;/a&gt;的投递&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;智能手机里的微观传感器和电机能检测运动，有一天或许可以帮助相机对焦。现在，科学家们为这些机器设计与人体相容的元件，这将可能使它们非常适合使用在医疗设备，如仿生肢体和其他人造人体部分，研究人员说。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3142ddde/sc/17/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252800.htm&amp;t=%E9%85%B7%E7%A7%91%E6%8A%80%EF%BC%9A%E6%8A%8A%E6%89%8B%E6%9C%BA%E4%BC%A0%E6%84%9F%E5%99%A8%E6%A4%8D%E5%85%A5%E4%BA%BA%E4%BD%93&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252800.htm&amp;t=%E9%85%B7%E7%A7%91%E6%8A%80%EF%BC%9A%E6%8A%8A%E6%89%8B%E6%9C%BA%E4%BC%A0%E6%84%9F%E5%99%A8%E6%A4%8D%E5%85%A5%E4%BA%BA%E4%BD%93&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252800.htm&amp;t=%E9%85%B7%E7%A7%91%E6%8A%80%EF%BC%9A%E6%8A%8A%E6%89%8B%E6%9C%BA%E4%BC%A0%E6%84%9F%E5%99%A8%E6%A4%8D%E5%85%A5%E4%BA%BA%E4%BD%93&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252800.htm&amp;t=%E9%85%B7%E7%A7%91%E6%8A%80%EF%BC%9A%E6%8A%8A%E6%89%8B%E6%9C%BA%E4%BC%A0%E6%84%9F%E5%99%A8%E6%A4%8D%E5%85%A5%E4%BA%BA%E4%BD%93&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252800.htm&amp;t=%E9%85%B7%E7%A7%91%E6%8A%80%EF%BC%9A%E6%8A%8A%E6%89%8B%E6%9C%BA%E4%BC%A0%E6%84%9F%E5%99%A8%E6%A4%8D%E5%85%A5%E4%BA%BA%E4%BD%93&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608948309/u/47/f/624776/c/34306/s/3142ddde/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608948309/u/47/f/624776/c/34306/s/3142ddde/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608948309/u/47/f/624776/c/34306/s/3142ddde/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T19:10:29+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252799.htm">
	<title>cnBeta.COM: 开启DDR4时代 G.Skill展出新一代内存产品</title>
	<link>http://www.cnbeta.com/articles/252799.htm</link>
	<content:encoded>&lt;p&gt;尽管全球首款量产型DDR4内存模块，被全球最大储存公司三星无情抢夺，但是作为最先宣布于IDF2013大会，公布旗下DDR4产品的产商，&lt;strong&gt;G.Skill（芝奇）日前终于正式公布了其DDR4成品&lt;/strong&gt;，意味着DDR4时代即将迎来更多竞争对手。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3142dddb/sc/18/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252799.htm&amp;t=%E5%BC%80%E5%90%AFDDR4%E6%97%B6%E4%BB%A3+G.Skill%E5%B1%95%E5%87%BA%E6%96%B0%E4%B8%80%E4%BB%A3%E5%86%85%E5%AD%98%E4%BA%A7%E5%93%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252799.htm&amp;t=%E5%BC%80%E5%90%AFDDR4%E6%97%B6%E4%BB%A3+G.Skill%E5%B1%95%E5%87%BA%E6%96%B0%E4%B8%80%E4%BB%A3%E5%86%85%E5%AD%98%E4%BA%A7%E5%93%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252799.htm&amp;t=%E5%BC%80%E5%90%AFDDR4%E6%97%B6%E4%BB%A3+G.Skill%E5%B1%95%E5%87%BA%E6%96%B0%E4%B8%80%E4%BB%A3%E5%86%85%E5%AD%98%E4%BA%A7%E5%93%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252799.htm&amp;t=%E5%BC%80%E5%90%AFDDR4%E6%97%B6%E4%BB%A3+G.Skill%E5%B1%95%E5%87%BA%E6%96%B0%E4%B8%80%E4%BB%A3%E5%86%85%E5%AD%98%E4%BA%A7%E5%93%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252799.htm&amp;t=%E5%BC%80%E5%90%AFDDR4%E6%97%B6%E4%BB%A3+G.Skill%E5%B1%95%E5%87%BA%E6%96%B0%E4%B8%80%E4%BB%A3%E5%86%85%E5%AD%98%E4%BA%A7%E5%93%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608948308/u/47/f/624776/c/34306/s/3142dddb/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608948308/u/47/f/624776/c/34306/s/3142dddb/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608948308/u/47/f/624776/c/34306/s/3142dddb/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T19:08:56+00:00</dc:date>
</item>
<item rdf:about="http://www.cnblogs.com/yexiaochai/p/3322477.html">
	<title>博客园_首页: 仿iphone日历插件(beta) - 叶小钗</title>
	<link>http://www.cnblogs.com/yexiaochai/p/3322477.html</link>
	<content:encoded>【摘要】前言小伙伴们好，很久不见了。最近工作进入正常期了，所以慢慢的悠闲的时间久没有了，所以不能每天水一篇了。最近也在听师傅（http://home.cnblogs.com/u/aaronjs/）的教导开始阅读jquery源码了，怎么说呢，阅读的效果其实不是太好。一来是时间断断续续的没有接上，今天读完明天又... &lt;a href=&quot;http://www.cnblogs.com/yexiaochai/p/3322477.html&quot; target=&quot;_blank&quot;&gt;阅读全文&lt;/a&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3322477&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T16:24:00+00:00</dc:date>
	<dc:creator>叶小钗</dc:creator>
</item>
<item rdf:about="http://www.cnblogs.com/lyhabc/p/3322437.html">
	<title>博客园_首页: 挺好用的SQLSERVER数据库自动备份工具SQLBackupAndFTP(功能全面) - 桦仔</title>
	<link>http://www.cnblogs.com/lyhabc/p/3322437.html</link>
	<content:encoded>&lt;h1&gt;挺好用的SQLSERVER数据库自动备份工具SQLBackupAndFTP(功能全面)&lt;/h1&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;这个工具主要就是自动备份数据库，一键还原数据库，发送备份数据库日志报告到邮箱，自动压缩备份好的数据库&lt;/p&gt;&lt;p&gt;定期执行数据库备份任务，取代SSMS的维护计划，上传数据库备份文件到FTP服务器、其他网络硬盘等&lt;/p&gt;&lt;p&gt;软件有&lt;strong&gt;免费&lt;/strong&gt;和&lt;strong&gt;付费&lt;/strong&gt;两种模式，不过本人觉得&lt;strong&gt;免费版本&lt;/strong&gt;的功能已经足够了&lt;/p&gt;&lt;p&gt;支持SQLSERVER版本：SQLSERVER2000、SQLSERVER2005、SQLSERVER2008、SQLSERVER2008 R2、SQLSERVER2012&lt;/p&gt;&lt;p&gt;当你的电脑是&amp;nbsp;SQL Server Express 2005 and SQL Server Express 2008版本的时候特别有用&lt;/p&gt;&lt;p&gt;因为SQLSERVER Express版本没有维护计划，使用SQLBackupAndFTP可以解决这个问题&lt;/p&gt;&lt;p&gt;这个工具也有MYSQL版本&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15231358-71bdf9ec23cc4c248343a8dba8cc0f8b.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;MYSQL版本下载地址：&lt;strong&gt;&lt;a href=&quot;http://mysqlbackupftp.com/download/&quot;&gt;http://mysqlbackupftp.com/download/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;SQLSERVER Azure特别版下载地址：&lt;strong&gt;&lt;a href=&quot;http://files.cnblogs.com/lyhabc/SqlBakSetupAzure.rar&quot;&gt;http://files.cnblogs.com/lyhabc/SqlBakSetupAzure.rar&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;官方网站：&lt;strong&gt;&lt;a href=&quot;http://sqlbackupandftp.com/&quot;&gt;http://sqlbackupandftp.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15120826-040ff5cd387e477bb87f61ecf6118b00.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15120947-e295d96479f34e4cb3a0db2e4bd33ffc.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;安装路径：C:\Program Files\Pranas.NET\SQLBackupAndFTP&lt;/p&gt;&lt;p&gt;安装目录下主要都是一些DLL&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15121632-b7b5f32a06414b7d93e7b5dcbd695bc1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15121646-2ee2f1a04328492588e5a5727947af4a.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;SQLBackupAndFTP会新建一个Windows服务，用来定时备份数据库，取代SSMS的维护计划，&lt;/p&gt;&lt;p&gt;我们公司开发的数据库备份软件也是使用Windows服务的方式来定时备份数据库的，其实这些软件的原理差不多&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15121913-0dfbc4698dfb4e18b74697f734d1d68e.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;看到上面这些图片，我相信想破解这款软件的人开始蠢蠢欲动了，不过最好不要破解，尊重一下别人&lt;/p&gt;&lt;p&gt;大家使用免费版本就行了，最好不要破解他的付费功能&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;一些设置选项&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;首先设置数据库连接&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15122226-5bbf600ec7ca4bdc9f2b7b01ace226fd.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;勾选中要备份的数据库&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15123334-631e6223e30a41c388627bd4ecad5e91.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;设置邮件，把备份报告发到邮箱&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15122550-42dfe43bb89549a592390457818d85b9.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;设置定时任务，可以设置完整备份，差异备份，事务日志备份，&lt;/p&gt;&lt;p&gt;还可以设置使用系统任务计划来运行定时任务还是使用软件的Windows服务来运行&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15122639-a4ae7b1632e148a5a9f4cc587c9c7339.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;软件本身也预设了一些定时选项，用鼠标点击一下就可以应用了&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15124236-dfdd8e673a2c4e71ab5861736307b852.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;设置备份选项，包括大型数据库临时文件存放路径，压缩备份文件选项，是否校验备份文件，备份数据库日志存放路径，加密备份文件（收费）&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15122859-b539145ea66e44bea5a11d2bd6ee1101.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15122930-081051c460ca42d4a39b2030a0f7df7d.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;我把备份数据库日志和大型数据库临时文件的路径都设置在D:\MSSQL\Databackup&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15123112-1409f548e52b415f884f96418464f540.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;设置了上面的备份路径之后还需要回到主界面设置备份路径，备份数据库文件可以上传到FTP服务器，DROPBOX，SKYDRIVE(要付费)等&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15124930-d3c61a7ce95d45be9d3465f7c0e5ab3b.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;我把备份文件放到与备份数据库日志同一路径下 D:\MSSQL\Databackup&lt;/p&gt;&lt;p&gt;软件还可以设置自动删除多久以前的备份文件，还可以备份到远程路径，NAS存储上，&lt;/p&gt;&lt;p&gt;如果是网络路径，可以点击&amp;ldquo;Test&amp;rdquo;按钮测试是否连通&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15125243-628ad4d921ba4620ad6c8853184f35c3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;设置FTP&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15125746-cc4d5f7659ee4bb8a17d49e6d9dd5fa4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15125759-91d05aa2c2bf4bd1b8299f7261ae1fb6.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;全部设置完毕之后可以把配置保存起来，当重装软件，或者换了机器之后就不用再设置了&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;导出配置文件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15123533-43674aa3fa374085abaea82139b5fd32.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15123541-467fc7f7ce2e42949ee3d704d50b49d2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;设置好之后可以点击&amp;ldquo;run now&amp;rdquo;按钮手动执行备份，以后就会按照定时任务设置里的设置计划去执行数据库备份操作了&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15123740-457128e618ed4f16b52f30eaf5697eb0.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15130150-ec40db5570054d8d8634fa2ffaa7aaab.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;打开邮箱就能看到邮件了&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15130327-f2e438b82e204478bac04fa9abec8dcc.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;在路径下可以看到日志和已经压缩了的备份文件&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15130452-051c92733a084118bb202427b2b2ba47.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;日志&lt;/p&gt;&lt;div&gt;&lt;div id=&quot;cnblogs_code_open_91d75654-1e95-45c1-bc56-2abdc1a51b16&quot; class=&quot;cnblogs_code_hide&quot;&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; run &lt;span&gt;2013&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;09&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;25&lt;/span&gt; &lt;span&gt;by&lt;/span&gt;&lt;span&gt; Administrator&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 3&lt;/span&gt; SqlBackupAndFtp &lt;span&gt;9.0&lt;/span&gt;.&lt;span&gt;28.41473&lt;/span&gt; Free (started manually) at xxx (Microsoft Windows NT &lt;span&gt;6.1&lt;/span&gt;.&lt;span&gt;7600.0&lt;/span&gt;) (.NET: &lt;span&gt;2.0&lt;/span&gt;.&lt;span&gt;50727.4927&lt;/span&gt;, &lt;span&gt;3.0&lt;/span&gt;.&lt;span&gt;30729.4926&lt;/span&gt;, &lt;span&gt;3.5&lt;/span&gt;.&lt;span&gt;30729.4926&lt;/span&gt;, &lt;span&gt;4.0&lt;/span&gt;.&lt;span&gt;30319&lt;/span&gt;&lt;span&gt;)&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;xxx name: C:\xxxx\Desktop\new.jobx&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;SUMMARY:&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;Database&lt;/span&gt; GPOSDB: Folder &lt;span&gt;-&lt;/span&gt;&lt;span&gt; Success&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 9&lt;/span&gt; DETAILED &lt;span&gt;LOG&lt;/span&gt;&lt;span&gt;:&lt;br /&gt;&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;19&lt;/span&gt;    Creating &lt;span&gt;backup&lt;/span&gt; &lt;span&gt;of&lt;/span&gt; GPOSDB &lt;span&gt;to&lt;/span&gt; D:\MSSQL\Databackup (&lt;span&gt;full&lt;/span&gt;&lt;span&gt;)&lt;br /&gt;&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;    Verifying &lt;span&gt;backup&lt;/span&gt; &lt;span&gt;file&lt;/span&gt;&lt;span&gt; GPOSDB201309151300.bak&lt;br /&gt;&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;    Compressing (internal zip) GPOSDB201309151300.bak &lt;span&gt;to&lt;/span&gt;&lt;span&gt; D:\MSSQL\Databackup&lt;br /&gt;&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;21&lt;/span&gt;    Compression completed (archive: &quot;GPOSDB201309151300.zip&quot;, size: &lt;span&gt;885&lt;/span&gt;&lt;span&gt; KB)&lt;br /&gt;&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;21&lt;/span&gt;    Removing GPOSDB201309151300.bak &lt;span&gt;from&lt;/span&gt;&lt;span&gt; D:\MSSQL\Databackup&lt;br /&gt;&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;21&lt;/span&gt;    Connecting &lt;span&gt;to&lt;/span&gt;&lt;span&gt; D:\MSSQL\Databackup&lt;br /&gt;&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;21&lt;/span&gt;    &lt;span&gt;File&lt;/span&gt; GPOSDB201309151300.zip &lt;span&gt;is&lt;/span&gt; already &lt;span&gt;on&lt;/span&gt;&lt;span&gt; the destination&lt;br /&gt;&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;21&lt;/span&gt;    Disconnecting &lt;span&gt;from&lt;/span&gt;&lt;span&gt; D:\MSSQL\Databackup&lt;br /&gt;&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;21&lt;/span&gt;&lt;span&gt;    Cleaning D:\MSSQL\Databackup&lt;br /&gt;&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;21&lt;/span&gt;    Connecting &lt;span&gt;to&lt;/span&gt;&lt;span&gt; D:\MSSQL\Databackup&lt;br /&gt;&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;21&lt;/span&gt;&lt;span&gt;    Cleaning destination folder&lt;br /&gt;&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;21&lt;/span&gt;    Disconnecting &lt;span&gt;from&lt;/span&gt;&lt;span&gt; D:\MSSQL\Databackup&lt;br /&gt;&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2013&lt;/span&gt; &lt;span&gt;13&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;21&lt;/span&gt;&lt;span&gt;    Job finished&lt;br /&gt;&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; Sending report &lt;span&gt;to&lt;/span&gt; xxxx&lt;span&gt;@163&lt;/span&gt;.com (SMTP) &lt;/div&gt;&lt;/div&gt;&lt;p&gt;可以看到备份文件大小为5.1MB，压缩之后是886KB，压缩比例挺高的&lt;br /&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15130637-fff9205e00e14dfdb57b7cae9aaa1b9f.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;一键还原数据库&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点击还原按钮&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15130955-f9eb5e0e9c6e4243b5c6ab07ac87557f.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;选择数据库备份文件的路径&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15131124-d229af3c36574b94b3dd00ff954dc48e.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15131134-12b5fdd6a4f449268c1093dfd90a5406.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;如果数据库正在使用中,他会问你是否终止数据库的所有进程&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15131502-b1cef0b8ac97444eb27bdf980247c598.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;点击&quot;是&quot;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15131514-9bfabd2c8b6f4bd1b5aecc96e763525f.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;还原成功&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;主要功能限制&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/257159/201309/15231806-5eaee2604b974a9a8a57e65f94ff3f04.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;定时任务只支持2个数据库，不过这些功能限制对于我本人来讲影响不大o(&amp;cap;_&amp;cap;)o &lt;/p&gt;&lt;p&gt;SQLBackupAndFTP软件介绍到这里了~&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;如有不对的地方，欢迎大家拍砖o(&amp;cap;_&amp;cap;)o&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3322437&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/lyhabc/p/3322437.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/lyhabc/p/3322437.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-15T16:03:00+00:00</dc:date>
	<dc:creator>桦仔</dc:creator>
</item>
<item rdf:about="http://blog.jobbole.com/?p=47031">
	<title>博客-伯乐在线: 解耦HTML、CSS和JavaScript</title>
	<link>http://blog.jobbole.com/47031/</link>
	<content:encoded>&lt;p&gt;当前在互联网上，任何一个稍微复杂的网站或者应用程序都会包含许多HTML、CSS和JavaScript。随着互联网运用的发展以及我们对它的依赖性日益增加，设定一个关于组织和维护你的前端代码的计划是绝对需要的。

当今的一些大型互联网公司，由于越来越多的人会接触到日益增加的前端代码，它们会试图去坚持代码的模块化。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://blog.jobbole.com/47031/&quot;&gt;解耦HTML、CSS和JavaScript&lt;/a&gt;，首发于&lt;a href=&quot;http://blog.jobbole.com&quot;&gt;博客 - 伯乐在线&lt;/a&gt;。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-15T15:30:15+00:00</dc:date>
</item>
<item rdf:about="http://www.cnblogs.com/wukong65/p/3321683.html">
	<title>博客园_首页: 【Maven实战】依赖的范围 - 悟空65</title>
	<link>http://www.cnblogs.com/wukong65/p/3321683.html</link>
	<content:encoded>&lt;p&gt;在Maven中有三大模块，分别是依赖、仓库、生命周期和插件，我们接下来下来介绍下依赖，为了方便起见我们还是以案例来说：&lt;/p&gt;&lt;p&gt;1、首先建立一个maven项目，这里我建立一个user的项目&lt;/p&gt;&lt;p&gt;2、接下来我们在这个项目中要使用到hibernate框架，此时就要在此项目中加入hibernate的支持，而之前我们讲到maven会自动的为我们加入jar包，但是前提是我们要找到怎么样编写hibernate的引用，如何编写呢？接下来我们就要牵涉到依赖的查询，在maven中所有的依赖都是通过坐标来保存的(GAV--&amp;gt;groupId,artifactId,version)，在网上有一些仓库为我们提供了一下项目的坐标，比如：&lt;a href=&quot;http://mvnrepository.com/&quot; target=&quot;_blank&quot;&gt;http://mvnrepository.com/&lt;/a&gt;，&lt;a href=&quot;http://www.sonatype.org/nexus/&quot; target=&quot;_blank&quot;&gt;http://www.sonatype.org/nexus/&lt;/a&gt;等等，这里我们就使用mvnrepository仓库了，在里面搜索hibernate就能找到对应的hibernate包，如下：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/472286/201309/14164041-3dbee685a36d48dd802e2c18d67d0fa3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;如图，只需要将其中的dependency拷贝到当前项目的pom.xml中即可，如下：&lt;/p&gt;&lt;div&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 2&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;junit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;junit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 5&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.10&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 6&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.hibernate&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;hibernate-core&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.2.5.Final&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;保存后，maven就会首先检查本地仓库中是否有hibernate的支持包，如果没有的话则会到网上进行下载，这个过程可能会稍微有点慢！&lt;/p&gt;&lt;p&gt;这里附上hibernate的配置文件和数据库的创建脚本：&lt;/p&gt;&lt;div&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version='1.0' encoding='UTF-8'&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE hibernate-configuration PUBLIC&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;          &quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;          &quot;http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Generated by MyEclipse Hibernate Tools.                   &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hibernate-configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;session-factory&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;dialect&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;            org.hibernate.dialect.MySQLDialect&lt;br /&gt;&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;connection.url&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;            jdbc:mysql://localhost:3306/user&lt;br /&gt;&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;connection.username&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;root&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;connection.password&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;wangzhen&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;connection.driver_class&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;            org.gjt.mm.mysql.Driver&lt;br /&gt;&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;myeclipse.connection.profile&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;show_sql&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;format_sql&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;22&lt;/span&gt;         &lt;br /&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mapping &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;com.lq.wangzhen.user.vo.User&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;session-factory&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;hibernate-configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;数据库user的创建脚本：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/472286/201309/14170927-21717996fb674eb4a49e320da09fd1a0.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;3、完成后我们在src下再建立一个文件夹，src/main/resources用来保存hibernate的资源文件和log4j的日志文件，这样的话，我们还要加入log4j的jar包，我们继续到仓库里面搜索log4j对应的依赖坐标。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/472286/201309/14165552-848b9b2a6e224307884176ff66ac185f.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;继续在pom.xml中加入对log4j的支持：&lt;/p&gt;&lt;div&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 2&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;junit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;junit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 5&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.10&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 6&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.hibernate&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;hibernate-core&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.2.5.Final&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;log4j&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;15&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;log4j&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.2.17&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;4、因为要进行数据库的连接，所以这里还要加入对mysql数据库的依赖：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/472286/201309/14171202-1d7c0253fd1e4d1b9d0bdd688ee430de.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;继续在pom.xml中加入对mysql的依赖支持：&lt;/p&gt;&lt;div&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 2&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;junit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;junit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 5&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.10&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 6&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.hibernate&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;hibernate-core&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.2.5.Final&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;log4j&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;15&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;log4j&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.2.17&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;19&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;20&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mysql-connector-java&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;21&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.1.26&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;5、编写vo类User：&lt;/p&gt;&lt;div&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lq.wangzhen.user.vo;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.persistence.Entity;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.persistence.GeneratedValue;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.persistence.Id;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.persistence.Table;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 8&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;@Entity&lt;br /&gt;&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; @Table(name = &quot;t_user&quot;&lt;span&gt;)&lt;br /&gt;&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; User {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;br /&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer id;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String username;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String password;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String email;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     &lt;br /&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    @Id&lt;br /&gt;&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    @GeneratedValue&lt;br /&gt;&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getId() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setId(Integer id) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getUsername() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; username;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUsername(String username) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.username =&lt;span&gt; username;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getPassword() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; password;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPassword(String password) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.password =&lt;span&gt; password;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getEmail() {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; email;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setEmail(String email) {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.email =&lt;span&gt; email;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;     &lt;br /&gt;&lt;span&gt;45&lt;/span&gt;     &lt;br /&gt;&lt;span&gt;46&lt;/span&gt; }&lt;/div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;对应的表t_user的创建脚本：&lt;/p&gt;&lt;div&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;create&lt;/span&gt; &lt;span&gt;table&lt;/span&gt;&lt;span&gt; t_user&lt;br /&gt;&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;(&lt;br /&gt;&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;      id &lt;span&gt;int&lt;/span&gt; &lt;span&gt;primary&lt;/span&gt; &lt;span&gt;key&lt;/span&gt;&lt;span&gt; auto_increment,&lt;br /&gt;&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;      username &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;100&lt;/span&gt;&lt;span&gt;),&lt;br /&gt;&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;      password &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;32&lt;/span&gt;&lt;span&gt;),&lt;br /&gt;&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;      email &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;100&lt;/span&gt;&lt;span&gt;)&lt;br /&gt;&lt;/span&gt;&lt;span&gt;7&lt;/span&gt; );&lt;/div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/472286/201309/14191452-d51b2d3b35de45679539c646f61e60b5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;6、编写测试类，在编写测试类之前我们要首先编写Hibernate的一个工具类，用来获得Session对象：&lt;/p&gt;&lt;div&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lq.wangzhen.user.vo;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.hibernate.Session;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.hibernate.SessionFactory;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.hibernate.cfg.Configuration;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; HibernateUntil {&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; SessionFactory factory = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;br /&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;static&lt;/span&gt;&lt;span&gt;{&lt;br /&gt;&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         &lt;br /&gt;&lt;span&gt;13&lt;/span&gt;         factory = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Configuration().configure().buildSessionFactory();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;br /&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Session openSession(){&lt;br /&gt;&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; factory.openSession();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; }&lt;/div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;然后在编写测试类：&lt;/p&gt;&lt;div&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lq.wangzhen.test;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.hibernate.Session;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.Assert;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.Test;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;br /&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lq.wangzhen.user.vo.HibernateUntil;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lq.wangzhen.user.vo.User;&lt;br /&gt;&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;br /&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; TestUser {&lt;br /&gt;&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;br /&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    @Test&lt;br /&gt;&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testAdd(){&lt;br /&gt;&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         Session session =&lt;span&gt; HibernateUntil.openSession();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;        session.beginTransaction();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         &lt;br /&gt;&lt;span&gt;17&lt;/span&gt;         User u = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; User();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         u.setUsername(&quot;zhangsan&quot;&lt;span&gt;);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         u.setPassword(&quot;123456&quot;&lt;span&gt;);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         u.setEmail(&quot;admin@admin.com&quot;&lt;span&gt;);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;        session.save(u);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         Assert.assertTrue(u.getId()&amp;gt;0&lt;span&gt;);&lt;br /&gt;&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;        session.getTransaction().commit();&lt;br /&gt;&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; }&lt;/div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;通过myeclipse在pom.xml右键点击，运行Maven test，如图：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/472286/201309/14191918-db79baffc22245b4811b12fa4f30d422.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;此时我们查看数据库，就可以看到数据库中多了一条数据：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/472286/201309/14192207-edd6d498d52a4068a95d838a0b44e43a.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;然后运行maven install就可以进行程序的打包操作了：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/472286/201309/14193734-9232664f061d432bbdf9a51e709128dd.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3321683&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/wukong65/p/3321683.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/wukong65/p/3321683.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-15T15:21:00+00:00</dc:date>
	<dc:creator>悟空65</dc:creator>
</item>
<item rdf:about="http://www.cnblogs.com/zuoxiaolong/p/life9.html">
	<title>博客园_首页: 今天你加班了吗？论成长路！ - 左潇龙</title>
	<link>http://www.cnblogs.com/zuoxiaolong/p/life9.html</link>
	<content:encoded>&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 昨天LZ写了篇有关培训机构的文章，目的主要在于给有意向进培训机构的猿友们一个参考，希望能有更多的猿友得到了帮助。最近两天LZ也发现了，在周末的时候，博客园内的文章阅读量会骤然下降，不知道这一批猿友周末都干嘛去了呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 难道是在加班？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 开个玩笑，别当真，0.0。说起加班，真的是有人欢喜有人忧，有人喜欢有人厌。这就像找女朋友似的，萝卜白菜各有所爱，加班可以是凤姐，让人望而却步，也可以是名模，让人垂涎欲滴。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LZ先给各位讲个小故事，这种故事是真实存在的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;小故事&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 林强是某三流本科院校的一枚普通2B青年，而王硕是他的男闺蜜。临近毕业之际，二人都幸运的找到了工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 林强应聘上的是一家大的国企，当时工作找好之后，这货好好的跟同学们庆祝了一番，号称今晚我们就是富二代，海参鲍鱼都不是个事。结果这货事后苦逼的吃了一个月泡面，才被头一个月的工资给救了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 而王硕仅仅找了一家小公司，因此找到的时候还算低调，只是小面积的跟寝室里的兄弟们小聚了一下，还请大家伙包了次夜。那一夜，王硕包鸡包眼包TP，让刀让塔让人头，操着冰女朝对面整整嘲讽了一夜，&amp;ldquo;英雄们，有本事来上我呀！&amp;rdquo;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 不过月有阴晴圆缺，人有毕业那天，一宿舍四兄弟，最终还是走上了各自的路。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 上班之后，之前学校里的嘻嘻闹闹便再也没有了，王硕苦逼的过上了朝九晚未知的生活，相反，林强却每日按时五点下班，过的那叫个逍遥自在。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 原本这样的情况，大部分人都会羡慕林强，工作轻松，按时上下班，尽管不是正式的公务员，福利跟不上，不过好在工资还可以。不过身为当事人的林强可不是这么想的，原因就是因为二人的一次小聚。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 由于二人都在免费吸烟的魔都上班，因此分开三个月后，两人便组织了一次小规模同学聚会，人数是两人。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 二人一见面就是亲亲我我，差点就没开个房间直奔主题了。不过好在二人都是正常人，这才没有发生一男一男上旅馆的事。饭桌上，两人你一言我一语的说了几个小时，林强听到王硕每天苦逼的上班，着实为自己庆幸了一番。不过话又说回来了，林强又十分羡慕王硕，虽然辛苦是辛苦了点，不过据王硕所说，感觉每天都进步神速。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 就是因为这一次见面，林强原本悠闲的生活一下子就变了。原本下午下班，林强都会吃完饭在家里惬意的捣上几把DOTA，不过想起自己的闺蜜王硕此时可能正在奋力的工作着，之前的悠闲劲就一扫而空了。久而久之，林强反而开始羡慕起王硕来了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 三个月后，林强便不甘寂寞，也换了家公司，过起了加班的生活。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;小点评&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 看完这个小故事，不知道各位猿友有何感想呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LZ想问问各位，你有没有曾经羡慕过你的加班室友或是同学？你有没有曾经觉得加班是一种充实？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 相信这种情况在有些人身上还是真实发生过的，看到别人每天都忙得不可开交，加班加到爆，自己便坐不住了，觉得自己每天都在混日子。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 其实在LZ看来，这是一种非常正常，也是很好的一种情况，因为当看到别人在忙，而你每日悠闲度日时，你能产生焦躁的心理，这说明你是一个富有上进心的人。否则，你只会毫无赶脚的继续着你的悠闲生活，而不会有任何不适。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 不过LZ觉得羡慕别人加班是完全没有必要的，之所以出现这种情况，根本原因不在于别人加班，而在于你在玩！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 不论别人是如何，倘若你每日都有自己的小计划，比如一天看一个小时书，那么即使看到别人忙的不可开交，似乎每日都在进步的时候，你也不会焦躁，因为你知道，你自己也在进步。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 不过这种情况大部分发生在应届毕业生的身上，有部分极具上进心的同学，很容易把加班当成一种充实。一般情况下，当工作一两年之后，甚至几个月之后，就开始对加班产生了厌烦的心理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;论充实的真谛&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 在LZ现在看来，其实加班本身与充实不充实并无关系，很多应届毕业生觉得加班就是充实，是因为在学校里学的时间太长了，由于这种反差，导致了这种思想。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 这就像一个人每天吃素菜，偶尔吃到肉时，当然觉得十分美味。但是让你吃上一年的肉你试试？你还觉得美味不？你要非说你吃肉是吃不烦的，LZ也只能和小伙伴们惊呆了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 因此大部分人加到一定时间，就开始厌烦了。一个是身体上受不了，另外一个重要原因也是因为，很多加班都是免费的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 那么到底如何才算是正道，或者说是对于一个人的成长最有益的呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 依LZ的拙见，在学校由于都是理论知识的炮轰，因此刚毕业时，疯狂的陷入实践，也就是加班，并不是一件坏事。不过凡事都有个度，过犹而不及，这个道理在很多事情上都是成立的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 当你把自己在学校学习的理论知识实践的差不多时，就需要你接触更多的理论知识，从而再次进入自己的实践过程。而再次接触理论知识的途径一般就是看书，或是一些技术文章也可以，不过技术文章虽然很好，它不仅方便，而且有的文章属于浓缩的精华，不过由于大部分都缺少系统性和完整性，因此它可以当做快餐，偶尔吃一下挺好，但不能只靠吃快餐补充营养。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;成长函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 理论是实践是一个人成长的必要手段，二者相互配合，以某一个常数呈正比例增加，才是成长函数的正解。即设实践为x，理论为y，存在一个常数c，使得x=cy成立。找到属于你的那个c，并尽量使x和y满足x=cy，也就找到了你的路。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 你找到你的c了吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3323395&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/zuoxiaolong/p/life9.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/zuoxiaolong/p/life9.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-15T15:07:00+00:00</dc:date>
	<dc:creator>左潇龙</dc:creator>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252798.htm">
	<title>cnBeta.COM: 社交平台Dronestagram：从无人机角度去看世界</title>
	<link>http://www.cnbeta.com/articles/252798.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;近年来，无人机变得越来越有争议性，因为它们常常被用于军事打击，时不时有侵犯人权的记录或登上新闻头条。&lt;/strong&gt;然而，一个新的交网站让人 们从一个更友好的角度去看待无人机。Dronestagram（即Drones和Instagram的合成词，Drones的意思是无人机）如今是一个热门的图片社交网站。据福克斯新闻网的报告，该网站旨在收集尽可能多的航拍图，打造出一个“地球的鸟瞰图”数据库。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3141ac95/sc/17/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252798.htm&amp;t=%E7%A4%BE%E4%BA%A4%E5%B9%B3%E5%8F%B0Dronestagram%EF%BC%9A%E4%BB%8E%E6%97%A0%E4%BA%BA%E6%9C%BA%E8%A7%92%E5%BA%A6%E5%8E%BB%E7%9C%8B%E4%B8%96%E7%95%8C&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252798.htm&amp;t=%E7%A4%BE%E4%BA%A4%E5%B9%B3%E5%8F%B0Dronestagram%EF%BC%9A%E4%BB%8E%E6%97%A0%E4%BA%BA%E6%9C%BA%E8%A7%92%E5%BA%A6%E5%8E%BB%E7%9C%8B%E4%B8%96%E7%95%8C&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252798.htm&amp;t=%E7%A4%BE%E4%BA%A4%E5%B9%B3%E5%8F%B0Dronestagram%EF%BC%9A%E4%BB%8E%E6%97%A0%E4%BA%BA%E6%9C%BA%E8%A7%92%E5%BA%A6%E5%8E%BB%E7%9C%8B%E4%B8%96%E7%95%8C&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252798.htm&amp;t=%E7%A4%BE%E4%BA%A4%E5%B9%B3%E5%8F%B0Dronestagram%EF%BC%9A%E4%BB%8E%E6%97%A0%E4%BA%BA%E6%9C%BA%E8%A7%92%E5%BA%A6%E5%8E%BB%E7%9C%8B%E4%B8%96%E7%95%8C&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252798.htm&amp;t=%E7%A4%BE%E4%BA%A4%E5%B9%B3%E5%8F%B0Dronestagram%EF%BC%9A%E4%BB%8E%E6%97%A0%E4%BA%BA%E6%9C%BA%E8%A7%92%E5%BA%A6%E5%8E%BB%E7%9C%8B%E4%B8%96%E7%95%8C&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608960408/u/47/f/624776/c/34306/s/3141ac95/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608960408/u/47/f/624776/c/34306/s/3141ac95/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608960408/u/47/f/624776/c/34306/s/3141ac95/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T14:36:02+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252797.htm">
	<title>cnBeta.COM: 微软发布视频取笑苹果新款iPhone引来尴尬</title>
	<link>http://www.cnbeta.com/articles/252797.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;昨日，微软公司Windows Phone团队在YouTube上发布了一段取笑苹果iPhone 5c and 5s的视频，结果引来尴尬并很快删除。&lt;/strong&gt;上周六，微软Windows Phone团队在YouTube上发布一段让人很不舒服的视频。这段视频名为“在库比蒂诺墙壁上的一次飞翔？”，内容是取笑苹果公司及其最近发布的iPhone5c 和iPhone5s。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3141ac94/sc/28/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252797.htm&amp;t=%E5%BE%AE%E8%BD%AF%E5%8F%91%E5%B8%83%E8%A7%86%E9%A2%91%E5%8F%96%E7%AC%91%E8%8B%B9%E6%9E%9C%E6%96%B0%E6%AC%BEiPhone%E5%BC%95%E6%9D%A5%E5%B0%B4%E5%B0%AC&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252797.htm&amp;t=%E5%BE%AE%E8%BD%AF%E5%8F%91%E5%B8%83%E8%A7%86%E9%A2%91%E5%8F%96%E7%AC%91%E8%8B%B9%E6%9E%9C%E6%96%B0%E6%AC%BEiPhone%E5%BC%95%E6%9D%A5%E5%B0%B4%E5%B0%AC&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252797.htm&amp;t=%E5%BE%AE%E8%BD%AF%E5%8F%91%E5%B8%83%E8%A7%86%E9%A2%91%E5%8F%96%E7%AC%91%E8%8B%B9%E6%9E%9C%E6%96%B0%E6%AC%BEiPhone%E5%BC%95%E6%9D%A5%E5%B0%B4%E5%B0%AC&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252797.htm&amp;t=%E5%BE%AE%E8%BD%AF%E5%8F%91%E5%B8%83%E8%A7%86%E9%A2%91%E5%8F%96%E7%AC%91%E8%8B%B9%E6%9E%9C%E6%96%B0%E6%AC%BEiPhone%E5%BC%95%E6%9D%A5%E5%B0%B4%E5%B0%AC&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252797.htm&amp;t=%E5%BE%AE%E8%BD%AF%E5%8F%91%E5%B8%83%E8%A7%86%E9%A2%91%E5%8F%96%E7%AC%91%E8%8B%B9%E6%9E%9C%E6%96%B0%E6%AC%BEiPhone%E5%BC%95%E6%9D%A5%E5%B0%B4%E5%B0%AC&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608960406/u/47/f/624776/c/34306/s/3141ac94/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608960406/u/47/f/624776/c/34306/s/3141ac94/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608960406/u/47/f/624776/c/34306/s/3141ac94/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T14:35:24+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252796.htm">
	<title>cnBeta.COM: 联通称iPhone5s/5c网上预约量已破10万</title>
	<link>http://www.cnbeta.com/articles/252796.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;中国联通相关部门透露，截止目前，联通iPhone5s/5c合约机网上预订量已突破10万大关。&lt;/strong&gt;为了方便客户，联通已开放多个 iPhone5s/5c线上预约入口，除登录联通网上营业厅外，用户还能通过联通手机营业厅、iOS客户端、安卓客户端)、微信营业厅(公众号“中国联通”)、短信营业厅等各类电子渠道预约。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3141ac90/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252796.htm&amp;t=%E8%81%94%E9%80%9A%E7%A7%B0iPhone5s%2F5c%E7%BD%91%E4%B8%8A%E9%A2%84%E7%BA%A6%E9%87%8F%E5%B7%B2%E7%A0%B410%E4%B8%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252796.htm&amp;t=%E8%81%94%E9%80%9A%E7%A7%B0iPhone5s%2F5c%E7%BD%91%E4%B8%8A%E9%A2%84%E7%BA%A6%E9%87%8F%E5%B7%B2%E7%A0%B410%E4%B8%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252796.htm&amp;t=%E8%81%94%E9%80%9A%E7%A7%B0iPhone5s%2F5c%E7%BD%91%E4%B8%8A%E9%A2%84%E7%BA%A6%E9%87%8F%E5%B7%B2%E7%A0%B410%E4%B8%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252796.htm&amp;t=%E8%81%94%E9%80%9A%E7%A7%B0iPhone5s%2F5c%E7%BD%91%E4%B8%8A%E9%A2%84%E7%BA%A6%E9%87%8F%E5%B7%B2%E7%A0%B410%E4%B8%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252796.htm&amp;t=%E8%81%94%E9%80%9A%E7%A7%B0iPhone5s%2F5c%E7%BD%91%E4%B8%8A%E9%A2%84%E7%BA%A6%E9%87%8F%E5%B7%B2%E7%A0%B410%E4%B8%87&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608960404/u/47/f/624776/c/34306/s/3141ac90/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608960404/u/47/f/624776/c/34306/s/3141ac90/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608960404/u/47/f/624776/c/34306/s/3141ac90/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T14:34:24+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252795.htm">
	<title>cnBeta.COM: NVIDIA携手小米手机3再登央视新闻：创世界纪录</title>
	<link>http://www.cnbeta.com/articles/252795.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;9月10日，央视新闻联播栏目以13秒的时间播报了小米手机3的相关信息，宣称它是“全球运行速度最快的智能手机”，而今天，小米手机3携手NVIDIA再次登陆央视新闻。&lt;/strong&gt;今天晚上的CCTV-2《经济信息联播》栏目再次以28秒的时间报道了小米手机3以及Tegra 4处理器，解说词如下：英伟达公司CEO黄仁勋日前现身北京某手机发布会现场，&lt;strong&gt;而这款手机在安兔兔测试软件中取得了全球最高的测试成绩，这款叫做Tegra 4的手机芯片采用领先的4+1架构&lt;/strong&gt;，在待机时只开启一个低功耗核心，而在游戏等高负载时则同时开启四个A15核心共同工作，同时72个GPU核心也将视觉计算和图形渲染做到了极致。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3141ac8d/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252795.htm&amp;t=NVIDIA%E6%90%BA%E6%89%8B%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA3%E5%86%8D%E7%99%BB%E5%A4%AE%E8%A7%86%E6%96%B0%E9%97%BB%EF%BC%9A%E5%88%9B%E4%B8%96%E7%95%8C%E7%BA%AA%E5%BD%95&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252795.htm&amp;t=NVIDIA%E6%90%BA%E6%89%8B%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA3%E5%86%8D%E7%99%BB%E5%A4%AE%E8%A7%86%E6%96%B0%E9%97%BB%EF%BC%9A%E5%88%9B%E4%B8%96%E7%95%8C%E7%BA%AA%E5%BD%95&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252795.htm&amp;t=NVIDIA%E6%90%BA%E6%89%8B%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA3%E5%86%8D%E7%99%BB%E5%A4%AE%E8%A7%86%E6%96%B0%E9%97%BB%EF%BC%9A%E5%88%9B%E4%B8%96%E7%95%8C%E7%BA%AA%E5%BD%95&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252795.htm&amp;t=NVIDIA%E6%90%BA%E6%89%8B%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA3%E5%86%8D%E7%99%BB%E5%A4%AE%E8%A7%86%E6%96%B0%E9%97%BB%EF%BC%9A%E5%88%9B%E4%B8%96%E7%95%8C%E7%BA%AA%E5%BD%95&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252795.htm&amp;t=NVIDIA%E6%90%BA%E6%89%8B%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA3%E5%86%8D%E7%99%BB%E5%A4%AE%E8%A7%86%E6%96%B0%E9%97%BB%EF%BC%9A%E5%88%9B%E4%B8%96%E7%95%8C%E7%BA%AA%E5%BD%95&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608960402/u/47/f/624776/c/34306/s/3141ac8d/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608960402/u/47/f/624776/c/34306/s/3141ac8d/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608960402/u/47/f/624776/c/34306/s/3141ac8d/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T14:33:34+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252794.htm">
	<title>cnBeta.COM: Android制造商将如何应战iPhone 5S</title>
	<link>http://www.cnbeta.com/articles/252794.htm</link>
	<content:encoded>&lt;p&gt;之前iPhone引领潮流的时候，&lt;strong&gt;每一次发布会新添加到iPhone的功能将于一年后齐刷刷地出现在Android设备上&lt;/strong&gt;，今年iPhone 5S添加了不少新功能，已经“上位” 的Android厂商是嗤之以鼻还是迅速跟上呢，一起来看下。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3141ac8b/sc/21/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252794.htm&amp;t=Android%E5%88%B6%E9%80%A0%E5%95%86%E5%B0%86%E5%A6%82%E4%BD%95%E5%BA%94%E6%88%98iPhone+5S&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252794.htm&amp;t=Android%E5%88%B6%E9%80%A0%E5%95%86%E5%B0%86%E5%A6%82%E4%BD%95%E5%BA%94%E6%88%98iPhone+5S&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252794.htm&amp;t=Android%E5%88%B6%E9%80%A0%E5%95%86%E5%B0%86%E5%A6%82%E4%BD%95%E5%BA%94%E6%88%98iPhone+5S&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252794.htm&amp;t=Android%E5%88%B6%E9%80%A0%E5%95%86%E5%B0%86%E5%A6%82%E4%BD%95%E5%BA%94%E6%88%98iPhone+5S&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252794.htm&amp;t=Android%E5%88%B6%E9%80%A0%E5%95%86%E5%B0%86%E5%A6%82%E4%BD%95%E5%BA%94%E6%88%98iPhone+5S&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608960401/u/47/f/624776/c/34306/s/3141ac8b/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608960401/u/47/f/624776/c/34306/s/3141ac8b/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608960401/u/47/f/624776/c/34306/s/3141ac8b/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T14:30:31+00:00</dc:date>
</item>
<item rdf:about="http://www.cnblogs.com/daoluanxiaozi/p/3323352.html">
	<title>博客园_首页: Django 源码小剖: URL 调度器(URL dispatcher) - 捣乱小子</title>
	<link>http://www.cnblogs.com/daoluanxiaozi/p/3323352.html</link>
	<content:encoded>&lt;p&gt;在刚开始接触 django 的时候, 我们尝试着从各种入门文档中创建一个自己的 django 项目, 需要在 mysite.urls.py 中配置 URL. 这是 django url 匹配处理机制的一小部分.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;URL 调度器详解&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;django url 匹配处理机制主要由一下模块实现: django.conf.urls 和 django.core.urlresolver.py. 有需要摘取上一节中的代码:&lt;/p&gt;# BaseHandler.get_response() 的定义&lt;br /&gt;# 处理请求的函数, 并返回 response&lt;br /&gt;def get_response(self, request):&lt;br /&gt;    &quot;Returns an HttpResponse object for the given HttpRequest&quot;&lt;br /&gt;    根据请求, 得到响应&lt;br /&gt;&lt;br /&gt;    try:&lt;br /&gt;        为该线程提供默认的 url 处理器&lt;br /&gt;        # Setup default url resolver for this thread, this code is outside&lt;br /&gt;        # the try/except so we don't get a spurious &quot;unbound local&lt;br /&gt;        # variable&quot; exception in the event an exception is raised before&lt;br /&gt;        # resolver is set&lt;br /&gt;&lt;br /&gt;        #ROOT_URLCONF = 'mysite.urls'&lt;br /&gt;        urlconf = settings.ROOT_URLCONF&lt;br /&gt;&lt;br /&gt;        # set_urlconf() 会设置 url 配置即 settings.ROOT_URLCONF&lt;br /&gt;        # 会设置一个线程共享变量, 存储 urlconf&lt;br /&gt;        urlresolvers.set_urlconf(urlconf)&lt;br /&gt;&lt;br /&gt;        # 实例化 RegexURLResolver, 暂且将其理解为一个 url 的匹配处理器, 下节展开&lt;br /&gt;        resolver = urlresolvers.RegexURLResolver(r'^/', urlconf)&lt;br /&gt;&lt;br /&gt;        try:&lt;br /&gt;            response = None&lt;br /&gt;&lt;br /&gt;            # Apply request middleware 调用请求中间件&lt;br /&gt;            ......&lt;br /&gt;&lt;br /&gt;            # 如果没有结果&lt;br /&gt;            if response is None:&lt;br /&gt;                # 尝试 request 中是否有 urlconf, 一般没有, 可以忽略此段代码!!!&lt;br /&gt;                if hasattr(request, 'urlconf'):&lt;br /&gt;                    # Reset url resolver with a custom urlconf. 自定义的 urlconf&lt;br /&gt;                    urlconf = request.urlconf&lt;br /&gt;                    urlresolvers.set_urlconf(urlconf)&lt;br /&gt;                    resolver = urlresolvers.RegexURLResolver(r'^/', urlconf)&lt;br /&gt;                # 调用 RegexURLResolver.resolve(), 可以理解为启动匹配的函数; 返回 ResolverMatch 实例&lt;br /&gt;                resolver_match = resolver.resolve(request.path_info)&lt;br /&gt;&lt;br /&gt;                # resolver_match 对象中存储了有用的信息, 譬如 callback 就是我们在 views.py 中定义的函数.&lt;br /&gt;                callback, callback_args, callback_kwargs = resolver_match&lt;br /&gt;&lt;br /&gt;                # 将返回的 resolver_match 挂钩到 request&lt;br /&gt;                request.resolver_match = resolver_match&lt;br /&gt;&lt;br /&gt;                # Apply view middleware 调用视图中间件&lt;br /&gt;                ......&lt;p&gt;可以简单的理解为 get_response() 中构造了 RegexURLResolver 对象并调用了 RegexURLResolver.resolve(path) 启动解析. 从上面的代码中, 可以获知 urlconf 默认使用的是 mysite.settings.py 中的 ROOT_URLCONF, 而也确实可以在 mysite.settings.py 中找到对应的设置项, 并且做出修改.&lt;/p&gt;&lt;p&gt;从上, 至少可以知道, 真正发挥匹配作用的是 RegexURLResolver 对象, 并调用 RegexURLResolver.resolve() 启动了解析, 一切从这里开始. 从 urlresolver.py 中抽取主干部分, 可以得到下面的 UML 图:&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://daoluan.net/blog/wp-content/uploads/2013/09/url_dispatcher_uml.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1981&quot; src=&quot;http://daoluan.net/blog/wp-content/uploads/2013/09/url_dispatcher_uml.jpg&quot; alt=&quot;url_dispatcher_uml&quot; width=&quot;499&quot; height=&quot;466&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;LocaleRegexProvider 类只为地区化而存在, 他持有 regex 属性, 但在 RegexURLResolver 和 RegexURLPattern 中发挥不同的作用:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;RegexURLResolver: 过滤 url 的前缀, 譬如如果 regex 属性值为 people, 那么能将 people/daoluan/ 过滤为 daoluan/.&lt;/li&gt;&lt;li&gt;RegexURLPattern: 匹配整个 url.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在展开 ResolverMatch, RegexURLPattern, RegexURLResolver 三个类之前, 暂且将他们理解为:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;ResolverMatch 当匹配成功时会实例化返回&lt;/li&gt;&lt;li&gt;RegexURLPattern, RegexURLResolver 匹配器, 但有不同.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;然后需要先介绍三个函数: url(), include(), patterns(), 三者经常在 urls.py 中用到. 它们在 django.conf.urls 中定义. 摘抄和解析如下:&lt;/p&gt;# url 里面可以用 incude 函数&lt;br /&gt;def include(arg, namespace=None, app_name=None):&lt;br /&gt;    if isinstance(arg, tuple):&lt;br /&gt;        # callable returning a namespace hint&lt;br /&gt;        if namespace:&lt;br /&gt;            raise ImproperlyConfigured('Cannot override the namespace for a dynamic module that provides a namespace')&lt;br /&gt;&lt;br /&gt;        # 获取 urlconf 模块文件, 应用名, 命名空间&lt;br /&gt;        urlconf_module, app_name, namespace = arg&lt;br /&gt;    else:&lt;br /&gt;        # No namespace hint - use manually provided namespace&lt;br /&gt;        urlconf_module = arg&lt;br /&gt;&lt;br /&gt;    if isinstance(urlconf_module, six.string_types):&lt;br /&gt;        # 尝试导入模块&lt;br /&gt;        urlconf_module = import_module(urlconf_module)&lt;br /&gt;&lt;br /&gt;    # 在 urlconf_module 中导入 urlpatterns&lt;br /&gt;    # 在 urlconf_module 中肯定会有 urlpatterns 这个变量&lt;br /&gt;    patterns = getattr(urlconf_module, 'urlpatterns', urlconf_module)&lt;br /&gt;&lt;br /&gt;    # Make sure we can iterate through the patterns (without this, some&lt;br /&gt;    # testcases will break).&lt;br /&gt;    if isinstance(patterns, (list, tuple)):&lt;br /&gt;        for url_pattern in patterns:&lt;br /&gt;            # Test if the LocaleRegexURLResolver is used within the include;&lt;br /&gt;            # this should throw an error since this is not allowed!&lt;br /&gt;            if isinstance(url_pattern, LocaleRegexURLResolver):&lt;br /&gt;                raise ImproperlyConfigured(&lt;br /&gt;                    'Using i18n_patterns in an included URLconf is not allowed.')&lt;br /&gt;&lt;br /&gt;    # 返回模块, app 名 ,命名空间&lt;br /&gt;    return (urlconf_module, app_name, namespace)&lt;br /&gt;&lt;br /&gt;def patterns(prefix, *args): 特意留一个 prefix&lt;br /&gt;    pattern_list = []&lt;br /&gt;    for t in args:&lt;br /&gt;        if isinstance(t, (list, tuple)):&lt;br /&gt;            t = url(prefix=prefix, *t) 自动转换&lt;br /&gt;&lt;br /&gt;        elif isinstance(t, RegexURLPattern):&lt;br /&gt;            t.add_prefix(prefix)&lt;br /&gt;&lt;br /&gt;        pattern_list.append(t)&lt;br /&gt;&lt;br /&gt;    # 返回 RegexURLResolver 或者 RegexURLPattern 对象的列表&lt;br /&gt;    return pattern_list&lt;br /&gt;&lt;br /&gt;# url 函数&lt;br /&gt;def url(regex, view, kwargs=None, name=None, prefix=''):&lt;br /&gt;    if isinstance(view, (list,tuple)): 如果是 list 或者 tuple&lt;br /&gt;        # For include(...) processing. 处理包含 include(...)&lt;br /&gt;        urlconf_module, app_name, namespace = view&lt;br /&gt;&lt;br /&gt;        # 此处返回 RegexURLResolver, 区分下面返回 RegexURLPattern&lt;br /&gt;        return RegexURLResolver(regex, urlconf_module, kwargs, app_name=app_name, namespace=namespace)&lt;br /&gt;    else:&lt;br /&gt;        if isinstance(view, six.string_types):&lt;br /&gt;            if not view:&lt;br /&gt;                raise ImproperlyConfigured('Empty URL pattern view name not permitted (for pattern %r)' % regex)&lt;br /&gt;            if prefix:&lt;br /&gt;                view = prefix + '.' + view&lt;br /&gt;&lt;br /&gt;        # 返回 RegexURLPattern 的对象&lt;br /&gt;        return RegexURLPattern(regex, view, kwargs, name)&lt;br /&gt;    # 从上面可以获知, url 会返回 RegexURLResolver 或者 RegexURLPattern 对象&lt;p&gt;可以简单的理解为, url() 根据具体情况返回&amp;nbsp;RegexURLResolver 或者 RegexURLPattern 对象;&amp;nbsp;patterns() 返回了包含有 RegexURLPattern 和 RegexURLResolver 对象的列表. 当在 urls.py 中出现:&lt;br /&gt;每个 include() 的时候, 最终会产生一个 RegexURLResolver 对象;&lt;br /&gt;否则为 RegexURLPattern 对象.&lt;/p&gt;回到那三个类, 摘取 RegexURLResolver 的主干函数作为讲解:&lt;br /&gt;# 最关键的函数&lt;br /&gt;def resolve(self, path):&lt;br /&gt;&lt;br /&gt;    tried = []&lt;br /&gt;&lt;br /&gt;    # regex 在 RegexURLResolver 中表示前缀&lt;br /&gt;    match = self.regex.search(path)&lt;br /&gt;&lt;br /&gt;    if match:&lt;br /&gt;        # 去除前缀&lt;br /&gt;        new_path = path[match.end():]&lt;br /&gt;&lt;br /&gt;        for pattern in self.url_patterns: # 穷举所有的 url pattern&lt;br /&gt;            # pattern 是 RegexURLPattern 实例&lt;br /&gt;            try:&lt;br /&gt;&lt;br /&gt;&quot;&quot;&quot;在 RegexURLResolver.resolve() 中的一句: sub_match = pattern.resolve(new_path) 最为关键.&lt;br /&gt;从上面 patterns() 函数的作用知道, pattern 可以是 RegexURLPattern 对象或者 RegexURLResolver 对象. 当为 RegexURLResolver 对象的时候, 就是启动子 url 匹配处理器, 于是又回到了上面.&lt;br /&gt;&lt;br /&gt;RegexURLPattern 和 RegexURLResolver 都有一个 resolve() 函数, 所以, 下面的一句 resolve() 调用, 可以是调用 RegexURLPattern.resolve() 或者 RegexURLResolver.resolve()&quot;&quot;&quot;&lt;br /&gt;&lt;br /&gt;                # 返回 ResolverMatch 实例&lt;br /&gt;                sub_match = pattern.resolve(new_path)&lt;br /&gt;&lt;br /&gt;            except Resolver404 as e:&lt;br /&gt;                # 搜集已经尝试过的匹配器, 在出错的页面中会显示错误信息&lt;br /&gt;                sub_tried = e.args[0].get('tried')&lt;br /&gt;&lt;br /&gt;                if sub_tried is not None:&lt;br /&gt;                    tried.extend([[pattern] + t for t in sub_tried])&lt;br /&gt;                else:&lt;br /&gt;                    tried.append([pattern])&lt;br /&gt;            else:&lt;br /&gt;                # 是否成功匹配&lt;br /&gt;                if sub_match:&lt;br /&gt;                    # match.groupdict()&lt;br /&gt;                    # Return a dictionary containing all the named subgroups of the match,&lt;br /&gt;                    # keyed by the subgroup name.&lt;br /&gt;&lt;br /&gt;                    # 如果在 urls.py 的正则表达式中使用了变量, match.groupdict() 返回即为变量和值.&lt;br /&gt;                    sub_match_dict = dict(match.groupdict(), **self.default_kwargs)&lt;br /&gt;&lt;br /&gt;                    sub_match_dict.update(sub_match.kwargs)&lt;br /&gt;&lt;br /&gt;                    # 返回 ResolverMatch 对象, 如你所知, 得到此对象将可以执行真正的逻辑操作, 即 views.py 内定义的函数.&lt;br /&gt;                    return ResolverMatch(sub_match.func,&lt;br /&gt;                        sub_match.args, sub_match_dict,&lt;br /&gt;                        sub_match.url_name, self.app_name or sub_match.app_name,&lt;br /&gt;                        [self.namespace] + sub_match.namespaces)&lt;br /&gt;&lt;br /&gt;                tried.append([pattern])&lt;br /&gt;&lt;br /&gt;        # 如果没有匹配成功的项目, 将异常&lt;br /&gt;        raise Resolver404({'tried': tried, 'path': new_path})&lt;br /&gt;&lt;br /&gt;    raise Resolver404({'path' : path})&lt;br /&gt;&lt;br /&gt;# 修饰 urlconf_module, 返回 self._urlconf_module, 即 urlpatterns 变量所在的文件&lt;br /&gt;@property&lt;br /&gt;def urlconf_module(self):&lt;br /&gt;    try:&lt;br /&gt;        return self._urlconf_module&lt;br /&gt;    except AttributeError:&lt;br /&gt;        self._urlconf_module = import_module(self.urlconf_name)&lt;br /&gt;        return self._urlconf_module&lt;br /&gt;&lt;br /&gt;# 返回指定文件中的 urlpatterns 变量&lt;br /&gt;@property&lt;br /&gt;def url_patterns(self):&lt;br /&gt;    patterns = getattr(self.urlconf_module, &quot;urlpatterns&quot;, self.urlconf_module)&lt;br /&gt;    try:&lt;br /&gt;        iter(patterns) # 是否可以迭代&lt;br /&gt;    except TypeError:&lt;br /&gt;        raise ImproperlyConfigured(&quot;The included urlconf %s doesn't have any patterns in it&quot; % self.urlconf_name)&lt;br /&gt;&lt;br /&gt;    # patterns 实际上是 RegexURLPattern 对象和 RegexURLResolver 对象的集合&lt;br /&gt;    return patterns&lt;br /&gt;&lt;br /&gt;摘取 RegexURLPattern 的主干函数作为讲解:&lt;br /&gt;&lt;br /&gt;# 执行正则匹配&lt;br /&gt;def resolve(self, path):&lt;br /&gt;    match = self.regex.search(path) # 搜索&lt;br /&gt;    if match:&lt;br /&gt;        # If there are any named groups, use those as kwargs, ignoring&lt;br /&gt;        # non-named groups. Otherwise, pass all non-named arguments as&lt;br /&gt;        # positional arguments.&lt;br /&gt;        # match.groupdict() 返回正则表达式中匹配的变量以及其值, 需要了解 python 中正则表达式的使用&lt;br /&gt;        kwargs = match.groupdict()&lt;br /&gt;        if kwargs:&lt;br /&gt;            args = ()&lt;br /&gt;        else:&lt;br /&gt;            args = match.groups()&lt;br /&gt;&lt;br /&gt;        # In both cases, pass any extra_kwargs as **kwargs.&lt;br /&gt;        kwargs.update(self.default_args)&lt;br /&gt;&lt;br /&gt;        # 成功, 返回匹配结果类; 否则返回 None&lt;br /&gt;        return ResolverMatch(self.callback, args, kwargs, self.name)&lt;br /&gt;&lt;br /&gt;# 对 callback 进行修饰, 如果 self._callback 不是一个可调用的对象, 则可能还是一个字符串, 需要解析得到可调用的对象&lt;br /&gt;@property&lt;br /&gt;def callback(self):&lt;br /&gt;    if self._callback is not None:&lt;br /&gt;        return self._callback&lt;br /&gt;&lt;br /&gt;    self._callback = get_callable(self._callback_str)&lt;br /&gt;    return self._callback&lt;br /&gt;&lt;br /&gt;ResolverMatch 不贴代码了, 它包装了匹配成功所需要的信息, 如 views.py 中定义的函数.&lt;p&gt;&lt;strong&gt;URL 调度过程实例&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;下面的具体例子将加深对 RegexURLResolver.reslove() 调用的理解. 假设工程名为 mysite, 并且创建了 app people.&lt;/p&gt;# mysite.urls.py&lt;br /&gt;from django.conf.urls import patterns, include, url&lt;br /&gt;&lt;br /&gt;urlpatterns = patterns('',&lt;br /&gt;     url(r&quot;^$&quot;,&quot;mysite.views.index&quot;),&lt;br /&gt;     url(r&quot;^about/&quot;,&quot;mysite.views.about&quot;),&lt;br /&gt;     url(r&quot;^people/&quot;,include(people.urls)),&lt;br /&gt;     url(r&quot;^contact/&quot;,&quot;mysite.views.contact&quot;),&lt;br /&gt;     url(r&quot;^update/&quot;,&quot;mysite.views.update&quot;),&lt;br /&gt;)&lt;br /&gt;&lt;br /&gt;# people.urls.py&lt;br /&gt;from django.conf.urls import patterns, include, url&lt;br /&gt;&lt;br /&gt;urlpatterns = patterns('',&lt;br /&gt;     url(r&quot;^daoluan/&quot;,&quot;people.views.daoluan&quot;),&lt;br /&gt;     url(r&quot;^sam/&quot;,&quot;people.views.sam&quot;),&lt;br /&gt;     url(r&quot;^jenny/&quot;,&quot;people.views.jenny&quot;),&lt;br /&gt;)&lt;br /&gt;# people.views.py&lt;br /&gt;def daoluan(request):&lt;br /&gt;    return HttpResponse(&quot;hello&quot;)&lt;p&gt;&lt;span&gt;当访问 http://exapmle.com/people/daoluan/ 的时候 URL dispatcher 的调度过程(蓝色部分):&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://daoluan.net/blog/wp-content/uploads/2013/09/urldispatcher_example.gif&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1983&quot; src=&quot;http://daoluan.net/blog/wp-content/uploads/2013/09/urldispatcher_example.gif&quot; alt=&quot;urldispatcher_example&quot; width=&quot;535&quot; height=&quot;396&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;对应上面的例子 url 调度器机制的具体工作过程如下, 从&amp;nbsp;BaseHandler.get_response() 开始说起:&lt;/p&gt;&lt;p&gt;1. BaseHandler.get_response() 中根据 settings.py 中的&amp;nbsp;ROOT_URLCONF 设置选项构造&amp;nbsp;RegexURLResolver 对象, 并调用&amp;nbsp;RegexURLResolver.resolve(&quot;/people/daoluan/&quot;) 启动解析, 其中&amp;nbsp;RegexURLResolver.regex = &quot;^\&quot;, 也就是说它会过滤 &quot;\&quot;, url 变为 &quot;people/daoluan/&quot;;&lt;/p&gt;&lt;p&gt;2. resolve() 中调用&amp;nbsp;RegexURLResolver.url_patterns(), 加载了所有的匹配信息如下(和图中一样):&lt;/p&gt;&lt;ul&gt;&lt;li&gt;(类型)RegexURLPattern (正则匹配式)[^$]&lt;/li&gt;&lt;li&gt;RegexURLPattern [^about/]&lt;/li&gt;&lt;li&gt;RegexURLResolver [^people/]&lt;/li&gt;&lt;li&gt;RegexURLPattern [^contact/]&lt;/li&gt;&lt;li&gt;RegexURLPattern [^update/]&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;语句&amp;nbsp;for pattern in self.url_patterns: 开始依次匹配. 第一个因为是&amp;nbsp;RegexURLPattern 对象, 调用 resolve() 为&amp;nbsp;RegexURLPattern.resolve(): 它直接用 [^$] 去匹配 &quot;people/daoluan/&quot;, 结果当然是不匹配.&lt;/p&gt;&lt;p&gt;3. 下一个 pattern 过程同上.&lt;/p&gt;&lt;p&gt;4. 第三个 pattern 因为是 &amp;nbsp;RegexURLResolver 对象, 所以 resolve() 调用的是&amp;nbsp;RegexURLResolver.resolve(), 而非上面两个例子中的&amp;nbsp;RegexURLPattern.resolve().&amp;nbsp; 因为第三个 pattern.regex = &quot;^people/&quot;, 所以会将&amp;nbsp;&quot;people/daoluan/&quot; 过滤为 &quot;daoluan/&quot;. pattern.resolve() 中会调用&amp;nbsp;RegexURLResolver.url_patterns(), 加载了所有的匹配信息如下(和图中一样):&lt;/p&gt;&lt;ul&gt;&lt;li&gt;RegexURLPattern [^daoluan$]&lt;/li&gt;&lt;li&gt;RegexURLPattern [^sam$]&lt;/li&gt;&lt;li&gt;RegexURLPattern [^jenny$]&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;语句&amp;nbsp;for pattern in self.url_patterns: 开始依次匹配. 第一个就中, 过程和刚开始的过程一样. 因此构造 ResolverMatch&amp;nbsp;对象返回. 于是&amp;nbsp;BaseHandler.get_response() 就顺利得到 ResolverMatch&amp;nbsp;对象, 其中记录了有用的信息.&amp;nbsp;&lt;strong&gt;在&amp;nbsp;BaseHandler.get_response() 中有足够的信息让你知道开发人员在 views.py 中定义的函数是&amp;nbsp;def daoluan(request):&amp;nbsp;在什么时候调用的:&lt;/strong&gt;&lt;/p&gt;# BaseHandler.get_response() 的定义&lt;br /&gt;# 处理请求的函数, 并返回 response&lt;br /&gt;def get_response(self, request):&lt;br /&gt;    ......&lt;br /&gt;&lt;br /&gt;    # 实例化 RegexURLResolver, 暂且将其理解为一个 url 的匹配处理器, 下节展开&lt;br /&gt;    resolver = urlresolvers.RegexURLResolver(r'^/', urlconf)&lt;br /&gt;    ......&lt;br /&gt;&lt;br /&gt;    # 调用 RegexURLResolver.resolve(), 可以理解为启动匹配的函数; 返回 ResolverMatch 实例&lt;br /&gt;    resolver_match = resolver.resolve(request.path_info)&lt;br /&gt;    ......&lt;br /&gt;&lt;br /&gt;    # resolver_match 对象中存储了有用的信息, 譬如 callback 就是我们在 views.py 中定义的函数.&lt;br /&gt;    callback, callback_args, callback_kwargs = resolver_match&lt;br /&gt;    ......&lt;br /&gt;&lt;br /&gt;    # 这里调用的是真正的处理函数, 我们一般在 view.py 中定义这些函数&lt;br /&gt;    response = callback(request, *callback_args, **callback_kwargs)&lt;br /&gt;    ......&lt;br /&gt;&lt;br /&gt;    return response&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;从上面知道, url 调度器主要 RegexURLResolver, RegexURLPattern, ResolverMatch 和三个辅助函数 url(), include(), patterns() 完成. 可以发现,&amp;nbsp;url 的调度顺序是根据 urls.py 中的声明顺序决定的, 意即遍历一张表而已, 有没有办法提高查找的效率?&lt;/p&gt;&lt;p&gt;我已经在 github 备份了 Django 源码的注释:&amp;nbsp;&lt;a href=&quot;https://github.com/daoluan/Decode-Django&quot;&gt;Decode-Django&lt;/a&gt;, 有兴趣的童鞋 fork 吧.&lt;/p&gt;&lt;p&gt;捣乱 2013-9-15&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://daoluan.net&quot;&gt;http://daoluan.net&lt;/a&gt;&lt;/p&gt;&lt;img src=&quot;http://counter.cnblogs.com/blog/rss/3323352&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;p&gt;本文链接：&lt;a href=&quot;http://www.cnblogs.com/daoluanxiaozi/p/3323352.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/daoluanxiaozi/p/3323352.html&lt;/a&gt;，转载请注明。&lt;/p&gt;</content:encoded>
	<dc:date>2013-09-15T14:26:00+00:00</dc:date>
	<dc:creator>捣乱小子</dc:creator>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252793.htm">
	<title>cnBeta.COM: [图]搭载神秘GDR3固件的Lumia 920</title>
	<link>http://www.cnbeta.com/articles/252793.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;最近诸多GDR3和WP 8.1的系统截图不断地流露出来，很显然微软和诺基亚正在积极测试GDR3中。 &lt;/strong&gt;关于GDR3的新磁贴是否会出现在Lumia 920是大家很关心的话题，在之前的GDR3截图中，Lumia 920 并没有一行三列磁贴，而现在一个新的920 GDR3截图中出现了每行三列中等磁贴的身影。这或许暗示，GDR3的新磁贴尺寸会面向某些现有的设备。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31412d63/sc/28/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252793.htm&amp;t=%5B%E5%9B%BE%5D%E6%90%AD%E8%BD%BD%E7%A5%9E%E7%A7%98GDR3%E5%9B%BA%E4%BB%B6%E7%9A%84Lumia+920&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252793.htm&amp;t=%5B%E5%9B%BE%5D%E6%90%AD%E8%BD%BD%E7%A5%9E%E7%A7%98GDR3%E5%9B%BA%E4%BB%B6%E7%9A%84Lumia+920&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252793.htm&amp;t=%5B%E5%9B%BE%5D%E6%90%AD%E8%BD%BD%E7%A5%9E%E7%A7%98GDR3%E5%9B%BA%E4%BB%B6%E7%9A%84Lumia+920&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252793.htm&amp;t=%5B%E5%9B%BE%5D%E6%90%AD%E8%BD%BD%E7%A5%9E%E7%A7%98GDR3%E5%9B%BA%E4%BB%B6%E7%9A%84Lumia+920&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252793.htm&amp;t=%5B%E5%9B%BE%5D%E6%90%AD%E8%BD%BD%E7%A5%9E%E7%A7%98GDR3%E5%9B%BA%E4%BB%B6%E7%9A%84Lumia+920&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609105052/u/47/f/624776/c/34306/s/31412d63/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609105052/u/47/f/624776/c/34306/s/31412d63/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609105052/u/47/f/624776/c/34306/s/31412d63/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T14:03:03+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252792.htm">
	<title>cnBeta.COM: Windows 7 截至2013年9月更新补丁汇总</title>
	<link>http://www.cnbeta.com/articles/252792.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;感谢&lt;a href=&quot;http://t.qq.com/ikimi1987&quot; target=&quot;_blank&quot;&gt;ikimi&lt;/a&gt;的投递&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Windows 7 SP1补丁包包含Windows7SP1中文版所有重要补丁，可离线安装，适用于Windows 7 SP1 (x86 / x64) 简体中文系统，包含Internet Explorer 8补丁和IE兼容性补丁。安装程序会自动检测跳过系统已安装的更新程序，支持集成系统的更新程序自动检测。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/31412765/sc/28/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252792.htm&amp;t=Windows+7+%E6%88%AA%E8%87%B32013%E5%B9%B49%E6%9C%88%E6%9B%B4%E6%96%B0%E8%A1%A5%E4%B8%81%E6%B1%87%E6%80%BB&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252792.htm&amp;t=Windows+7+%E6%88%AA%E8%87%B32013%E5%B9%B49%E6%9C%88%E6%9B%B4%E6%96%B0%E8%A1%A5%E4%B8%81%E6%B1%87%E6%80%BB&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252792.htm&amp;t=Windows+7+%E6%88%AA%E8%87%B32013%E5%B9%B49%E6%9C%88%E6%9B%B4%E6%96%B0%E8%A1%A5%E4%B8%81%E6%B1%87%E6%80%BB&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252792.htm&amp;t=Windows+7+%E6%88%AA%E8%87%B32013%E5%B9%B49%E6%9C%88%E6%9B%B4%E6%96%B0%E8%A1%A5%E4%B8%81%E6%B1%87%E6%80%BB&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252792.htm&amp;t=Windows+7+%E6%88%AA%E8%87%B32013%E5%B9%B49%E6%9C%88%E6%9B%B4%E6%96%B0%E8%A1%A5%E4%B8%81%E6%B1%87%E6%80%BB&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609104388/u/47/f/624776/c/34306/s/31412765/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609104388/u/47/f/624776/c/34306/s/31412765/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609104388/u/47/f/624776/c/34306/s/31412765/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T13:29:50+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252791.htm">
	<title>cnBeta.COM: 美国中学生因用智能手机应用程序模拟射击同学被捕</title>
	<link>http://www.cnbeta.com/articles/252791.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;路易斯安那州的一名高中学生，因为使用智能手机应用程序模拟射击同学而被捕，引发了&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://news.slashdot.org/story/13/09/14/123236/student-arrested-for-using-phone-app-to-shoot-classmates&quot;&gt;&lt;strong&gt;&lt;span&gt;广泛争议&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;。&lt;/strong&gt;他使用的应用程序叫&lt;a target=&quot;_blank&quot; href=&quot;https://itunes.apple.com/us/app/real-strike-original-3d-augmented/id507884100?mt=8&quot;&gt;&lt;span&gt;The Real Strike&lt;/span&gt;&lt;/a&gt;， 是一款模拟第一人称射击的游戏，利用设备上的摄像头，在真实世界背景中叠加FPS风格的武器和UI。这位学生在玩过之后不明智的将视频贴到了 YouTube，一位学生家长看到视频之后向警方举报。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3140224d/sc/28/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252791.htm&amp;t=%E7%BE%8E%E5%9B%BD%E4%B8%AD%E5%AD%A6%E7%94%9F%E5%9B%A0%E7%94%A8%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%A8%A1%E6%8B%9F%E5%B0%84%E5%87%BB%E5%90%8C%E5%AD%A6%E8%A2%AB%E6%8D%95&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252791.htm&amp;t=%E7%BE%8E%E5%9B%BD%E4%B8%AD%E5%AD%A6%E7%94%9F%E5%9B%A0%E7%94%A8%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%A8%A1%E6%8B%9F%E5%B0%84%E5%87%BB%E5%90%8C%E5%AD%A6%E8%A2%AB%E6%8D%95&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252791.htm&amp;t=%E7%BE%8E%E5%9B%BD%E4%B8%AD%E5%AD%A6%E7%94%9F%E5%9B%A0%E7%94%A8%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%A8%A1%E6%8B%9F%E5%B0%84%E5%87%BB%E5%90%8C%E5%AD%A6%E8%A2%AB%E6%8D%95&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252791.htm&amp;t=%E7%BE%8E%E5%9B%BD%E4%B8%AD%E5%AD%A6%E7%94%9F%E5%9B%A0%E7%94%A8%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%A8%A1%E6%8B%9F%E5%B0%84%E5%87%BB%E5%90%8C%E5%AD%A6%E8%A2%AB%E6%8D%95&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252791.htm&amp;t=%E7%BE%8E%E5%9B%BD%E4%B8%AD%E5%AD%A6%E7%94%9F%E5%9B%A0%E7%94%A8%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%A8%A1%E6%8B%9F%E5%B0%84%E5%87%BB%E5%90%8C%E5%AD%A6%E8%A2%AB%E6%8D%95&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173608940697/u/47/f/624776/c/34306/s/3140224d/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173608940697/u/47/f/624776/c/34306/s/3140224d/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173608940697/u/47/f/624776/c/34306/s/3140224d/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T11:38:13+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252790.htm">
	<title>cnBeta.COM: 熔岩灯半世纪累计售出百万盏</title>
	<link>http://www.cnbeta.com/articles/252790.htm</link>
	<content:encoded>&lt;p&gt;熔岩灯有人亦称为水母灯，玻璃瓶内就好像有熔岩流动一样，是曾经风靡全球的室内摆设。&lt;span&gt;熔岩灯由英国一名工程师发明，半世纪以来一直是不少人喜爱的摆设，&lt;/span&gt;今年是熔岩灯诞生五十周年，又再吸引不少人的目光。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3140716f/sc/38/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252790.htm&amp;t=%E7%86%94%E5%B2%A9%E7%81%AF%E5%8D%8A%E4%B8%96%E7%BA%AA%E7%B4%AF%E8%AE%A1%E5%94%AE%E5%87%BA%E7%99%BE%E4%B8%87%E7%9B%8F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252790.htm&amp;t=%E7%86%94%E5%B2%A9%E7%81%AF%E5%8D%8A%E4%B8%96%E7%BA%AA%E7%B4%AF%E8%AE%A1%E5%94%AE%E5%87%BA%E7%99%BE%E4%B8%87%E7%9B%8F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252790.htm&amp;t=%E7%86%94%E5%B2%A9%E7%81%AF%E5%8D%8A%E4%B8%96%E7%BA%AA%E7%B4%AF%E8%AE%A1%E5%94%AE%E5%87%BA%E7%99%BE%E4%B8%87%E7%9B%8F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252790.htm&amp;t=%E7%86%94%E5%B2%A9%E7%81%AF%E5%8D%8A%E4%B8%96%E7%BA%AA%E7%B4%AF%E8%AE%A1%E5%94%AE%E5%87%BA%E7%99%BE%E4%B8%87%E7%9B%8F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252790.htm&amp;t=%E7%86%94%E5%B2%A9%E7%81%AF%E5%8D%8A%E4%B8%96%E7%BA%AA%E7%B4%AF%E8%AE%A1%E5%94%AE%E5%87%BA%E7%99%BE%E4%B8%87%E7%9B%8F&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609101853/u/47/f/624776/c/34306/s/3140716f/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609101853/u/47/f/624776/c/34306/s/3140716f/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609101853/u/47/f/624776/c/34306/s/3140716f/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T11:15:32+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252789.htm">
	<title>cnBeta.COM: [详讯]音频界先驱杜比在家中去世 享年80岁</title>
	<link>http://www.cnbeta.com/articles/252789.htm</link>
	<content:encoded>&lt;p&gt;9月14日消息，杜比实验室今天宣布，美国发明家瑞·杜比（Ray Dolby）于美国时间9月12日在旧金山家中逝世，享年80岁。杜比博士近年罹患老年痴呆症，今年7月被诊断患上急性白血病。杜比实验室称，杜比于1965年创立杜比实验室，推动视听科学进步，杜比博士在降噪及环绕声方面的开拓性工作，为行业带来技术发展，他拥有50多项美国专利。&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/3140716e/sc/17/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252789.htm&amp;t=%5B%E8%AF%A6%E8%AE%AF%5D%E9%9F%B3%E9%A2%91%E7%95%8C%E5%85%88%E9%A9%B1%E6%9D%9C%E6%AF%94%E5%9C%A8%E5%AE%B6%E4%B8%AD%E5%8E%BB%E4%B8%96+%E4%BA%AB%E5%B9%B480%E5%B2%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252789.htm&amp;t=%5B%E8%AF%A6%E8%AE%AF%5D%E9%9F%B3%E9%A2%91%E7%95%8C%E5%85%88%E9%A9%B1%E6%9D%9C%E6%AF%94%E5%9C%A8%E5%AE%B6%E4%B8%AD%E5%8E%BB%E4%B8%96+%E4%BA%AB%E5%B9%B480%E5%B2%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252789.htm&amp;t=%5B%E8%AF%A6%E8%AE%AF%5D%E9%9F%B3%E9%A2%91%E7%95%8C%E5%85%88%E9%A9%B1%E6%9D%9C%E6%AF%94%E5%9C%A8%E5%AE%B6%E4%B8%AD%E5%8E%BB%E4%B8%96+%E4%BA%AB%E5%B9%B480%E5%B2%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252789.htm&amp;t=%5B%E8%AF%A6%E8%AE%AF%5D%E9%9F%B3%E9%A2%91%E7%95%8C%E5%85%88%E9%A9%B1%E6%9D%9C%E6%AF%94%E5%9C%A8%E5%AE%B6%E4%B8%AD%E5%8E%BB%E4%B8%96+%E4%BA%AB%E5%B9%B480%E5%B2%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252789.htm&amp;t=%5B%E8%AF%A6%E8%AE%AF%5D%E9%9F%B3%E9%A2%91%E7%95%8C%E5%85%88%E9%A9%B1%E6%9D%9C%E6%AF%94%E5%9C%A8%E5%AE%B6%E4%B8%AD%E5%8E%BB%E4%B8%96+%E4%BA%AB%E5%B9%B480%E5%B2%81&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/173609101852/u/47/f/624776/c/34306/s/3140716e/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/173609101852/u/47/f/624776/c/34306/s/3140716e/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/173609101852/u/47/f/624776/c/34306/s/3140716e/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T11:10:24+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252788.htm">
	<title>cnBeta.COM: 开发者吐槽Xbox One：PS4比它快一半</title>
	<link>http://www.cnbeta.com/articles/252788.htm</link>
	<content:encoded>&lt;p&gt;&lt;strong&gt;今年的两款游戏主机PS4和Xbox One都将在11月份正式开卖，关于二者的性能对比之争从发布前就已经开始&lt;/strong&gt;，到现在也没有一个定论，下面我们来听听开发者们的看法吧。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/313fe28f/sc/28/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252788.htm&amp;t=%E5%BC%80%E5%8F%91%E8%80%85%E5%90%90%E6%A7%BDXbox+One%EF%BC%9APS4%E6%AF%94%E5%AE%83%E5%BF%AB%E4%B8%80%E5%8D%8A&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252788.htm&amp;t=%E5%BC%80%E5%8F%91%E8%80%85%E5%90%90%E6%A7%BDXbox+One%EF%BC%9APS4%E6%AF%94%E5%AE%83%E5%BF%AB%E4%B8%80%E5%8D%8A&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252788.htm&amp;t=%E5%BC%80%E5%8F%91%E8%80%85%E5%90%90%E6%A7%BDXbox+One%EF%BC%9APS4%E6%AF%94%E5%AE%83%E5%BF%AB%E4%B8%80%E5%8D%8A&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252788.htm&amp;t=%E5%BC%80%E5%8F%91%E8%80%85%E5%90%90%E6%A7%BDXbox+One%EF%BC%9APS4%E6%AF%94%E5%AE%83%E5%BF%AB%E4%B8%80%E5%8D%8A&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252788.htm&amp;t=%E5%BC%80%E5%8F%91%E8%80%85%E5%90%90%E6%A7%BDXbox+One%EF%BC%9APS4%E6%AF%94%E5%AE%83%E5%BF%AB%E4%B8%80%E5%8D%8A&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/174726963108/u/47/f/624776/c/34306/s/313fe28f/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/174726963108/u/47/f/624776/c/34306/s/313fe28f/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/174726963108/u/47/f/624776/c/34306/s/313fe28f/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T10:55:53+00:00</dc:date>
</item>
<item rdf:about="http://www.cnbeta.com/articles/252787.htm">
	<title>cnBeta.COM: 类Surface最薄Windows 8平板 - 索尼Tap11 定价公布</title>
	<link>http://www.cnbeta.com/articles/252787.htm</link>
	<content:encoded>&lt;p&gt;2013年柏林国际电子消费品展览会(IFA)上，日本电子巨头索尼发布了一款革命性的PC平板二合一产品——VAIO Tap 11。这款平板式笔记本电脑采用了首创分离式磁力键盘设计，并预装Windows 8操作系统。目前官网给出了三种Haswell配置的定价，分别定价6999元（i3），7999元（i5）和10599（i7）元人民币。&lt;/p&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://cnbeta.feedsportal.com/c/34306/f/624776/s/313fe28b/sc/28/mf.gif&quot; border=&quot;0&quot; /&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;div class=&quot;mf-viral&quot;&gt;&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;a href=&quot;http://share.feedsportal.com/share/twitter/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252787.htm&amp;t=%E7%B1%BBSurface%E6%9C%80%E8%96%84Windows+8%E5%B9%B3%E6%9D%BF+-+%E7%B4%A2%E5%B0%BCTap11+%E5%AE%9A%E4%BB%B7%E5%85%AC%E5%B8%83&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/twitter.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/facebook/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252787.htm&amp;t=%E7%B1%BBSurface%E6%9C%80%E8%96%84Windows+8%E5%B9%B3%E6%9D%BF+-+%E7%B4%A2%E5%B0%BCTap11+%E5%AE%9A%E4%BB%B7%E5%85%AC%E5%B8%83&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/facebook.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/linkedin/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252787.htm&amp;t=%E7%B1%BBSurface%E6%9C%80%E8%96%84Windows+8%E5%B9%B3%E6%9D%BF+-+%E7%B4%A2%E5%B0%BCTap11+%E5%AE%9A%E4%BB%B7%E5%85%AC%E5%B8%83&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/linkedin.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/gplus/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252787.htm&amp;t=%E7%B1%BBSurface%E6%9C%80%E8%96%84Windows+8%E5%B9%B3%E6%9D%BF+-+%E7%B4%A2%E5%B0%BCTap11+%E5%AE%9A%E4%BB%B7%E5%85%AC%E5%B8%83&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/googleplus.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://share.feedsportal.com/share/email/?u=http%3A%2F%2Fwww.cnbeta.com%2Farticles%2F252787.htm&amp;t=%E7%B1%BBSurface%E6%9C%80%E8%96%84Windows+8%E5%B9%B3%E6%9D%BF+-+%E7%B4%A2%E5%B0%BCTap11+%E5%AE%9A%E4%BB%B7%E5%85%AC%E5%B8%83&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://res3.feedsportal.com/social/email.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://da.feedsportal.com/r/174726963107/u/47/f/624776/c/34306/s/313fe28b/a2.htm&quot;&gt;&lt;img src=&quot;http://da.feedsportal.com/r/174726963107/u/47/f/624776/c/34306/s/313fe28b/a2.img&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;img width=&quot;1&quot; height=&quot;1&quot; src=&quot;http://pi.feedsportal.com/r/174726963107/u/47/f/624776/c/34306/s/313fe28b/a2t.img&quot; border=&quot;0&quot; /&gt;</content:encoded>
	<dc:date>2013-09-15T10:55:42+00:00</dc:date>
</item>

</rdf:RDF>
